(function () {
  'use strict';

  var SwitchDarkmode=function SwitchDarkmode(){// === DOM & VARS ===
  var DOM={};DOM.html=document.querySelector('html');DOM.switchDarkmode=document.querySelector('.m-switch-darkmode input');// === INIT =========
  var init=function init(){setCurrentLightMode();// darkmode switch
  DOM.switchDarkmode.addEventListener('change',onToggleSwitchDarkmode);};// === EVENTS & XHR =======
  var onToggleSwitchDarkmode=function onToggleSwitchDarkmode(e){setCurrentLightMode();};// === FUNCTIONS ====
  var setCurrentLightMode=function setCurrentLightMode(){if(DOM.switchDarkmode.checked){DOM.html.classList.add('bg-dark');}else {DOM.html.classList.remove('bg-dark');}};init();};

  var AboutUsPage=function AboutUsPage(){// === DOM & VARS ===
  var init=function init(){console.log('about');};// === EVENTHANDLER ===
  // ==== XHR ===========
  // === FUNCTIONS ====
  init();};

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getDefaultExportFromCjs (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  var validator$3 = {exports: {}};

  var toDate = {exports: {}};

  var assertString = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=assertString;function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function assertString(input){var isString=typeof input==='string'||input instanceof String;if(!isString){var invalidType=_typeof(input);if(input===null)invalidType='null';else if(invalidType==='object')invalidType=input.constructor.name;throw new TypeError("Expected a string but received a ".concat(invalidType));}}module.exports=exports.default;module.exports.default=exports.default;})(assertString,assertString.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toDate;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function toDate(date){(0, _assertString.default)(date);date=Date.parse(date);return !isNaN(date)?new Date(date):null;}module.exports=exports.default;module.exports.default=exports.default;})(toDate,toDate.exports);

  var toFloat = {exports: {}};

  var isFloat$1 = {};

  var alpha$1 = {};

  Object.defineProperty(alpha$1,"__esModule",{value:true});alpha$1.commaDecimal=alpha$1.dotDecimal=alpha$1.farsiLocales=alpha$1.arabicLocales=alpha$1.englishLocales=alpha$1.decimal=alpha$1.alphanumeric=alpha$1.alpha=void 0;var alpha={'en-US':/^[A-Z]+$/i,'az-AZ':/^[A-VXYZÇƏĞİıÖŞÜ]+$/i,'bg-BG':/^[А-Я]+$/i,'cs-CZ':/^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,'da-DK':/^[A-ZÆØÅ]+$/i,'de-DE':/^[A-ZÄÖÜß]+$/i,'el-GR':/^[Α-ώ]+$/i,'es-ES':/^[A-ZÁÉÍÑÓÚÜ]+$/i,'fa-IR':/^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,'fi-FI':/^[A-ZÅÄÖ]+$/i,'fr-FR':/^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,'it-IT':/^[A-ZÀÉÈÌÎÓÒÙ]+$/i,'nb-NO':/^[A-ZÆØÅ]+$/i,'nl-NL':/^[A-ZÁÉËÏÓÖÜÚ]+$/i,'nn-NO':/^[A-ZÆØÅ]+$/i,'hu-HU':/^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,'pl-PL':/^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,'pt-PT':/^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,'ru-RU':/^[А-ЯЁ]+$/i,'sl-SI':/^[A-ZČĆĐŠŽ]+$/i,'sk-SK':/^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,'sr-RS@latin':/^[A-ZČĆŽŠĐ]+$/i,'sr-RS':/^[А-ЯЂЈЉЊЋЏ]+$/i,'sv-SE':/^[A-ZÅÄÖ]+$/i,'th-TH':/^[ก-๐\s]+$/i,'tr-TR':/^[A-ZÇĞİıÖŞÜ]+$/i,'uk-UA':/^[А-ЩЬЮЯЄIЇҐі]+$/i,'vi-VN':/^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,'ku-IQ':/^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,ar:/^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,he:/^[א-ת]+$/,fa:/^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,'hi-IN':/^[\u0900-\u0961]+[\u0972-\u097F]*$/i};alpha$1.alpha=alpha;var alphanumeric={'en-US':/^[0-9A-Z]+$/i,'az-AZ':/^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,'bg-BG':/^[0-9А-Я]+$/i,'cs-CZ':/^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,'da-DK':/^[0-9A-ZÆØÅ]+$/i,'de-DE':/^[0-9A-ZÄÖÜß]+$/i,'el-GR':/^[0-9Α-ω]+$/i,'es-ES':/^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,'fi-FI':/^[0-9A-ZÅÄÖ]+$/i,'fr-FR':/^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,'it-IT':/^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,'hu-HU':/^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,'nb-NO':/^[0-9A-ZÆØÅ]+$/i,'nl-NL':/^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,'nn-NO':/^[0-9A-ZÆØÅ]+$/i,'pl-PL':/^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,'pt-PT':/^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,'ru-RU':/^[0-9А-ЯЁ]+$/i,'sl-SI':/^[0-9A-ZČĆĐŠŽ]+$/i,'sk-SK':/^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,'sr-RS@latin':/^[0-9A-ZČĆŽŠĐ]+$/i,'sr-RS':/^[0-9А-ЯЂЈЉЊЋЏ]+$/i,'sv-SE':/^[0-9A-ZÅÄÖ]+$/i,'th-TH':/^[ก-๙\s]+$/i,'tr-TR':/^[0-9A-ZÇĞİıÖŞÜ]+$/i,'uk-UA':/^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,'ku-IQ':/^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,'vi-VN':/^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,ar:/^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,he:/^[0-9א-ת]+$/,fa:/^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,'hi-IN':/^[\u0900-\u0963]+[\u0966-\u097F]*$/i};alpha$1.alphanumeric=alphanumeric;var decimal={'en-US':'.',ar:'٫'};alpha$1.decimal=decimal;var englishLocales=['AU','GB','HK','IN','NZ','ZA','ZM'];alpha$1.englishLocales=englishLocales;for(var locale,i$1=0;i$1<englishLocales.length;i$1++){locale="en-".concat(englishLocales[i$1]);alpha[locale]=alpha['en-US'];alphanumeric[locale]=alphanumeric['en-US'];decimal[locale]=decimal['en-US'];}// Source: http://www.localeplanet.com/java/
  var arabicLocales=['AE','BH','DZ','EG','IQ','JO','KW','LB','LY','MA','QM','QA','SA','SD','SY','TN','YE'];alpha$1.arabicLocales=arabicLocales;for(var _locale,_i=0;_i<arabicLocales.length;_i++){_locale="ar-".concat(arabicLocales[_i]);alpha[_locale]=alpha.ar;alphanumeric[_locale]=alphanumeric.ar;decimal[_locale]=decimal.ar;}var farsiLocales=['IR','AF'];alpha$1.farsiLocales=farsiLocales;for(var _locale2,_i2=0;_i2<farsiLocales.length;_i2++){_locale2="fa-".concat(farsiLocales[_i2]);alphanumeric[_locale2]=alphanumeric.fa;decimal[_locale2]=decimal.ar;}// Source: https://en.wikipedia.org/wiki/Decimal_mark
  var dotDecimal=['ar-EG','ar-LB','ar-LY'];alpha$1.dotDecimal=dotDecimal;var commaDecimal=['bg-BG','cs-CZ','da-DK','de-DE','el-GR','en-ZM','es-ES','fr-CA','fr-FR','id-ID','it-IT','ku-IQ','hi-IN','hu-HU','nb-NO','nn-NO','nl-NL','pl-PL','pt-PT','ru-RU','sl-SI','sr-RS@latin','sr-RS','sv-SE','tr-TR','uk-UA','vi-VN'];alpha$1.commaDecimal=commaDecimal;for(var _i3=0;_i3<dotDecimal.length;_i3++){decimal[dotDecimal[_i3]]=decimal['en-US'];}for(var _i4=0;_i4<commaDecimal.length;_i4++){decimal[commaDecimal[_i4]]=',';}alpha['fr-CA']=alpha['fr-FR'];alphanumeric['fr-CA']=alphanumeric['fr-FR'];alpha['pt-BR']=alpha['pt-PT'];alphanumeric['pt-BR']=alphanumeric['pt-PT'];decimal['pt-BR']=decimal['pt-PT'];// see #862
  alpha['pl-Pl']=alpha['pl-PL'];alphanumeric['pl-Pl']=alphanumeric['pl-PL'];decimal['pl-Pl']=decimal['pl-PL'];// see #1455
  alpha['fa-AF']=alpha.fa;

  Object.defineProperty(isFloat$1,"__esModule",{value:true});isFloat$1.default=isFloat;isFloat$1.locales=void 0;var _assertString$a=_interopRequireDefault$a(assertString.exports);var _alpha$2=alpha$1;function _interopRequireDefault$a(obj){return obj&&obj.__esModule?obj:{default:obj};}function isFloat(str,options){(0, _assertString$a.default)(str);options=options||{};var float=new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\".concat(options.locale?_alpha$2.decimal[options.locale]:'.',"[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$"));if(str===''||str==='.'||str==='-'||str==='+'){return false;}var value=parseFloat(str.replace(',','.'));return float.test(str)&&(!options.hasOwnProperty('min')||value>=options.min)&&(!options.hasOwnProperty('max')||value<=options.max)&&(!options.hasOwnProperty('lt')||value<options.lt)&&(!options.hasOwnProperty('gt')||value>options.gt);}var locales$5=Object.keys(_alpha$2.decimal);isFloat$1.locales=locales$5;

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toFloat;var _isFloat=_interopRequireDefault(isFloat$1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function toFloat(str){if(!(0, _isFloat.default)(str))return NaN;return parseFloat(str);}module.exports=exports.default;module.exports.default=exports.default;})(toFloat,toFloat.exports);

  var toInt = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toInt;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function toInt(str,radix){(0, _assertString.default)(str);return parseInt(str,radix||10);}module.exports=exports.default;module.exports.default=exports.default;})(toInt,toInt.exports);

  var toBoolean = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toBoolean;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function toBoolean(str,strict){(0, _assertString.default)(str);if(strict){return str==='1'||/^true$/i.test(str);}return str!=='0'&&!/^false$/i.test(str)&&str!=='';}module.exports=exports.default;module.exports.default=exports.default;})(toBoolean,toBoolean.exports);

  var equals = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=equals;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function equals(str,comparison){(0, _assertString.default)(str);return str===comparison;}module.exports=exports.default;module.exports.default=exports.default;})(equals,equals.exports);

  var contains = {exports: {}};

  var toString$5 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=toString;function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function toString(input){if(_typeof(input)==='object'&&input!==null){if(typeof input.toString==='function'){input=input.toString();}else {input='[object Object]';}}else if(input===null||typeof input==='undefined'||isNaN(input)&&!input.length){input='';}return String(input);}module.exports=exports.default;module.exports.default=exports.default;})(toString$5,toString$5.exports);

  var merge$2 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=merge;function merge(){var obj=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var defaults=arguments.length>1?arguments[1]:undefined;for(var key in defaults){if(typeof obj[key]==='undefined'){obj[key]=defaults[key];}}return obj;}module.exports=exports.default;module.exports.default=exports.default;})(merge$2,merge$2.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=contains;var _assertString=_interopRequireDefault(assertString.exports);var _toString=_interopRequireDefault(toString$5.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaulContainsOptions={ignoreCase:false,minOccurrences:1};function contains(str,elem,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,defaulContainsOptions);if(options.ignoreCase){return str.toLowerCase().split((0, _toString.default)(elem).toLowerCase()).length>options.minOccurrences;}return str.split((0, _toString.default)(elem)).length>options.minOccurrences;}module.exports=exports.default;module.exports.default=exports.default;})(contains,contains.exports);

  var matches$1 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=matches;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function matches(str,pattern,modifiers){(0, _assertString.default)(str);if(Object.prototype.toString.call(pattern)!=='[object RegExp]'){pattern=new RegExp(pattern,modifiers);}return pattern.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(matches$1,matches$1.exports);

  var isEmail = {exports: {}};

  var isByteLength = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isByteLength;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/* eslint-disable prefer-rest-params */function isByteLength(str,options){(0, _assertString.default)(str);var min;var max;if(_typeof(options)==='object'){min=options.min||0;max=options.max;}else {// backwards compatibility: isByteLength(str, min [, max])
  min=arguments[1];max=arguments[2];}var len=encodeURI(str).split(/%..|./).length-1;return len>=min&&(typeof max==='undefined'||len<=max);}module.exports=exports.default;module.exports.default=exports.default;})(isByteLength,isByteLength.exports);

  var isFQDN = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isFQDN;var _assertString=_interopRequireDefault(assertString.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var default_fqdn_options={require_tld:true,allow_underscores:false,allow_trailing_dot:false,allow_numeric_tld:false,allow_wildcard:false};function isFQDN(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,default_fqdn_options);/* Remove the optional trailing dot before checking validity */if(options.allow_trailing_dot&&str[str.length-1]==='.'){str=str.substring(0,str.length-1);}/* Remove the optional wildcard before checking validity */if(options.allow_wildcard===true&&str.indexOf('*.')===0){str=str.substring(2);}var parts=str.split('.');var tld=parts[parts.length-1];if(options.require_tld){// disallow fqdns without tld
  if(parts.length<2){return false;}if(!/^([a-z\u00A1-\u00A8\u00AA-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)){return false;}// disallow spaces
  if(/\s/.test(tld)){return false;}}// reject numeric TLDs
  if(!options.allow_numeric_tld&&/^\d+$/.test(tld)){return false;}return parts.every(function(part){if(part.length>63){return false;}if(!/^[a-z_\u00a1-\uffff0-9-]+$/i.test(part)){return false;}// disallow full-width chars
  if(/[\uff01-\uff5e]/.test(part)){return false;}// disallow parts starting or ending with hyphen
  if(/^-|-$/.test(part)){return false;}if(!options.allow_underscores&&/_/.test(part)){return false;}return true;});}module.exports=exports.default;module.exports.default=exports.default;})(isFQDN,isFQDN.exports);

  var isIP = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isIP;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
  	11.3.  Examples

  	   The following addresses

  	             fe80::1234 (on the 1st link of the node)
  	             ff02::5678 (on the 5th link of the node)
  	             ff08::9abc (on the 10th organization of the node)

  	   would be represented as follows:

  	             fe80::1234%1
  	             ff02::5678%5
  	             ff08::9abc%10

  	   (Here we assume a natural translation from a zone index to the
  	   <zone_id> part, where the Nth zone of any scope is translated into
  	   "N".)

  	   If we use interface names as <zone_id>, those addresses could also be
  	   represented as follows:

  	            fe80::1234%ne0
  	            ff02::5678%pvc1.3
  	            ff08::9abc%interface10

  	   where the interface "ne0" belongs to the 1st link, "pvc1.3" belongs
  	   to the 5th link, and "interface10" belongs to the 10th organization.
  	 * * */var IPv4SegmentFormat='(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';var IPv4AddressFormat="(".concat(IPv4SegmentFormat,"[.]){3}").concat(IPv4SegmentFormat);var IPv4AddressRegExp=new RegExp("^".concat(IPv4AddressFormat,"$"));var IPv6SegmentFormat='(?:[0-9a-fA-F]{1,4})';var IPv6AddressRegExp=new RegExp('^('+"(?:".concat(IPv6SegmentFormat,":){7}(?:").concat(IPv6SegmentFormat,"|:)|")+"(?:".concat(IPv6SegmentFormat,":){6}(?:").concat(IPv4AddressFormat,"|:").concat(IPv6SegmentFormat,"|:)|")+"(?:".concat(IPv6SegmentFormat,":){5}(?::").concat(IPv4AddressFormat,"|(:").concat(IPv6SegmentFormat,"){1,2}|:)|")+"(?:".concat(IPv6SegmentFormat,":){4}(?:(:").concat(IPv6SegmentFormat,"){0,1}:").concat(IPv4AddressFormat,"|(:").concat(IPv6SegmentFormat,"){1,3}|:)|")+"(?:".concat(IPv6SegmentFormat,":){3}(?:(:").concat(IPv6SegmentFormat,"){0,2}:").concat(IPv4AddressFormat,"|(:").concat(IPv6SegmentFormat,"){1,4}|:)|")+"(?:".concat(IPv6SegmentFormat,":){2}(?:(:").concat(IPv6SegmentFormat,"){0,3}:").concat(IPv4AddressFormat,"|(:").concat(IPv6SegmentFormat,"){1,5}|:)|")+"(?:".concat(IPv6SegmentFormat,":){1}(?:(:").concat(IPv6SegmentFormat,"){0,4}:").concat(IPv4AddressFormat,"|(:").concat(IPv6SegmentFormat,"){1,6}|:)|")+"(?::((?::".concat(IPv6SegmentFormat,"){0,5}:").concat(IPv4AddressFormat,"|(?::").concat(IPv6SegmentFormat,"){1,7}|:))")+')(%[0-9a-zA-Z-.:]{1,})?$');function isIP(str){var version=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';(0, _assertString.default)(str);version=String(version);if(!version){return isIP(str,4)||isIP(str,6);}if(version==='4'){if(!IPv4AddressRegExp.test(str)){return false;}var parts=str.split('.').sort(function(a,b){return a-b;});return parts[3]<=255;}if(version==='6'){return !!IPv6AddressRegExp.test(str);}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isIP,isIP.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isEmail;var _assertString=_interopRequireDefault(assertString.exports);var _merge=_interopRequireDefault(merge$2.exports);var _isByteLength=_interopRequireDefault(isByteLength.exports);var _isFQDN=_interopRequireDefault(isFQDN.exports);var _isIP=_interopRequireDefault(isIP.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var default_email_options={allow_display_name:false,require_display_name:false,allow_utf8_local_part:true,require_tld:true,blacklisted_chars:'',ignore_max_length:false,host_blacklist:[]};/* eslint-disable max-len */ /* eslint-disable no-control-regex */var splitNameAddress=/^([^\x00-\x1F\x7F-\x9F\cX]+)</i;var emailUserPart=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;var gmailUserPart=/^[a-z\d]+$/;var quotedEmailUser=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;var emailUserUtf8Part=/^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;var quotedEmailUserUtf8=/^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;var defaultMaxEmailLength=254;/* eslint-enable max-len */ /* eslint-enable no-control-regex */ /**
  	 * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2
  	 * @param {String} display_name
  	 */function validateDisplayName(display_name){var display_name_without_quotes=display_name.replace(/^"(.+)"$/,'$1');// display name with only spaces is not valid
  if(!display_name_without_quotes.trim()){return false;}// check whether display name contains illegal character
  var contains_illegal=/[\.";<>]/.test(display_name_without_quotes);if(contains_illegal){// if contains illegal characters,
  // must to be enclosed in double-quotes, otherwise it's not a valid display name
  if(display_name_without_quotes===display_name){return false;}// the quotes in display name must start with character symbol \
  var all_start_with_back_slash=display_name_without_quotes.split('"').length===display_name_without_quotes.split('\\"').length;if(!all_start_with_back_slash){return false;}}return true;}function isEmail(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,default_email_options);if(options.require_display_name||options.allow_display_name){var display_email=str.match(splitNameAddress);if(display_email){var display_name=display_email[1];// Remove display name and angle brackets to get email address
  // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)
  str=str.replace(display_name,'').replace(/(^<|>$)/g,'');// sometimes need to trim the last space to get the display name
  // because there may be a space between display name and email address
  // eg. myname <address@gmail.com>
  // the display name is `myname` instead of `myname `, so need to trim the last space
  if(display_name.endsWith(' ')){display_name=display_name.substr(0,display_name.length-1);}if(!validateDisplayName(display_name)){return false;}}else if(options.require_display_name){return false;}}if(!options.ignore_max_length&&str.length>defaultMaxEmailLength){return false;}var parts=str.split('@');var domain=parts.pop();var lower_domain=domain.toLowerCase();if(options.host_blacklist.includes(lower_domain)){return false;}var user=parts.join('@');if(options.domain_specific_validation&&(lower_domain==='gmail.com'||lower_domain==='googlemail.com')){/*
  	      Previously we removed dots for gmail addresses before validating.
  	      This was removed because it allows `multiple..dots@gmail.com`
  	      to be reported as valid, but it is not.
  	      Gmail only normalizes single dots, removing them from here is pointless,
  	      should be done in normalizeEmail
  	    */user=user.toLowerCase();// Removing sub-address from username before gmail validation
  var username=user.split('+')[0];// Dots are not included in gmail length restriction
  if(!(0, _isByteLength.default)(username.replace(/\./g,''),{min:6,max:30})){return false;}var _user_parts=username.split('.');for(var i=0;i<_user_parts.length;i++){if(!gmailUserPart.test(_user_parts[i])){return false;}}}if(options.ignore_max_length===false&&(!(0, _isByteLength.default)(user,{max:64})||!(0, _isByteLength.default)(domain,{max:254}))){return false;}if(!(0, _isFQDN.default)(domain,{require_tld:options.require_tld})){if(!options.allow_ip_domain){return false;}if(!(0, _isIP.default)(domain)){if(!domain.startsWith('[')||!domain.endsWith(']')){return false;}var noBracketdomain=domain.substr(1,domain.length-2);if(noBracketdomain.length===0||!(0, _isIP.default)(noBracketdomain)){return false;}}}if(user[0]==='"'){user=user.slice(1,user.length-1);return options.allow_utf8_local_part?quotedEmailUserUtf8.test(user):quotedEmailUser.test(user);}var pattern=options.allow_utf8_local_part?emailUserUtf8Part:emailUserPart;var user_parts=user.split('.');for(var _i=0;_i<user_parts.length;_i++){if(!pattern.test(user_parts[_i])){return false;}}if(options.blacklisted_chars){if(user.search(new RegExp("[".concat(options.blacklisted_chars,"]+"),'g'))!==-1)return false;}return true;}module.exports=exports.default;module.exports.default=exports.default;})(isEmail,isEmail.exports);

  var isURL = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isURL;var _assertString=_interopRequireDefault(assertString.exports);var _isFQDN=_interopRequireDefault(isFQDN.exports);var _isIP=_interopRequireDefault(isIP.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr)))return;var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"]!=null)_i["return"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}/*
  	options for isURL method

  	require_protocol - if set as true isURL will return false if protocol is not present in the URL
  	require_valid_protocol - isURL will check if the URL's protocol is present in the protocols option
  	protocols - valid protocols can be modified with this option
  	require_host - if set as false isURL will not check if host is present in the URL
  	require_port - if set as true isURL will check if port is present in the URL
  	allow_protocol_relative_urls - if set as true protocol relative URLs will be allowed
  	validate_length - if set as false isURL will skip string length validation (IE maximum is 2083)

  	*/var default_url_options={protocols:['http','https','ftp'],require_tld:true,require_protocol:false,require_host:true,require_port:false,require_valid_protocol:true,allow_underscores:false,allow_trailing_dot:false,allow_protocol_relative_urls:false,allow_fragments:true,allow_query_components:true,validate_length:true};var wrapped_ipv6=/^\[([^\]]+)\](?::([0-9]+))?$/;function isRegExp(obj){return Object.prototype.toString.call(obj)==='[object RegExp]';}function checkHost(host,matches){for(var i=0;i<matches.length;i++){var match=matches[i];if(host===match||isRegExp(match)&&match.test(host)){return true;}}return false;}function isURL(url,options){(0, _assertString.default)(url);if(!url||/[\s<>]/.test(url)){return false;}if(url.indexOf('mailto:')===0){return false;}options=(0, _merge.default)(options,default_url_options);if(options.validate_length&&url.length>=2083){return false;}if(!options.allow_fragments&&url.includes('#')){return false;}if(!options.allow_query_components&&(url.includes('?')||url.includes('&'))){return false;}var protocol,auth,host,hostname,port,port_str,split,ipv6;split=url.split('#');url=split.shift();split=url.split('?');url=split.shift();split=url.split('://');if(split.length>1){protocol=split.shift().toLowerCase();if(options.require_valid_protocol&&options.protocols.indexOf(protocol)===-1){return false;}}else if(options.require_protocol){return false;}else if(url.substr(0,2)==='//'){if(!options.allow_protocol_relative_urls){return false;}split[0]=url.substr(2);}url=split.join('://');if(url===''){return false;}split=url.split('/');url=split.shift();if(url===''&&!options.require_host){return true;}split=url.split('@');if(split.length>1){if(options.disallow_auth){return false;}if(split[0]===''){return false;}auth=split.shift();if(auth.indexOf(':')>=0&&auth.split(':').length>2){return false;}var _auth$split=auth.split(':'),_auth$split2=_slicedToArray(_auth$split,2),user=_auth$split2[0],password=_auth$split2[1];if(user===''&&password===''){return false;}}hostname=split.join('@');port_str=null;ipv6=null;var ipv6_match=hostname.match(wrapped_ipv6);if(ipv6_match){host='';ipv6=ipv6_match[1];port_str=ipv6_match[2]||null;}else {split=hostname.split(':');host=split.shift();if(split.length){port_str=split.join(':');}}if(port_str!==null&&port_str.length>0){port=parseInt(port_str,10);if(!/^[0-9]+$/.test(port_str)||port<=0||port>65535){return false;}}else if(options.require_port){return false;}if(options.host_whitelist){return checkHost(host,options.host_whitelist);}if(!(0, _isIP.default)(host)&&!(0, _isFQDN.default)(host,options)&&(!ipv6||!(0, _isIP.default)(ipv6,6))){return false;}host=host||ipv6;if(options.host_blacklist&&checkHost(host,options.host_blacklist)){return false;}return true;}module.exports=exports.default;module.exports.default=exports.default;})(isURL,isURL.exports);

  var isMACAddress = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isMACAddress;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var macAddress=/^(?:[0-9a-fA-F]{2}([-:\s]))([0-9a-fA-F]{2}\1){4}([0-9a-fA-F]{2})$/;var macAddressNoSeparators=/^([0-9a-fA-F]){12}$/;var macAddressWithDots=/^([0-9a-fA-F]{4}\.){2}([0-9a-fA-F]{4})$/;function isMACAddress(str,options){(0, _assertString.default)(str);/**
  	   * @deprecated `no_colons` TODO: remove it in the next major
  	  */if(options&&(options.no_colons||options.no_separators)){return macAddressNoSeparators.test(str);}return macAddress.test(str)||macAddressWithDots.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isMACAddress,isMACAddress.exports);

  var isIPRange = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isIPRange;var _assertString=_interopRequireDefault(assertString.exports);var _isIP=_interopRequireDefault(isIP.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var subnetMaybe=/^\d{1,3}$/;var v4Subnet=32;var v6Subnet=128;function isIPRange(str){var version=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';(0, _assertString.default)(str);var parts=str.split('/');// parts[0] -> ip, parts[1] -> subnet
  if(parts.length!==2){return false;}if(!subnetMaybe.test(parts[1])){return false;}// Disallow preceding 0 i.e. 01, 02, ...
  if(parts[1].length>1&&parts[1].startsWith('0')){return false;}var isValidIP=(0, _isIP.default)(parts[0],version);if(!isValidIP){return false;}// Define valid subnet according to IP's version
  var expectedSubnet=null;switch(String(version)){case'4':expectedSubnet=v4Subnet;break;case'6':expectedSubnet=v6Subnet;break;default:expectedSubnet=(0, _isIP.default)(parts[0],'6')?v6Subnet:v4Subnet;}return parts[1]<=expectedSubnet&&parts[1]>=0;}module.exports=exports.default;module.exports.default=exports.default;})(isIPRange,isIPRange.exports);

  var isDate$1 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isDate;var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr,i){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(arr)))return;var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"]!=null)_i["return"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _createForOfIteratorHelper(o,allowArrayLike){var it;if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return {s:F,n:function n(){if(i>=o.length)return {done:true};return {done:false,value:o[i++]};},e:function e(_e2){throw _e2;},f:F};}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=true,didErr=false,err;return {s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e3){didErr=true;err=_e3;},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}var default_date_options={format:'YYYY/MM/DD',delimiters:['/','-'],strictMode:false};function isValidFormat(format){return /(^(y{4}|y{2})[.\/-](m{1,2})[.\/-](d{1,2})$)|(^(m{1,2})[.\/-](d{1,2})[.\/-]((y{4}|y{2})$))|(^(d{1,2})[.\/-](m{1,2})[.\/-]((y{4}|y{2})$))/gi.test(format);}function zip(date,format){var zippedArr=[],len=Math.min(date.length,format.length);for(var i=0;i<len;i++){zippedArr.push([date[i],format[i]]);}return zippedArr;}function isDate(input,options){if(typeof options==='string'){// Allow backward compatbility for old format isDate(input [, format])
  options=(0, _merge.default)({format:options},default_date_options);}else {options=(0, _merge.default)(options,default_date_options);}if(typeof input==='string'&&isValidFormat(options.format)){var formatDelimiter=options.delimiters.find(function(delimiter){return options.format.indexOf(delimiter)!==-1;});var dateDelimiter=options.strictMode?formatDelimiter:options.delimiters.find(function(delimiter){return input.indexOf(delimiter)!==-1;});var dateAndFormat=zip(input.split(dateDelimiter),options.format.toLowerCase().split(formatDelimiter));var dateObj={};var _iterator=_createForOfIteratorHelper(dateAndFormat),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),dateWord=_step$value[0],formatWord=_step$value[1];if(dateWord.length!==formatWord.length){return false;}dateObj[formatWord.charAt(0)]=dateWord;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return new Date("".concat(dateObj.m,"/").concat(dateObj.d,"/").concat(dateObj.y)).getDate()===+dateObj.d;}if(!options.strictMode){return Object.prototype.toString.call(input)==='[object Date]'&&isFinite(input);}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isDate$1,isDate$1.exports);

  var isBoolean = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBoolean;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var defaultOptions={loose:false};var strictBooleans=['true','false','1','0'];var looseBooleans=[].concat(strictBooleans,['yes','no']);function isBoolean(str){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:defaultOptions;(0, _assertString.default)(str);if(options.loose){return looseBooleans.includes(str.toLowerCase());}return strictBooleans.includes(str);}module.exports=exports.default;module.exports.default=exports.default;})(isBoolean,isBoolean.exports);

  var isLocale = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isLocale;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var localeReg=/^[A-Za-z]{2,4}([_-]([A-Za-z]{4}|[\d]{3}))?([_-]([A-Za-z]{2}|[\d]{3}))?$/;function isLocale(str){(0, _assertString.default)(str);if(str==='en_US_POSIX'||str==='ca_ES_VALENCIA'){return true;}return localeReg.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isLocale,isLocale.exports);

  var isAlpha$1 = {};

  Object.defineProperty(isAlpha$1,"__esModule",{value:true});isAlpha$1.default=isAlpha;isAlpha$1.locales=void 0;var _assertString$9=_interopRequireDefault$9(assertString.exports);var _alpha$1=alpha$1;function _interopRequireDefault$9(obj){return obj&&obj.__esModule?obj:{default:obj};}function isAlpha(_str){var locale=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'en-US';var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};(0, _assertString$9.default)(_str);var str=_str;var ignore=options.ignore;if(ignore){if(ignore instanceof RegExp){str=str.replace(ignore,'');}else if(typeof ignore==='string'){str=str.replace(new RegExp("[".concat(ignore.replace(/[-[\]{}()*+?.,\\^$|#\\s]/g,'\\$&'),"]"),'g'),'');// escape regex for ignore
  }else {throw new Error('ignore should be instance of a String or RegExp');}}if(locale in _alpha$1.alpha){return _alpha$1.alpha[locale].test(str);}throw new Error("Invalid locale '".concat(locale,"'"));}var locales$4=Object.keys(_alpha$1.alpha);isAlpha$1.locales=locales$4;

  var isAlphanumeric$1 = {};

  Object.defineProperty(isAlphanumeric$1,"__esModule",{value:true});isAlphanumeric$1.default=isAlphanumeric;isAlphanumeric$1.locales=void 0;var _assertString$8=_interopRequireDefault$8(assertString.exports);var _alpha=alpha$1;function _interopRequireDefault$8(obj){return obj&&obj.__esModule?obj:{default:obj};}function isAlphanumeric(_str){var locale=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'en-US';var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};(0, _assertString$8.default)(_str);var str=_str;var ignore=options.ignore;if(ignore){if(ignore instanceof RegExp){str=str.replace(ignore,'');}else if(typeof ignore==='string'){str=str.replace(new RegExp("[".concat(ignore.replace(/[-[\]{}()*+?.,\\^$|#\\s]/g,'\\$&'),"]"),'g'),'');// escape regex for ignore
  }else {throw new Error('ignore should be instance of a String or RegExp');}}if(locale in _alpha.alphanumeric){return _alpha.alphanumeric[locale].test(str);}throw new Error("Invalid locale '".concat(locale,"'"));}var locales$3=Object.keys(_alpha.alphanumeric);isAlphanumeric$1.locales=locales$3;

  var isNumeric = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isNumeric;var _assertString=_interopRequireDefault(assertString.exports);var _alpha=alpha$1;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var numericNoSymbols=/^[0-9]+$/;function isNumeric(str,options){(0, _assertString.default)(str);if(options&&options.no_symbols){return numericNoSymbols.test(str);}return new RegExp("^[+-]?([0-9]*[".concat((options||{}).locale?_alpha.decimal[options.locale]:'.',"])?[0-9]+$")).test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isNumeric,isNumeric.exports);

  var isPassportNumber = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isPassportNumber;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
  	 * Reference:
  	 * https://en.wikipedia.org/ -- Wikipedia
  	 * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number
  	 * https://countrycode.org/ -- Country Codes
  	 */var passportRegexByCountryCode={AM:/^[A-Z]{2}\d{7}$/,// ARMENIA
  AR:/^[A-Z]{3}\d{6}$/,// ARGENTINA
  AT:/^[A-Z]\d{7}$/,// AUSTRIA
  AU:/^[A-Z]\d{7}$/,// AUSTRALIA
  BE:/^[A-Z]{2}\d{6}$/,// BELGIUM
  BG:/^\d{9}$/,// BULGARIA
  BR:/^[A-Z]{2}\d{6}$/,// BRAZIL
  BY:/^[A-Z]{2}\d{7}$/,// BELARUS
  CA:/^[A-Z]{2}\d{6}$/,// CANADA
  CH:/^[A-Z]\d{7}$/,// SWITZERLAND
  CN:/^G\d{8}$|^E(?![IO])[A-Z0-9]\d{7}$/,// CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits
  CY:/^[A-Z](\d{6}|\d{8})$/,// CYPRUS
  CZ:/^\d{8}$/,// CZECH REPUBLIC
  DE:/^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,// GERMANY
  DK:/^\d{9}$/,// DENMARK
  DZ:/^\d{9}$/,// ALGERIA
  EE:/^([A-Z]\d{7}|[A-Z]{2}\d{7})$/,// ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits
  ES:/^[A-Z0-9]{2}([A-Z0-9]?)\d{6}$/,// SPAIN
  FI:/^[A-Z]{2}\d{7}$/,// FINLAND
  FR:/^\d{2}[A-Z]{2}\d{5}$/,// FRANCE
  GB:/^\d{9}$/,// UNITED KINGDOM
  GR:/^[A-Z]{2}\d{7}$/,// GREECE
  HR:/^\d{9}$/,// CROATIA
  HU:/^[A-Z]{2}(\d{6}|\d{7})$/,// HUNGARY
  IE:/^[A-Z0-9]{2}\d{7}$/,// IRELAND
  IN:/^[A-Z]{1}-?\d{7}$/,// INDIA
  ID:/^[A-C]\d{7}$/,// INDONESIA
  IR:/^[A-Z]\d{8}$/,// IRAN
  IS:/^(A)\d{7}$/,// ICELAND
  IT:/^[A-Z0-9]{2}\d{7}$/,// ITALY
  JP:/^[A-Z]{2}\d{7}$/,// JAPAN
  KR:/^[MS]\d{8}$/,// SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]
  LT:/^[A-Z0-9]{8}$/,// LITHUANIA
  LU:/^[A-Z0-9]{8}$/,// LUXEMBURG
  LV:/^[A-Z0-9]{2}\d{7}$/,// LATVIA
  LY:/^[A-Z0-9]{8}$/,// LIBYA
  MT:/^\d{7}$/,// MALTA
  MZ:/^([A-Z]{2}\d{7})|(\d{2}[A-Z]{2}\d{5})$/,// MOZAMBIQUE
  MY:/^[AHK]\d{8}$/,// MALAYSIA
  NL:/^[A-Z]{2}[A-Z0-9]{6}\d$/,// NETHERLANDS
  PL:/^[A-Z]{2}\d{7}$/,// POLAND
  PT:/^[A-Z]\d{6}$/,// PORTUGAL
  RO:/^\d{8,9}$/,// ROMANIA
  RU:/^\d{9}$/,// RUSSIAN FEDERATION
  SE:/^\d{8}$/,// SWEDEN
  SL:/^(P)[A-Z]\d{7}$/,// SLOVANIA
  SK:/^[0-9A-Z]\d{7}$/,// SLOVAKIA
  TR:/^[A-Z]\d{8}$/,// TURKEY
  UA:/^[A-Z]{2}\d{6}$/,// UKRAINE
  US:/^\d{9}$/ // UNITED STATES
  };/**
  	 * Check if str is a valid passport number
  	 * relative to provided ISO Country Code.
  	 *
  	 * @param {string} str
  	 * @param {string} countryCode
  	 * @return {boolean}
  	 */function isPassportNumber(str,countryCode){(0, _assertString.default)(str);/** Remove All Whitespaces, Convert to UPPERCASE */var normalizedStr=str.replace(/\s/g,'').toUpperCase();return countryCode.toUpperCase()in passportRegexByCountryCode&&passportRegexByCountryCode[countryCode].test(normalizedStr);}module.exports=exports.default;module.exports.default=exports.default;})(isPassportNumber,isPassportNumber.exports);

  var isPort = {exports: {}};

  var isInt = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isInt;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var int=/^(?:[-+]?(?:0|[1-9][0-9]*))$/;var intLeadingZeroes=/^[-+]?[0-9]+$/;function isInt(str,options){(0, _assertString.default)(str);options=options||{};// Get the regex to use for testing, based on whether
  // leading zeroes are allowed or not.
  var regex=options.hasOwnProperty('allow_leading_zeroes')&&!options.allow_leading_zeroes?int:intLeadingZeroes;// Check min/max/lt/gt
  var minCheckPassed=!options.hasOwnProperty('min')||str>=options.min;var maxCheckPassed=!options.hasOwnProperty('max')||str<=options.max;var ltCheckPassed=!options.hasOwnProperty('lt')||str<options.lt;var gtCheckPassed=!options.hasOwnProperty('gt')||str>options.gt;return regex.test(str)&&minCheckPassed&&maxCheckPassed&&ltCheckPassed&&gtCheckPassed;}module.exports=exports.default;module.exports.default=exports.default;})(isInt,isInt.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isPort;var _isInt=_interopRequireDefault(isInt.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isPort(str){return (0, _isInt.default)(str,{min:0,max:65535});}module.exports=exports.default;module.exports.default=exports.default;})(isPort,isPort.exports);

  var isLowercase = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isLowercase;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isLowercase(str){(0, _assertString.default)(str);return str===str.toLowerCase();}module.exports=exports.default;module.exports.default=exports.default;})(isLowercase,isLowercase.exports);

  var isUppercase = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isUppercase;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isUppercase(str){(0, _assertString.default)(str);return str===str.toUpperCase();}module.exports=exports.default;module.exports.default=exports.default;})(isUppercase,isUppercase.exports);

  var isIMEI = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isIMEI;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var imeiRegexWithoutHypens=/^[0-9]{15}$/;var imeiRegexWithHypens=/^\d{2}-\d{6}-\d{6}-\d{1}$/;function isIMEI(str,options){(0, _assertString.default)(str);options=options||{};// default regex for checking imei is the one without hyphens
  var imeiRegex=imeiRegexWithoutHypens;if(options.allow_hyphens){imeiRegex=imeiRegexWithHypens;}if(!imeiRegex.test(str)){return false;}str=str.replace(/-/g,'');var sum=0,mul=2,l=14;for(var i=0;i<l;i++){var digit=str.substring(l-i-1,l-i);var tp=parseInt(digit,10)*mul;if(tp>=10){sum+=tp%10+1;}else {sum+=tp;}if(mul===1){mul+=1;}else {mul-=1;}}var chk=(10-sum%10)%10;if(chk!==parseInt(str.substring(14,15),10)){return false;}return true;}module.exports=exports.default;module.exports.default=exports.default;})(isIMEI,isIMEI.exports);

  var isAscii = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isAscii;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable no-control-regex */var ascii=/^[\x00-\x7F]+$/;/* eslint-enable no-control-regex */function isAscii(str){(0, _assertString.default)(str);return ascii.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isAscii,isAscii.exports);

  var isFullWidth$1 = {};

  Object.defineProperty(isFullWidth$1,"__esModule",{value:true});isFullWidth$1.default=isFullWidth;isFullWidth$1.fullWidth=void 0;var _assertString$7=_interopRequireDefault$7(assertString.exports);function _interopRequireDefault$7(obj){return obj&&obj.__esModule?obj:{default:obj};}var fullWidth=/[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;isFullWidth$1.fullWidth=fullWidth;function isFullWidth(str){(0, _assertString$7.default)(str);return fullWidth.test(str);}

  var isHalfWidth$1 = {};

  Object.defineProperty(isHalfWidth$1,"__esModule",{value:true});isHalfWidth$1.default=isHalfWidth;isHalfWidth$1.halfWidth=void 0;var _assertString$6=_interopRequireDefault$6(assertString.exports);function _interopRequireDefault$6(obj){return obj&&obj.__esModule?obj:{default:obj};}var halfWidth=/[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;isHalfWidth$1.halfWidth=halfWidth;function isHalfWidth(str){(0, _assertString$6.default)(str);return halfWidth.test(str);}

  var isVariableWidth = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isVariableWidth;var _assertString=_interopRequireDefault(assertString.exports);var _isFullWidth=isFullWidth$1;var _isHalfWidth=isHalfWidth$1;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isVariableWidth(str){(0, _assertString.default)(str);return _isFullWidth.fullWidth.test(str)&&_isHalfWidth.halfWidth.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isVariableWidth,isVariableWidth.exports);

  var isMultibyte = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isMultibyte;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable no-control-regex */var multibyte=/[^\x00-\x7F]/;/* eslint-enable no-control-regex */function isMultibyte(str){(0, _assertString.default)(str);return multibyte.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isMultibyte,isMultibyte.exports);

  var isSemVer = {exports: {}};

  var multilineRegex = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=multilineRegexp;/**
  	 * Build RegExp object from an array
  	 * of multiple/multi-line regexp parts
  	 *
  	 * @param {string[]} parts
  	 * @param {string} flags
  	 * @return {object} - RegExp object
  	 */function multilineRegexp(parts,flags){var regexpAsStringLiteral=parts.join('');return new RegExp(regexpAsStringLiteral,flags);}module.exports=exports.default;module.exports.default=exports.default;})(multilineRegex,multilineRegex.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isSemVer;var _assertString=_interopRequireDefault(assertString.exports);var _multilineRegex=_interopRequireDefault(multilineRegex.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
  	 * Regular Expression to match
  	 * semantic versioning (SemVer)
  	 * built from multi-line, multi-parts regexp
  	 * Reference: https://semver.org/
  	 */var semanticVersioningRegex=(0, _multilineRegex.default)(['^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)','(?:-((?:0|[1-9]\\d*|\\d*[a-z-][0-9a-z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-z-][0-9a-z-]*))*))','?(?:\\+([0-9a-z-]+(?:\\.[0-9a-z-]+)*))?$'],'i');function isSemVer(str){(0, _assertString.default)(str);return semanticVersioningRegex.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isSemVer,isSemVer.exports);

  var isSurrogatePair = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isSurrogatePair;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var surrogatePair=/[\uD800-\uDBFF][\uDC00-\uDFFF]/;function isSurrogatePair(str){(0, _assertString.default)(str);return surrogatePair.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isSurrogatePair,isSurrogatePair.exports);

  var isDecimal = {exports: {}};

  var includes$1 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var includes=function includes(arr,val){return arr.some(function(arrVal){return val===arrVal;});};var _default=includes;exports.default=_default;module.exports=exports.default;module.exports.default=exports.default;})(includes$1,includes$1.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isDecimal;var _merge=_interopRequireDefault(merge$2.exports);var _assertString=_interopRequireDefault(assertString.exports);var _includes=_interopRequireDefault(includes$1.exports);var _alpha=alpha$1;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function decimalRegExp(options){var regExp=new RegExp("^[-+]?([0-9]+)?(\\".concat(_alpha.decimal[options.locale],"[0-9]{").concat(options.decimal_digits,"})").concat(options.force_decimal?'':'?',"$"));return regExp;}var default_decimal_options={force_decimal:false,decimal_digits:'1,',locale:'en-US'};var blacklist=['','-','+'];function isDecimal(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,default_decimal_options);if(options.locale in _alpha.decimal){return !(0, _includes.default)(blacklist,str.replace(/ /g,''))&&decimalRegExp(options).test(str);}throw new Error("Invalid locale '".concat(options.locale,"'"));}module.exports=exports.default;module.exports.default=exports.default;})(isDecimal,isDecimal.exports);

  var isHexadecimal = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isHexadecimal;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var hexadecimal=/^(0x|0h)?[0-9A-F]+$/i;function isHexadecimal(str){(0, _assertString.default)(str);return hexadecimal.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isHexadecimal,isHexadecimal.exports);

  var isOctal = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isOctal;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var octal=/^(0o)?[0-7]+$/i;function isOctal(str){(0, _assertString.default)(str);return octal.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isOctal,isOctal.exports);

  var isDivisibleBy = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isDivisibleBy;var _assertString=_interopRequireDefault(assertString.exports);var _toFloat=_interopRequireDefault(toFloat.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isDivisibleBy(str,num){(0, _assertString.default)(str);return (0, _toFloat.default)(str)%parseInt(num,10)===0;}module.exports=exports.default;module.exports.default=exports.default;})(isDivisibleBy,isDivisibleBy.exports);

  var isHexColor = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isHexColor;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var hexcolor=/^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;function isHexColor(str){(0, _assertString.default)(str);return hexcolor.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isHexColor,isHexColor.exports);

  var isRgbColor = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isRgbColor;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var rgbColor=/^rgb\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\)$/;var rgbaColor=/^rgba\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\.\d|1(\.0)?|0(\.0)?)\)$/;var rgbColorPercent=/^rgb\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\)/;var rgbaColorPercent=/^rgba\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\.\d|1(\.0)?|0(\.0)?)\)/;function isRgbColor(str){var includePercentValues=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;(0, _assertString.default)(str);if(!includePercentValues){return rgbColor.test(str)||rgbaColor.test(str);}return rgbColor.test(str)||rgbaColor.test(str)||rgbColorPercent.test(str)||rgbaColorPercent.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isRgbColor,isRgbColor.exports);

  var isHSL = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isHSL;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var hslComma=/^hsla?\(((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%){2}(,((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%?))?\)$/i;var hslSpace=/^hsla?\(((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?))(deg|grad|rad|turn)?(\s(\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%){2}\s?(\/\s((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%?)\s?)?\)$/i;function isHSL(str){(0, _assertString.default)(str);// Strip duplicate spaces before calling the validation regex (See  #1598 for more info)
  var strippedStr=str.replace(/\s+/g,' ').replace(/\s?(hsla?\(|\)|,)\s?/ig,'$1');if(strippedStr.indexOf(',')!==-1){return hslComma.test(strippedStr);}return hslSpace.test(strippedStr);}module.exports=exports.default;module.exports.default=exports.default;})(isHSL,isHSL.exports);

  var isISRC = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isISRC;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// see http://isrc.ifpi.org/en/isrc-standard/code-syntax
  var isrc=/^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;function isISRC(str){(0, _assertString.default)(str);return isrc.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isISRC,isISRC.exports);

  var isIBAN$1 = {};

  Object.defineProperty(isIBAN$1,"__esModule",{value:true});isIBAN$1.default=isIBAN;isIBAN$1.locales=void 0;var _assertString$5=_interopRequireDefault$5(assertString.exports);function _interopRequireDefault$5(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
   * List of country codes with
   * corresponding IBAN regular expression
   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number
   */var ibanRegexThroughCountryCode={AD:/^(AD[0-9]{2})\d{8}[A-Z0-9]{12}$/,AE:/^(AE[0-9]{2})\d{3}\d{16}$/,AL:/^(AL[0-9]{2})\d{8}[A-Z0-9]{16}$/,AT:/^(AT[0-9]{2})\d{16}$/,AZ:/^(AZ[0-9]{2})[A-Z0-9]{4}\d{20}$/,BA:/^(BA[0-9]{2})\d{16}$/,BE:/^(BE[0-9]{2})\d{12}$/,BG:/^(BG[0-9]{2})[A-Z]{4}\d{6}[A-Z0-9]{8}$/,BH:/^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,BR:/^(BR[0-9]{2})\d{23}[A-Z]{1}[A-Z0-9]{1}$/,BY:/^(BY[0-9]{2})[A-Z0-9]{4}\d{20}$/,CH:/^(CH[0-9]{2})\d{5}[A-Z0-9]{12}$/,CR:/^(CR[0-9]{2})\d{18}$/,CY:/^(CY[0-9]{2})\d{8}[A-Z0-9]{16}$/,CZ:/^(CZ[0-9]{2})\d{20}$/,DE:/^(DE[0-9]{2})\d{18}$/,DK:/^(DK[0-9]{2})\d{14}$/,DO:/^(DO[0-9]{2})[A-Z]{4}\d{20}$/,EE:/^(EE[0-9]{2})\d{16}$/,EG:/^(EG[0-9]{2})\d{25}$/,ES:/^(ES[0-9]{2})\d{20}$/,FI:/^(FI[0-9]{2})\d{14}$/,FO:/^(FO[0-9]{2})\d{14}$/,FR:/^(FR[0-9]{2})\d{10}[A-Z0-9]{11}\d{2}$/,GB:/^(GB[0-9]{2})[A-Z]{4}\d{14}$/,GE:/^(GE[0-9]{2})[A-Z0-9]{2}\d{16}$/,GI:/^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,GL:/^(GL[0-9]{2})\d{14}$/,GR:/^(GR[0-9]{2})\d{7}[A-Z0-9]{16}$/,GT:/^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,HR:/^(HR[0-9]{2})\d{17}$/,HU:/^(HU[0-9]{2})\d{24}$/,IE:/^(IE[0-9]{2})[A-Z0-9]{4}\d{14}$/,IL:/^(IL[0-9]{2})\d{19}$/,IQ:/^(IQ[0-9]{2})[A-Z]{4}\d{15}$/,IR:/^(IR[0-9]{2})0\d{2}0\d{18}$/,IS:/^(IS[0-9]{2})\d{22}$/,IT:/^(IT[0-9]{2})[A-Z]{1}\d{10}[A-Z0-9]{12}$/,JO:/^(JO[0-9]{2})[A-Z]{4}\d{22}$/,KW:/^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,KZ:/^(KZ[0-9]{2})\d{3}[A-Z0-9]{13}$/,LB:/^(LB[0-9]{2})\d{4}[A-Z0-9]{20}$/,LC:/^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,LI:/^(LI[0-9]{2})\d{5}[A-Z0-9]{12}$/,LT:/^(LT[0-9]{2})\d{16}$/,LU:/^(LU[0-9]{2})\d{3}[A-Z0-9]{13}$/,LV:/^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,MC:/^(MC[0-9]{2})\d{10}[A-Z0-9]{11}\d{2}$/,MD:/^(MD[0-9]{2})[A-Z0-9]{20}$/,ME:/^(ME[0-9]{2})\d{18}$/,MK:/^(MK[0-9]{2})\d{3}[A-Z0-9]{10}\d{2}$/,MR:/^(MR[0-9]{2})\d{23}$/,MT:/^(MT[0-9]{2})[A-Z]{4}\d{5}[A-Z0-9]{18}$/,MU:/^(MU[0-9]{2})[A-Z]{4}\d{19}[A-Z]{3}$/,MZ:/^(MZ[0-9]{2})\d{21}$/,NL:/^(NL[0-9]{2})[A-Z]{4}\d{10}$/,NO:/^(NO[0-9]{2})\d{11}$/,PK:/^(PK[0-9]{2})[A-Z0-9]{4}\d{16}$/,PL:/^(PL[0-9]{2})\d{24}$/,PS:/^(PS[0-9]{2})[A-Z0-9]{4}\d{21}$/,PT:/^(PT[0-9]{2})\d{21}$/,QA:/^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,RO:/^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,RS:/^(RS[0-9]{2})\d{18}$/,SA:/^(SA[0-9]{2})\d{2}[A-Z0-9]{18}$/,SC:/^(SC[0-9]{2})[A-Z]{4}\d{20}[A-Z]{3}$/,SE:/^(SE[0-9]{2})\d{20}$/,SI:/^(SI[0-9]{2})\d{15}$/,SK:/^(SK[0-9]{2})\d{20}$/,SM:/^(SM[0-9]{2})[A-Z]{1}\d{10}[A-Z0-9]{12}$/,SV:/^(SV[0-9]{2})[A-Z0-9]{4}\d{20}$/,TL:/^(TL[0-9]{2})\d{19}$/,TN:/^(TN[0-9]{2})\d{20}$/,TR:/^(TR[0-9]{2})\d{5}[A-Z0-9]{17}$/,UA:/^(UA[0-9]{2})\d{6}[A-Z0-9]{19}$/,VA:/^(VA[0-9]{2})\d{18}$/,VG:/^(VG[0-9]{2})[A-Z0-9]{4}\d{16}$/,XK:/^(XK[0-9]{2})\d{16}$/};/**
   * Check whether string has correct universal IBAN format
   * The IBAN consists of up to 34 alphanumeric characters, as follows:
   * Country Code using ISO 3166-1 alpha-2, two letters
   * check digits, two digits and
   * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.
   * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]
   *
   * @param {string} str - string under validation
   * @return {boolean}
   */function hasValidIbanFormat(str){// Strip white spaces and hyphens
  var strippedStr=str.replace(/[\s\-]+/gi,'').toUpperCase();var isoCountryCode=strippedStr.slice(0,2).toUpperCase();return isoCountryCode in ibanRegexThroughCountryCode&&ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);}/**
     * Check whether string has valid IBAN Checksum
     * by performing basic mod-97 operation and
     * the remainder should equal 1
     * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string
     * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35
     * -- Interpret the string as a decimal integer and
     * -- compute the remainder on division by 97 (mod 97)
     * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number
     *
     * @param {string} str
     * @return {boolean}
     */function hasValidIbanChecksum(str){var strippedStr=str.replace(/[^A-Z0-9]+/gi,'').toUpperCase();// Keep only digits and A-Z latin alphabetic
  var rearranged=strippedStr.slice(4)+strippedStr.slice(0,4);var alphaCapsReplacedWithDigits=rearranged.replace(/[A-Z]/g,function(char){return char.charCodeAt(0)-55;});var remainder=alphaCapsReplacedWithDigits.match(/\d{1,7}/g).reduce(function(acc,value){return Number(acc+value)%97;},'');return remainder===1;}function isIBAN(str){(0, _assertString$5.default)(str);return hasValidIbanFormat(str)&&hasValidIbanChecksum(str);}var locales$2=Object.keys(ibanRegexThroughCountryCode);isIBAN$1.locales=locales$2;

  var isBIC = {exports: {}};

  var isISO31661Alpha2$1 = {};

  Object.defineProperty(isISO31661Alpha2$1,"__esModule",{value:true});isISO31661Alpha2$1.default=isISO31661Alpha2;isISO31661Alpha2$1.CountryCodes=void 0;var _assertString$4=_interopRequireDefault$4(assertString.exports);function _interopRequireDefault$4(obj){return obj&&obj.__esModule?obj:{default:obj};}// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
  var validISO31661Alpha2CountriesCodes=new Set(['AD','AE','AF','AG','AI','AL','AM','AO','AQ','AR','AS','AT','AU','AW','AX','AZ','BA','BB','BD','BE','BF','BG','BH','BI','BJ','BL','BM','BN','BO','BQ','BR','BS','BT','BV','BW','BY','BZ','CA','CC','CD','CF','CG','CH','CI','CK','CL','CM','CN','CO','CR','CU','CV','CW','CX','CY','CZ','DE','DJ','DK','DM','DO','DZ','EC','EE','EG','EH','ER','ES','ET','FI','FJ','FK','FM','FO','FR','GA','GB','GD','GE','GF','GG','GH','GI','GL','GM','GN','GP','GQ','GR','GS','GT','GU','GW','GY','HK','HM','HN','HR','HT','HU','ID','IE','IL','IM','IN','IO','IQ','IR','IS','IT','JE','JM','JO','JP','KE','KG','KH','KI','KM','KN','KP','KR','KW','KY','KZ','LA','LB','LC','LI','LK','LR','LS','LT','LU','LV','LY','MA','MC','MD','ME','MF','MG','MH','MK','ML','MM','MN','MO','MP','MQ','MR','MS','MT','MU','MV','MW','MX','MY','MZ','NA','NC','NE','NF','NG','NI','NL','NO','NP','NR','NU','NZ','OM','PA','PE','PF','PG','PH','PK','PL','PM','PN','PR','PS','PT','PW','PY','QA','RE','RO','RS','RU','RW','SA','SB','SC','SD','SE','SG','SH','SI','SJ','SK','SL','SM','SN','SO','SR','SS','ST','SV','SX','SY','SZ','TC','TD','TF','TG','TH','TJ','TK','TL','TM','TN','TO','TR','TT','TV','TW','TZ','UA','UG','UM','US','UY','UZ','VA','VC','VE','VG','VI','VN','VU','WF','WS','YE','YT','ZA','ZM','ZW']);function isISO31661Alpha2(str){(0, _assertString$4.default)(str);return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());}var CountryCodes=validISO31661Alpha2CountriesCodes;isISO31661Alpha2$1.CountryCodes=CountryCodes;

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBIC;var _assertString=_interopRequireDefault(assertString.exports);var _isISO31661Alpha=isISO31661Alpha2$1;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// https://en.wikipedia.org/wiki/ISO_9362
  var isBICReg=/^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;function isBIC(str){(0, _assertString.default)(str);// toUpperCase() should be removed when a new major version goes out that changes
  // the regex to [A-Z] (per the spec).
  if(!_isISO31661Alpha.CountryCodes.has(str.slice(4,6).toUpperCase())){return false;}return isBICReg.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isBIC,isBIC.exports);

  var isMD5 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isMD5;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var md5=/^[a-f0-9]{32}$/;function isMD5(str){(0, _assertString.default)(str);return md5.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isMD5,isMD5.exports);

  var isHash = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isHash;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var lengths={md5:32,md4:32,sha1:40,sha256:64,sha384:96,sha512:128,ripemd128:32,ripemd160:40,tiger128:32,tiger160:40,tiger192:48,crc32:8,crc32b:8};function isHash(str,algorithm){(0, _assertString.default)(str);var hash=new RegExp("^[a-fA-F0-9]{".concat(lengths[algorithm],"}$"));return hash.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isHash,isHash.exports);

  var isJWT = {exports: {}};

  var isBase64 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBase64;var _assertString=_interopRequireDefault(assertString.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var notBase64=/[^A-Z0-9+\/=]/i;var urlSafeBase64=/^[A-Z0-9_\-]*$/i;var defaultBase64Options={urlSafe:false};function isBase64(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,defaultBase64Options);var len=str.length;if(options.urlSafe){return urlSafeBase64.test(str);}if(len%4!==0||notBase64.test(str)){return false;}var firstPaddingChar=str.indexOf('=');return firstPaddingChar===-1||firstPaddingChar===len-1||firstPaddingChar===len-2&&str[len-1]==='=';}module.exports=exports.default;module.exports.default=exports.default;})(isBase64,isBase64.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isJWT;var _assertString=_interopRequireDefault(assertString.exports);var _isBase=_interopRequireDefault(isBase64.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isJWT(str){(0, _assertString.default)(str);var dotSplit=str.split('.');var len=dotSplit.length;if(len>3||len<2){return false;}return dotSplit.reduce(function(acc,currElem){return acc&&(0, _isBase.default)(currElem,{urlSafe:true});},true);}module.exports=exports.default;module.exports.default=exports.default;})(isJWT,isJWT.exports);

  var isJSON = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isJSON;var _assertString=_interopRequireDefault(assertString.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}var default_json_options={allow_primitives:false};function isJSON(str,options){(0, _assertString.default)(str);try{options=(0,_merge.default)(options,default_json_options);var primitives=[];if(options.allow_primitives){primitives=[null,false,true];}var obj=JSON.parse(str);return primitives.includes(obj)||!!obj&&_typeof(obj)==='object';}catch(e){/* ignore */}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isJSON,isJSON.exports);

  var isEmpty = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isEmpty;var _assertString=_interopRequireDefault(assertString.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var default_is_empty_options={ignore_whitespace:false};function isEmpty(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,default_is_empty_options);return (options.ignore_whitespace?str.trim().length:str.length)===0;}module.exports=exports.default;module.exports.default=exports.default;})(isEmpty,isEmpty.exports);

  var isLength = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isLength;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/* eslint-disable prefer-rest-params */function isLength(str,options){(0, _assertString.default)(str);var min;var max;if(_typeof(options)==='object'){min=options.min||0;max=options.max;}else {// backwards compatibility: isLength(str, min [, max])
  min=arguments[1]||0;max=arguments[2];}var surrogatePairs=str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g)||[];var len=str.length-surrogatePairs.length;return len>=min&&(typeof max==='undefined'||len<=max);}module.exports=exports.default;module.exports.default=exports.default;})(isLength,isLength.exports);

  var isUUID = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isUUID;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var uuid={1:/^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,2:/^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};function isUUID(str,version){(0, _assertString.default)(str);var pattern=uuid[![undefined,null].includes(version)?version:'all'];return !!pattern&&pattern.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isUUID,isUUID.exports);

  var isMongoId = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isMongoId;var _assertString=_interopRequireDefault(assertString.exports);var _isHexadecimal=_interopRequireDefault(isHexadecimal.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isMongoId(str){(0, _assertString.default)(str);return (0, _isHexadecimal.default)(str)&&str.length===24;}module.exports=exports.default;module.exports.default=exports.default;})(isMongoId,isMongoId.exports);

  var isAfter = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isAfter;var _assertString=_interopRequireDefault(assertString.exports);var _toDate=_interopRequireDefault(toDate.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isAfter(str){var date=arguments.length>1&&arguments[1]!==undefined?arguments[1]:String(new Date());(0, _assertString.default)(str);var comparison=(0, _toDate.default)(date);var original=(0, _toDate.default)(str);return !!(original&&comparison&&original>comparison);}module.exports=exports.default;module.exports.default=exports.default;})(isAfter,isAfter.exports);

  var isBefore = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBefore;var _assertString=_interopRequireDefault(assertString.exports);var _toDate=_interopRequireDefault(toDate.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isBefore(str){var date=arguments.length>1&&arguments[1]!==undefined?arguments[1]:String(new Date());(0, _assertString.default)(str);var comparison=(0, _toDate.default)(date);var original=(0, _toDate.default)(str);return !!(original&&comparison&&original<comparison);}module.exports=exports.default;module.exports.default=exports.default;})(isBefore,isBefore.exports);

  var isIn = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isIn;var _assertString=_interopRequireDefault(assertString.exports);var _toString=_interopRequireDefault(toString$5.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function isIn(str,options){(0, _assertString.default)(str);var i;if(Object.prototype.toString.call(options)==='[object Array]'){var array=[];for(i in options){// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
  // istanbul ignore else
  if({}.hasOwnProperty.call(options,i)){array[i]=(0, _toString.default)(options[i]);}}return array.indexOf(str)>=0;}else if(_typeof(options)==='object'){return options.hasOwnProperty(str);}else if(options&&typeof options.indexOf==='function'){return options.indexOf(str)>=0;}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isIn,isIn.exports);

  var isCreditCard = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isCreditCard;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable max-len */var creditCard=/^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14}|^(81[0-9]{14,17}))$/;/* eslint-enable max-len */function isCreditCard(str){(0, _assertString.default)(str);var sanitized=str.replace(/[- ]+/g,'');if(!creditCard.test(sanitized)){return false;}var sum=0;var digit;var tmpNum;var shouldDouble;for(var i=sanitized.length-1;i>=0;i--){digit=sanitized.substring(i,i+1);tmpNum=parseInt(digit,10);if(shouldDouble){tmpNum*=2;if(tmpNum>=10){sum+=tmpNum%10+1;}else {sum+=tmpNum;}}else {sum+=tmpNum;}shouldDouble=!shouldDouble;}return !!(sum%10===0?sanitized:false);}module.exports=exports.default;module.exports.default=exports.default;})(isCreditCard,isCreditCard.exports);

  var isIdentityCard = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isIdentityCard;var _assertString=_interopRequireDefault(assertString.exports);var _isInt=_interopRequireDefault(isInt.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var validators={PL:function PL(str){(0, _assertString.default)(str);var weightOfDigits={1:1,2:3,3:7,4:9,5:1,6:3,7:7,8:9,9:1,10:3,11:0};if(str!=null&&str.length===11&&(0, _isInt.default)(str,{allow_leading_zeroes:true})){var digits=str.split('').slice(0,-1);var sum=digits.reduce(function(acc,digit,index){return acc+Number(digit)*weightOfDigits[index+1];},0);var modulo=sum%10;var lastDigit=Number(str.charAt(str.length-1));if(modulo===0&&lastDigit===0||lastDigit===10-modulo){return true;}}return false;},ES:function ES(str){(0, _assertString.default)(str);var DNI=/^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;var charsValue={X:0,Y:1,Z:2};var controlDigits=['T','R','W','A','G','M','Y','F','P','D','X','B','N','J','Z','S','Q','V','H','L','C','K','E'];// sanitize user input
  var sanitized=str.trim().toUpperCase();// validate the data structure
  if(!DNI.test(sanitized)){return false;}// validate the control digit
  var number=sanitized.slice(0,-1).replace(/[X,Y,Z]/g,function(char){return charsValue[char];});return sanitized.endsWith(controlDigits[number%23]);},FI:function FI(str){// https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated
  (0, _assertString.default)(str);if(str.length!==11){return false;}if(!str.match(/^\d{6}[\-A\+]\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)){return false;}var checkDigits='0123456789ABCDEFHJKLMNPRSTUVWXY';var idAsNumber=parseInt(str.slice(0,6),10)*1000+parseInt(str.slice(7,10),10);var remainder=idAsNumber%31;var checkDigit=checkDigits[remainder];return checkDigit===str.slice(10,11);},IN:function IN(str){var DNI=/^[1-9]\d{3}\s?\d{4}\s?\d{4}$/;// multiplication table
  var d=[[0,1,2,3,4,5,6,7,8,9],[1,2,3,4,0,6,7,8,9,5],[2,3,4,0,1,7,8,9,5,6],[3,4,0,1,2,8,9,5,6,7],[4,0,1,2,3,9,5,6,7,8],[5,9,8,7,6,0,4,3,2,1],[6,5,9,8,7,1,0,4,3,2],[7,6,5,9,8,2,1,0,4,3],[8,7,6,5,9,3,2,1,0,4],[9,8,7,6,5,4,3,2,1,0]];// permutation table
  var p=[[0,1,2,3,4,5,6,7,8,9],[1,5,7,6,2,8,3,0,9,4],[5,8,0,3,7,9,6,1,4,2],[8,9,1,6,0,4,3,5,2,7],[9,4,5,3,1,2,6,8,7,0],[4,2,8,6,5,7,3,9,0,1],[2,7,9,3,8,0,6,4,1,5],[7,0,4,6,9,1,3,2,5,8]];// sanitize user input
  var sanitized=str.trim();// validate the data structure
  if(!DNI.test(sanitized)){return false;}var c=0;var invertedArray=sanitized.replace(/\s/g,'').split('').map(Number).reverse();invertedArray.forEach(function(val,i){c=d[c][p[i%8][val]];});return c===0;},IR:function IR(str){if(!str.match(/^\d{10}$/))return false;str="0000".concat(str).substr(str.length-6);if(parseInt(str.substr(3,6),10)===0)return false;var lastNumber=parseInt(str.substr(9,1),10);var sum=0;for(var i=0;i<9;i++){sum+=parseInt(str.substr(i,1),10)*(10-i);}sum%=11;return sum<2&&lastNumber===sum||sum>=2&&lastNumber===11-sum;},IT:function IT(str){if(str.length!==9)return false;if(str==='CA00000AA')return false;// https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana
  return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i)>-1;},NO:function NO(str){var sanitized=str.trim();if(isNaN(Number(sanitized)))return false;if(sanitized.length!==11)return false;if(sanitized==='00000000000')return false;// https://no.wikipedia.org/wiki/F%C3%B8dselsnummer
  var f=sanitized.split('').map(Number);var k1=(11-(3*f[0]+7*f[1]+6*f[2]+1*f[3]+8*f[4]+9*f[5]+4*f[6]+5*f[7]+2*f[8])%11)%11;var k2=(11-(5*f[0]+4*f[1]+3*f[2]+2*f[3]+7*f[4]+6*f[5]+5*f[6]+4*f[7]+3*f[8]+2*k1)%11)%11;if(k1!==f[9]||k2!==f[10])return false;return true;},TH:function TH(str){if(!str.match(/^[1-8]\d{12}$/))return false;// validate check digit
  var sum=0;for(var i=0;i<12;i++){sum+=parseInt(str[i],10)*(13-i);}return str[12]===((11-sum%11)%10).toString();},LK:function LK(str){var old_nic=/^[1-9]\d{8}[vx]$/i;var new_nic=/^[1-9]\d{11}$/i;if(str.length===10&&old_nic.test(str))return true;else if(str.length===12&&new_nic.test(str))return true;return false;},'he-IL':function heIL(str){var DNI=/^\d{9}$/;// sanitize user input
  var sanitized=str.trim();// validate the data structure
  if(!DNI.test(sanitized)){return false;}var id=sanitized;var sum=0,incNum;for(var i=0;i<id.length;i++){incNum=Number(id[i])*(i%2+1);// Multiply number by 1 or 2
  sum+=incNum>9?incNum-9:incNum;// Sum the digits up and add to total
  }return sum%10===0;},'ar-LY':function arLY(str){// Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2
  var NIN=/^(1|2)\d{11}$/;// sanitize user input
  var sanitized=str.trim();// validate the data structure
  if(!NIN.test(sanitized)){return false;}return true;},'ar-TN':function arTN(str){var DNI=/^\d{8}$/;// sanitize user input
  var sanitized=str.trim();// validate the data structure
  if(!DNI.test(sanitized)){return false;}return true;},'zh-CN':function zhCN(str){var provincesAndCities=['11',// 北京
  '12',// 天津
  '13',// 河北
  '14',// 山西
  '15',// 内蒙古
  '21',// 辽宁
  '22',// 吉林
  '23',// 黑龙江
  '31',// 上海
  '32',// 江苏
  '33',// 浙江
  '34',// 安徽
  '35',// 福建
  '36',// 江西
  '37',// 山东
  '41',// 河南
  '42',// 湖北
  '43',// 湖南
  '44',// 广东
  '45',// 广西
  '46',// 海南
  '50',// 重庆
  '51',// 四川
  '52',// 贵州
  '53',// 云南
  '54',// 西藏
  '61',// 陕西
  '62',// 甘肃
  '63',// 青海
  '64',// 宁夏
  '65',// 新疆
  '71',// 台湾
  '81',// 香港
  '82',// 澳门
  '91'// 国外
  ];var powers=['7','9','10','5','8','4','2','1','6','3','7','9','10','5','8','4','2'];var parityBit=['1','0','X','9','8','7','6','5','4','3','2'];var checkAddressCode=function checkAddressCode(addressCode){return provincesAndCities.includes(addressCode);};var checkBirthDayCode=function checkBirthDayCode(birDayCode){var yyyy=parseInt(birDayCode.substring(0,4),10);var mm=parseInt(birDayCode.substring(4,6),10);var dd=parseInt(birDayCode.substring(6),10);var xdata=new Date(yyyy,mm-1,dd);if(xdata>new Date()){return false;// eslint-disable-next-line max-len
  }else if(xdata.getFullYear()===yyyy&&xdata.getMonth()===mm-1&&xdata.getDate()===dd){return true;}return false;};var getParityBit=function getParityBit(idCardNo){var id17=idCardNo.substring(0,17);var power=0;for(var i=0;i<17;i++){power+=parseInt(id17.charAt(i),10)*parseInt(powers[i],10);}var mod=power%11;return parityBit[mod];};var checkParityBit=function checkParityBit(idCardNo){return getParityBit(idCardNo)===idCardNo.charAt(17).toUpperCase();};var check15IdCardNo=function check15IdCardNo(idCardNo){var check=/^[1-9]\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\d{3}$/.test(idCardNo);if(!check)return false;var addressCode=idCardNo.substring(0,2);check=checkAddressCode(addressCode);if(!check)return false;var birDayCode="19".concat(idCardNo.substring(6,12));check=checkBirthDayCode(birDayCode);if(!check)return false;return true;};var check18IdCardNo=function check18IdCardNo(idCardNo){var check=/^[1-9]\d{5}[1-9]\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\d{3}(\d|x|X)$/.test(idCardNo);if(!check)return false;var addressCode=idCardNo.substring(0,2);check=checkAddressCode(addressCode);if(!check)return false;var birDayCode=idCardNo.substring(6,14);check=checkBirthDayCode(birDayCode);if(!check)return false;return checkParityBit(idCardNo);};var checkIdCardNo=function checkIdCardNo(idCardNo){var check=/^\d{15}|(\d{17}(\d|x|X))$/.test(idCardNo);if(!check)return false;if(idCardNo.length===15){return check15IdCardNo(idCardNo);}return check18IdCardNo(idCardNo);};return checkIdCardNo(str);},'zh-TW':function zhTW(str){var ALPHABET_CODES={A:10,B:11,C:12,D:13,E:14,F:15,G:16,H:17,I:34,J:18,K:19,L:20,M:21,N:22,O:35,P:23,Q:24,R:25,S:26,T:27,U:28,V:29,W:32,X:30,Y:31,Z:33};var sanitized=str.trim().toUpperCase();if(!/^[A-Z][0-9]{9}$/.test(sanitized))return false;return Array.from(sanitized).reduce(function(sum,number,index){if(index===0){var code=ALPHABET_CODES[number];return code%10*9+Math.floor(code/10);}if(index===9){return (10-sum%10-Number(number))%10===0;}return sum+Number(number)*(9-index);},0);}};function isIdentityCard(str,locale){(0, _assertString.default)(str);if(locale in validators){return validators[locale](str);}else if(locale==='any'){for(var key in validators){// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
  // istanbul ignore else
  if(validators.hasOwnProperty(key)){var validator=validators[key];if(validator(str)){return true;}}}return false;}throw new Error("Invalid locale '".concat(locale,"'"));}module.exports=exports.default;module.exports.default=exports.default;})(isIdentityCard,isIdentityCard.exports);

  var isEAN = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isEAN;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
  	 * The most commonly used EAN standard is
  	 * the thirteen-digit EAN-13, while the
  	 * less commonly used 8-digit EAN-8 barcode was
  	 * introduced for use on small packages.
  	 * Also EAN/UCC-14 is used for Grouping of individual
  	 * trade items above unit level(Intermediate, Carton or Pallet).
  	 * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/
  	 * EAN consists of:
  	 * GS1 prefix, manufacturer code, product code and check digit
  	 * Reference: https://en.wikipedia.org/wiki/International_Article_Number
  	 * Reference: https://www.gtin.info/
  	 */ /**
  	 * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14
  	 * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),
  	 * with exact numberic matching of 8 or 13 or 14 digits [0-9]
  	 */var LENGTH_EAN_8=8;var LENGTH_EAN_14=14;var validEanRegex=/^(\d{8}|\d{13}|\d{14})$/;/**
  	 * Get position weight given:
  	 * EAN length and digit index/position
  	 *
  	 * @param {number} length
  	 * @param {number} index
  	 * @return {number}
  	 */function getPositionWeightThroughLengthAndIndex(length,index){if(length===LENGTH_EAN_8||length===LENGTH_EAN_14){return index%2===0?3:1;}return index%2===0?1:3;}/**
  	 * Calculate EAN Check Digit
  	 * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit
  	 *
  	 * @param {string} ean
  	 * @return {number}
  	 */function calculateCheckDigit(ean){var checksum=ean.slice(0,-1).split('').map(function(char,index){return Number(char)*getPositionWeightThroughLengthAndIndex(ean.length,index);}).reduce(function(acc,partialSum){return acc+partialSum;},0);var remainder=10-checksum%10;return remainder<10?remainder:0;}/**
  	 * Check if string is valid EAN:
  	 * Matches EAN-8/EAN-13/EAN-14 regex
  	 * Has valid check digit.
  	 *
  	 * @param {string} str
  	 * @return {boolean}
  	 */function isEAN(str){(0, _assertString.default)(str);var actualCheckDigit=Number(str.slice(-1));return validEanRegex.test(str)&&actualCheckDigit===calculateCheckDigit(str);}module.exports=exports.default;module.exports.default=exports.default;})(isEAN,isEAN.exports);

  var isISIN = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isISIN;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var isin=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;// this link details how the check digit is calculated:
  // https://www.isin.org/isin-format/. it is a little bit
  // odd in that it works with digits, not numbers. in order
  // to make only one pass through the ISIN characters, the
  // each alpha character is handled as 2 characters within
  // the loop.
  function isISIN(str){(0, _assertString.default)(str);if(!isin.test(str)){return false;}var double=true;var sum=0;// convert values
  for(var i=str.length-2;i>=0;i--){if(str[i]>='A'&&str[i]<='Z'){var value=str[i].charCodeAt(0)-55;var lo=value%10;var hi=Math.trunc(value/10);// letters have two digits, so handle the low order
  // and high order digits separately.
  for(var _i=0,_arr=[lo,hi];_i<_arr.length;_i++){var digit=_arr[_i];if(double){if(digit>=5){sum+=1+(digit-5)*2;}else {sum+=digit*2;}}else {sum+=digit;}double=!double;}}else {var _digit=str[i].charCodeAt(0)-'0'.charCodeAt(0);if(double){if(_digit>=5){sum+=1+(_digit-5)*2;}else {sum+=_digit*2;}}else {sum+=_digit;}double=!double;}}var check=Math.trunc((sum+9)/10)*10-sum;return +str[str.length-1]===check;}module.exports=exports.default;module.exports.default=exports.default;})(isISIN,isISIN.exports);

  var isISBN = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isISBN;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var isbn10Maybe=/^(?:[0-9]{9}X|[0-9]{10})$/;var isbn13Maybe=/^(?:[0-9]{13})$/;var factor=[1,3];function isISBN(str){var version=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';(0, _assertString.default)(str);version=String(version);if(!version){return isISBN(str,10)||isISBN(str,13);}var sanitized=str.replace(/[\s-]+/g,'');var checksum=0;var i;if(version==='10'){if(!isbn10Maybe.test(sanitized)){return false;}for(i=0;i<9;i++){checksum+=(i+1)*sanitized.charAt(i);}if(sanitized.charAt(9)==='X'){checksum+=10*10;}else {checksum+=10*sanitized.charAt(9);}if(checksum%11===0){return !!sanitized;}}else if(version==='13'){if(!isbn13Maybe.test(sanitized)){return false;}for(i=0;i<12;i++){checksum+=factor[i%2]*sanitized.charAt(i);}if(sanitized.charAt(12)-(10-checksum%10)%10===0){return !!sanitized;}}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isISBN,isISBN.exports);

  var isISSN = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isISSN;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var issn='^\\d{4}-?\\d{3}[\\dX]$';function isISSN(str){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};(0, _assertString.default)(str);var testIssn=issn;testIssn=options.require_hyphen?testIssn.replace('?',''):testIssn;testIssn=options.case_sensitive?new RegExp(testIssn):new RegExp(testIssn,'i');if(!testIssn.test(str)){return false;}var digits=str.replace('-','').toUpperCase();var checksum=0;for(var i=0;i<digits.length;i++){var digit=digits[i];checksum+=(digit==='X'?10:+digit)*(8-i);}return checksum%11===0;}module.exports=exports.default;module.exports.default=exports.default;})(isISSN,isISSN.exports);

  var isTaxID = {exports: {}};

  var algorithms = {};

  Object.defineProperty(algorithms,"__esModule",{value:true});algorithms.iso7064Check=iso7064Check;algorithms.luhnCheck=luhnCheck;algorithms.reverseMultiplyAndSum=reverseMultiplyAndSum;algorithms.verhoeffCheck=verhoeffCheck;/**
   * Algorithmic validation functions
   * May be used as is or implemented in the workflow of other validators.
   */ /*
   * ISO 7064 validation function
   * Called with a string of numbers (incl. check digit)
   * to validate according to ISO 7064 (MOD 11, 10).
   */function iso7064Check(str){var checkvalue=10;for(var i=0;i<str.length-1;i++){checkvalue=(parseInt(str[i],10)+checkvalue)%10===0?10*2%11:(parseInt(str[i],10)+checkvalue)%10*2%11;}checkvalue=checkvalue===1?0:11-checkvalue;return checkvalue===parseInt(str[10],10);}/*
   * Luhn (mod 10) validation function
   * Called with a string of numbers (incl. check digit)
   * to validate according to the Luhn algorithm.
   */function luhnCheck(str){var checksum=0;var second=false;for(var i=str.length-1;i>=0;i--){if(second){var product=parseInt(str[i],10)*2;if(product>9){// sum digits of product and add to checksum
  checksum+=product.toString().split('').map(function(a){return parseInt(a,10);}).reduce(function(a,b){return a+b;},0);}else {checksum+=product;}}else {checksum+=parseInt(str[i],10);}second=!second;}return checksum%10===0;}/*
   * Reverse TIN multiplication and summation helper function
   * Called with an array of single-digit integers and a base multiplier
   * to calculate the sum of the digits multiplied in reverse.
   * Normally used in variations of MOD 11 algorithmic checks.
   */function reverseMultiplyAndSum(digits,base){var total=0;for(var i=0;i<digits.length;i++){total+=digits[i]*(base-i);}return total;}/*
   * Verhoeff validation helper function
   * Called with a string of numbers
   * to validate according to the Verhoeff algorithm.
   */function verhoeffCheck(str){var d_table=[[0,1,2,3,4,5,6,7,8,9],[1,2,3,4,0,6,7,8,9,5],[2,3,4,0,1,7,8,9,5,6],[3,4,0,1,2,8,9,5,6,7],[4,0,1,2,3,9,5,6,7,8],[5,9,8,7,6,0,4,3,2,1],[6,5,9,8,7,1,0,4,3,2],[7,6,5,9,8,2,1,0,4,3],[8,7,6,5,9,3,2,1,0,4],[9,8,7,6,5,4,3,2,1,0]];var p_table=[[0,1,2,3,4,5,6,7,8,9],[1,5,7,6,2,8,3,0,9,4],[5,8,0,3,7,9,6,1,4,2],[8,9,1,6,0,4,3,5,2,7],[9,4,5,3,1,2,6,8,7,0],[4,2,8,6,5,7,3,9,0,1],[2,7,9,3,8,0,6,4,1,5],[7,0,4,6,9,1,3,2,5,8]];// Copy (to prevent replacement) and reverse
  var str_copy=str.split('').reverse().join('');var checksum=0;for(var i=0;i<str_copy.length;i++){checksum=d_table[checksum][p_table[i%8][parseInt(str_copy[i],10)]];}return checksum===0;}

  (function(module,exports){function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}Object.defineProperty(exports,"__esModule",{value:true});exports.default=isTaxID;var _assertString=_interopRequireDefault(assertString.exports);var algorithms$1=_interopRequireWildcard(algorithms);var _isDate=_interopRequireDefault(isDate$1.exports);function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return {default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else {newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _iterableToArray(iter){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(iter))return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}/**
  	 * TIN Validation
  	 * Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.
  	 *
  	 * EU-UK:
  	 * National TIN validity is calculated using public algorithms as made available by DG TAXUD.
  	 *
  	 * See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.
  	 *
  	 * US:
  	 * An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,
  	 *  is used to identify a business entity.
  	 *
  	 * NOTES:
  	 *  - Prefix 47 is being reserved for future use
  	 *  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.
  	 *
  	 * See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`
  	 * for more information.
  	 */ // Locale functions
  /*
  	 * bg-BG validation function
  	 * (Edinen graždanski nomer (EGN/ЕГН), persons only)
  	 * Checks if birth date (first six digits) is valid and calculates check (last) digit
  	 */function bgBgCheck(tin){// Extract full year, normalize month and check birth date validity
  var century_year=tin.slice(0,2);var month=parseInt(tin.slice(2,4),10);if(month>40){month-=40;century_year="20".concat(century_year);}else if(month>20){month-=20;century_year="18".concat(century_year);}else {century_year="19".concat(century_year);}if(month<10){month="0".concat(month);}var date="".concat(century_year,"/").concat(month,"/").concat(tin.slice(4,6));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// split digits into an array for further processing
  var digits=tin.split('').map(function(a){return parseInt(a,10);});// Calculate checksum by multiplying digits with fixed values
  var multip_lookup=[2,4,8,5,10,9,7,3,6];var checksum=0;for(var i=0;i<multip_lookup.length;i++){checksum+=digits[i]*multip_lookup[i];}checksum=checksum%11===10?0:checksum%11;return checksum===digits[9];}/*
  	 * cs-CZ validation function
  	 * (Rodné číslo (RČ), persons only)
  	 * Checks if birth date (first six digits) is valid and divisibility by 11
  	 * Material not in DG TAXUD document sourced from:
  	 * -`https://lorenc.info/3MA381/overeni-spravnosti-rodneho-cisla.htm`
  	 * -`https://www.mvcr.cz/clanek/rady-a-sluzby-dokumenty-rodne-cislo.aspx`
  	 */function csCzCheck(tin){tin=tin.replace(/\W/,'');// Extract full year from TIN length
  var full_year=parseInt(tin.slice(0,2),10);if(tin.length===10){if(full_year<54){full_year="20".concat(full_year);}else {full_year="19".concat(full_year);}}else {if(tin.slice(6)==='000'){return false;}// Three-zero serial not assigned before 1954
  if(full_year<54){full_year="19".concat(full_year);}else {return false;// No 18XX years seen in any of the resources
  }}// Add missing zero if needed
  if(full_year.length===3){full_year=[full_year.slice(0,2),'0',full_year.slice(2)].join('');}// Extract month from TIN and normalize
  var month=parseInt(tin.slice(2,4),10);if(month>50){month-=50;}if(month>20){// Month-plus-twenty was only introduced in 2004
  if(parseInt(full_year,10)<2004){return false;}month-=20;}if(month<10){month="0".concat(month);}// Check date validity
  var date="".concat(full_year,"/").concat(month,"/").concat(tin.slice(4,6));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Verify divisibility by 11
  if(tin.length===10){if(parseInt(tin,10)%11!==0){// Some numbers up to and including 1985 are still valid if
  // check (last) digit equals 0 and modulo of first 9 digits equals 10
  var checkdigit=parseInt(tin.slice(0,9),10)%11;if(parseInt(full_year,10)<1986&&checkdigit===10){if(parseInt(tin.slice(9),10)!==0){return false;}}else {return false;}}}return true;}/*
  	 * de-AT validation function
  	 * (Abgabenkontonummer, persons/entities)
  	 * Verify TIN validity by calling luhnCheck()
  	 */function deAtCheck(tin){return algorithms$1.luhnCheck(tin);}/*
  	 * de-DE validation function
  	 * (Steueridentifikationsnummer (Steuer-IdNr.), persons only)
  	 * Tests for single duplicate/triplicate value, then calculates ISO 7064 check (last) digit
  	 * Partial implementation of spec (same result with both algorithms always)
  	 */function deDeCheck(tin){// Split digits into an array for further processing
  var digits=tin.split('').map(function(a){return parseInt(a,10);});// Fill array with strings of number positions
  var occurences=[];for(var i=0;i<digits.length-1;i++){occurences.push('');for(var j=0;j<digits.length-1;j++){if(digits[i]===digits[j]){occurences[i]+=j;}}}// Remove digits with one occurence and test for only one duplicate/triplicate
  occurences=occurences.filter(function(a){return a.length>1;});if(occurences.length!==2&&occurences.length!==3){return false;}// In case of triplicate value only two digits are allowed next to each other
  if(occurences[0].length===3){var trip_locations=occurences[0].split('').map(function(a){return parseInt(a,10);});var recurrent=0;// Amount of neighbour occurences
  for(var _i=0;_i<trip_locations.length-1;_i++){if(trip_locations[_i]+1===trip_locations[_i+1]){recurrent+=1;}}if(recurrent===2){return false;}}return algorithms$1.iso7064Check(tin);}/*
  	 * dk-DK validation function
  	 * (CPR-nummer (personnummer), persons only)
  	 * Checks if birth date (first six digits) is valid and assigned to century (seventh) digit,
  	 * and calculates check (last) digit
  	 */function dkDkCheck(tin){tin=tin.replace(/\W/,'');// Extract year, check if valid for given century digit and add century
  var year=parseInt(tin.slice(4,6),10);var century_digit=tin.slice(6,7);switch(century_digit){case'0':case'1':case'2':case'3':year="19".concat(year);break;case'4':case'9':if(year<37){year="20".concat(year);}else {year="19".concat(year);}break;default:if(year<37){year="20".concat(year);}else if(year>58){year="18".concat(year);}else {return false;}break;}// Add missing zero if needed
  if(year.length===3){year=[year.slice(0,2),'0',year.slice(2)].join('');}// Check date validity
  var date="".concat(year,"/").concat(tin.slice(2,4),"/").concat(tin.slice(0,2));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Split digits into an array for further processing
  var digits=tin.split('').map(function(a){return parseInt(a,10);});var checksum=0;var weight=4;// Multiply by weight and add to checksum
  for(var i=0;i<9;i++){checksum+=digits[i]*weight;weight-=1;if(weight===1){weight=7;}}checksum%=11;if(checksum===1){return false;}return checksum===0?digits[9]===0:digits[9]===11-checksum;}/*
  	 * el-CY validation function
  	 * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons only)
  	 * Verify TIN validity by calculating ASCII value of check (last) character
  	 */function elCyCheck(tin){// split digits into an array for further processing
  var digits=tin.slice(0,8).split('').map(function(a){return parseInt(a,10);});var checksum=0;// add digits in even places
  for(var i=1;i<digits.length;i+=2){checksum+=digits[i];}// add digits in odd places
  for(var _i2=0;_i2<digits.length;_i2+=2){if(digits[_i2]<2){checksum+=1-digits[_i2];}else {checksum+=2*(digits[_i2]-2)+5;if(digits[_i2]>4){checksum+=2;}}}return String.fromCharCode(checksum%26+65)===tin.charAt(8);}/*
  	 * el-GR validation function
  	 * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons/entities)
  	 * Verify TIN validity by calculating check (last) digit
  	 * Algorithm not in DG TAXUD document- sourced from:
  	 * - `http://epixeirisi.gr/%CE%9A%CE%A1%CE%99%CE%A3%CE%99%CE%9C%CE%91-%CE%98%CE%95%CE%9C%CE%91%CE%A4%CE%91-%CE%A6%CE%9F%CE%A1%CE%9F%CE%9B%CE%9F%CE%93%CE%99%CE%91%CE%A3-%CE%9A%CE%91%CE%99-%CE%9B%CE%9F%CE%93%CE%99%CE%A3%CE%A4%CE%99%CE%9A%CE%97%CE%A3/23791/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82-%CE%A6%CE%BF%CF%81%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CE%BA%CE%BF%CF%8D-%CE%9C%CE%B7%CF%84%CF%81%CF%8E%CE%BF%CF%85`
  	 */function elGrCheck(tin){// split digits into an array for further processing
  var digits=tin.split('').map(function(a){return parseInt(a,10);});var checksum=0;for(var i=0;i<8;i++){checksum+=digits[i]*Math.pow(2,8-i);}return checksum%11%10===digits[8];}/*
  	 * en-GB validation function (should go here if needed)
  	 * (National Insurance Number (NINO) or Unique Taxpayer Reference (UTR),
  	 * persons/entities respectively)
  	 */ /*
  	 * en-IE validation function
  	 * (Personal Public Service Number (PPS No), persons only)
  	 * Verify TIN validity by calculating check (second to last) character
  	 */function enIeCheck(tin){var checksum=algorithms$1.reverseMultiplyAndSum(tin.split('').slice(0,7).map(function(a){return parseInt(a,10);}),8);if(tin.length===9&&tin[8]!=='W'){checksum+=(tin[8].charCodeAt(0)-64)*9;}checksum%=23;if(checksum===0){return tin[7].toUpperCase()==='W';}return tin[7].toUpperCase()===String.fromCharCode(64+checksum);}// Valid US IRS campus prefixes
  var enUsCampusPrefix={andover:['10','12'],atlanta:['60','67'],austin:['50','53'],brookhaven:['01','02','03','04','05','06','11','13','14','16','21','22','23','25','34','51','52','54','55','56','57','58','59','65'],cincinnati:['30','32','35','36','37','38','61'],fresno:['15','24'],internet:['20','26','27','45','46','47'],kansas:['40','44'],memphis:['94','95'],ogden:['80','90'],philadelphia:['33','39','41','42','43','46','48','62','63','64','66','68','71','72','73','74','75','76','77','81','82','83','84','85','86','87','88','91','92','93','98','99'],sba:['31']};// Return an array of all US IRS campus prefixes
  function enUsGetPrefixes(){var prefixes=[];for(var location in enUsCampusPrefix){// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
  // istanbul ignore else
  if(enUsCampusPrefix.hasOwnProperty(location)){prefixes.push.apply(prefixes,_toConsumableArray(enUsCampusPrefix[location]));}}return prefixes;}/*
  	 * en-US validation function
  	 * Verify that the TIN starts with a valid IRS campus prefix
  	 */function enUsCheck(tin){return enUsGetPrefixes().indexOf(tin.substr(0,2))!==-1;}/*
  	 * es-ES validation function
  	 * (Documento Nacional de Identidad (DNI)
  	 * or Número de Identificación de Extranjero (NIE), persons only)
  	 * Verify TIN validity by calculating check (last) character
  	 */function esEsCheck(tin){// Split characters into an array for further processing
  var chars=tin.toUpperCase().split('');// Replace initial letter if needed
  if(isNaN(parseInt(chars[0],10))&&chars.length>1){var lead_replace=0;switch(chars[0]){case'Y':lead_replace=1;break;case'Z':lead_replace=2;break;}chars.splice(0,1,lead_replace);// Fill with zeros if smaller than proper
  }else {while(chars.length<9){chars.unshift(0);}}// Calculate checksum and check according to lookup
  var lookup=['T','R','W','A','G','M','Y','F','P','D','X','B','N','J','Z','S','Q','V','H','L','C','K','E'];chars=chars.join('');var checksum=parseInt(chars.slice(0,8),10)%23;return chars[8]===lookup[checksum];}/*
  	 * et-EE validation function
  	 * (Isikukood (IK), persons only)
  	 * Checks if birth date (century digit and six following) is valid and calculates check (last) digit
  	 * Material not in DG TAXUD document sourced from:
  	 * - `https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/Estonia-TIN.pdf`
  	 */function etEeCheck(tin){// Extract year and add century
  var full_year=tin.slice(1,3);var century_digit=tin.slice(0,1);switch(century_digit){case'1':case'2':full_year="18".concat(full_year);break;case'3':case'4':full_year="19".concat(full_year);break;default:full_year="20".concat(full_year);break;}// Check date validity
  var date="".concat(full_year,"/").concat(tin.slice(3,5),"/").concat(tin.slice(5,7));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Split digits into an array for further processing
  var digits=tin.split('').map(function(a){return parseInt(a,10);});var checksum=0;var weight=1;// Multiply by weight and add to checksum
  for(var i=0;i<10;i++){checksum+=digits[i]*weight;weight+=1;if(weight===10){weight=1;}}// Do again if modulo 11 of checksum is 10
  if(checksum%11===10){checksum=0;weight=3;for(var _i3=0;_i3<10;_i3++){checksum+=digits[_i3]*weight;weight+=1;if(weight===10){weight=1;}}if(checksum%11===10){return digits[10]===0;}}return checksum%11===digits[10];}/*
  	 * fi-FI validation function
  	 * (Henkilötunnus (HETU), persons only)
  	 * Checks if birth date (first six digits plus century symbol) is valid
  	 * and calculates check (last) digit
  	 */function fiFiCheck(tin){// Extract year and add century
  var full_year=tin.slice(4,6);var century_symbol=tin.slice(6,7);switch(century_symbol){case'+':full_year="18".concat(full_year);break;case'-':full_year="19".concat(full_year);break;default:full_year="20".concat(full_year);break;}// Check date validity
  var date="".concat(full_year,"/").concat(tin.slice(2,4),"/").concat(tin.slice(0,2));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Calculate check character
  var checksum=parseInt(tin.slice(0,6)+tin.slice(7,10),10)%31;if(checksum<10){return checksum===parseInt(tin.slice(10),10);}checksum-=10;var letters_lookup=['A','B','C','D','E','F','H','J','K','L','M','N','P','R','S','T','U','V','W','X','Y'];return letters_lookup[checksum]===tin.slice(10);}/*
  	 * fr/nl-BE validation function
  	 * (Numéro national (N.N.), persons only)
  	 * Checks if birth date (first six digits) is valid and calculates check (last two) digits
  	 */function frBeCheck(tin){// Zero month/day value is acceptable
  if(tin.slice(2,4)!=='00'||tin.slice(4,6)!=='00'){// Extract date from first six digits of TIN
  var date="".concat(tin.slice(0,2),"/").concat(tin.slice(2,4),"/").concat(tin.slice(4,6));if(!(0, _isDate.default)(date,'YY/MM/DD')){return false;}}var checksum=97-parseInt(tin.slice(0,9),10)%97;var checkdigits=parseInt(tin.slice(9,11),10);if(checksum!==checkdigits){checksum=97-parseInt("2".concat(tin.slice(0,9)),10)%97;if(checksum!==checkdigits){return false;}}return true;}/*
  	 * fr-FR validation function
  	 * (Numéro fiscal de référence (numéro SPI), persons only)
  	 * Verify TIN validity by calculating check (last three) digits
  	 */function frFrCheck(tin){tin=tin.replace(/\s/g,'');var checksum=parseInt(tin.slice(0,10),10)%511;var checkdigits=parseInt(tin.slice(10,13),10);return checksum===checkdigits;}/*
  	 * fr/lb-LU validation function
  	 * (numéro d’identification personnelle, persons only)
  	 * Verify birth date validity and run Luhn and Verhoeff checks
  	 */function frLuCheck(tin){// Extract date and check validity
  var date="".concat(tin.slice(0,4),"/").concat(tin.slice(4,6),"/").concat(tin.slice(6,8));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Run Luhn check
  if(!algorithms$1.luhnCheck(tin.slice(0,12))){return false;}// Remove Luhn check digit and run Verhoeff check
  return algorithms$1.verhoeffCheck("".concat(tin.slice(0,11)).concat(tin[12]));}/*
  	 * hr-HR validation function
  	 * (Osobni identifikacijski broj (OIB), persons/entities)
  	 * Verify TIN validity by calling iso7064Check(digits)
  	 */function hrHrCheck(tin){return algorithms$1.iso7064Check(tin);}/*
  	 * hu-HU validation function
  	 * (Adóazonosító jel, persons only)
  	 * Verify TIN validity by calculating check (last) digit
  	 */function huHuCheck(tin){// split digits into an array for further processing
  var digits=tin.split('').map(function(a){return parseInt(a,10);});var checksum=8;for(var i=1;i<9;i++){checksum+=digits[i]*(i+1);}return checksum%11===digits[9];}/*
  	 * lt-LT validation function (should go here if needed)
  	 * (Asmens kodas, persons/entities respectively)
  	 * Current validation check is alias of etEeCheck- same format applies
  	 */ /*
  	 * it-IT first/last name validity check
  	 * Accepts it-IT TIN-encoded names as a three-element character array and checks their validity
  	 * Due to lack of clarity between resources ("Are only Italian consonants used?
  	 * What happens if a person has X in their name?" etc.) only two test conditions
  	 * have been implemented:
  	 * Vowels may only be followed by other vowels or an X character
  	 * and X characters after vowels may only be followed by other X characters.
  	 */function itItNameCheck(name){// true at the first occurence of a vowel
  var vowelflag=false;// true at the first occurence of an X AFTER vowel
  // (to properly handle last names with X as consonant)
  var xflag=false;for(var i=0;i<3;i++){if(!vowelflag&&/[AEIOU]/.test(name[i])){vowelflag=true;}else if(!xflag&&vowelflag&&name[i]==='X'){xflag=true;}else if(i>0){if(vowelflag&&!xflag){if(!/[AEIOU]/.test(name[i])){return false;}}if(xflag){if(!/X/.test(name[i])){return false;}}}}return true;}/*
  	 * it-IT validation function
  	 * (Codice fiscale (TIN-IT), persons only)
  	 * Verify name, birth date and codice catastale validity
  	 * and calculate check character.
  	 * Material not in DG-TAXUD document sourced from:
  	 * `https://en.wikipedia.org/wiki/Italian_fiscal_code`
  	 */function itItCheck(tin){// Capitalize and split characters into an array for further processing
  var chars=tin.toUpperCase().split('');// Check first and last name validity calling itItNameCheck()
  if(!itItNameCheck(chars.slice(0,3))){return false;}if(!itItNameCheck(chars.slice(3,6))){return false;}// Convert letters in number spaces back to numbers if any
  var number_locations=[6,7,9,10,12,13,14];var number_replace={L:'0',M:'1',N:'2',P:'3',Q:'4',R:'5',S:'6',T:'7',U:'8',V:'9'};for(var _i4=0,_number_locations=number_locations;_i4<_number_locations.length;_i4++){var i=_number_locations[_i4];if(chars[i]in number_replace){chars.splice(i,1,number_replace[chars[i]]);}}// Extract month and day, and check date validity
  var month_replace={A:'01',B:'02',C:'03',D:'04',E:'05',H:'06',L:'07',M:'08',P:'09',R:'10',S:'11',T:'12'};var month=month_replace[chars[8]];var day=parseInt(chars[9]+chars[10],10);if(day>40){day-=40;}if(day<10){day="0".concat(day);}var date="".concat(chars[6]).concat(chars[7],"/").concat(month,"/").concat(day);if(!(0, _isDate.default)(date,'YY/MM/DD')){return false;}// Calculate check character by adding up even and odd characters as numbers
  var checksum=0;for(var _i5=1;_i5<chars.length-1;_i5+=2){var char_to_int=parseInt(chars[_i5],10);if(isNaN(char_to_int)){char_to_int=chars[_i5].charCodeAt(0)-65;}checksum+=char_to_int;}var odd_convert={// Maps of characters at odd places
  A:1,B:0,C:5,D:7,E:9,F:13,G:15,H:17,I:19,J:21,K:2,L:4,M:18,N:20,O:11,P:3,Q:6,R:8,S:12,T:14,U:16,V:10,W:22,X:25,Y:24,Z:23,0:1,1:0};for(var _i6=0;_i6<chars.length-1;_i6+=2){var _char_to_int=0;if(chars[_i6]in odd_convert){_char_to_int=odd_convert[chars[_i6]];}else {var multiplier=parseInt(chars[_i6],10);_char_to_int=2*multiplier+1;if(multiplier>4){_char_to_int+=2;}}checksum+=_char_to_int;}if(String.fromCharCode(65+checksum%26)!==chars[15]){return false;}return true;}/*
  	 * lv-LV validation function
  	 * (Personas kods (PK), persons only)
  	 * Check validity of birth date and calculate check (last) digit
  	 * Support only for old format numbers (not starting with '32', issued before 2017/07/01)
  	 * Material not in DG TAXUD document sourced from:
  	 * `https://boot.ritakafija.lv/forums/index.php?/topic/88314-personas-koda-algoritms-%C4%8Deksumma/`
  	 */function lvLvCheck(tin){tin=tin.replace(/\W/,'');// Extract date from TIN
  var day=tin.slice(0,2);if(day!=='32'){// No date/checksum check if new format
  var month=tin.slice(2,4);if(month!=='00'){// No date check if unknown month
  var full_year=tin.slice(4,6);switch(tin[6]){case'0':full_year="18".concat(full_year);break;case'1':full_year="19".concat(full_year);break;default:full_year="20".concat(full_year);break;}// Check date validity
  var date="".concat(full_year,"/").concat(tin.slice(2,4),"/").concat(day);if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}}// Calculate check digit
  var checksum=1101;var multip_lookup=[1,6,3,7,9,10,5,8,4,2];for(var i=0;i<tin.length-1;i++){checksum-=parseInt(tin[i],10)*multip_lookup[i];}return parseInt(tin[10],10)===checksum%11;}return true;}/*
  	 * mt-MT validation function
  	 * (Identity Card Number or Unique Taxpayer Reference, persons/entities)
  	 * Verify Identity Card Number structure (no other tests found)
  	 */function mtMtCheck(tin){if(tin.length!==9){// No tests for UTR
  var chars=tin.toUpperCase().split('');// Fill with zeros if smaller than proper
  while(chars.length<8){chars.unshift(0);}// Validate format according to last character
  switch(tin[7]){case'A':case'P':if(parseInt(chars[6],10)===0){return false;}break;default:{var first_part=parseInt(chars.join('').slice(0,5),10);if(first_part>32000){return false;}var second_part=parseInt(chars.join('').slice(5,7),10);if(first_part===second_part){return false;}}}}return true;}/*
  	 * nl-NL validation function
  	 * (Burgerservicenummer (BSN) or Rechtspersonen Samenwerkingsverbanden Informatie Nummer (RSIN),
  	 * persons/entities respectively)
  	 * Verify TIN validity by calculating check (last) digit (variant of MOD 11)
  	 */function nlNlCheck(tin){return algorithms$1.reverseMultiplyAndSum(tin.split('').slice(0,8).map(function(a){return parseInt(a,10);}),9)%11===parseInt(tin[8],10);}/*
  	 * pl-PL validation function
  	 * (Powszechny Elektroniczny System Ewidencji Ludności (PESEL)
  	 * or Numer identyfikacji podatkowej (NIP), persons/entities)
  	 * Verify TIN validity by validating birth date (PESEL) and calculating check (last) digit
  	 */function plPlCheck(tin){// NIP
  if(tin.length===10){// Calculate last digit by multiplying with lookup
  var lookup=[6,5,7,2,3,4,5,6,7];var _checksum=0;for(var i=0;i<lookup.length;i++){_checksum+=parseInt(tin[i],10)*lookup[i];}_checksum%=11;if(_checksum===10){return false;}return _checksum===parseInt(tin[9],10);}// PESEL
  // Extract full year using month
  var full_year=tin.slice(0,2);var month=parseInt(tin.slice(2,4),10);if(month>80){full_year="18".concat(full_year);month-=80;}else if(month>60){full_year="22".concat(full_year);month-=60;}else if(month>40){full_year="21".concat(full_year);month-=40;}else if(month>20){full_year="20".concat(full_year);month-=20;}else {full_year="19".concat(full_year);}// Add leading zero to month if needed
  if(month<10){month="0".concat(month);}// Check date validity
  var date="".concat(full_year,"/").concat(month,"/").concat(tin.slice(4,6));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Calculate last digit by mulitplying with odd one-digit numbers except 5
  var checksum=0;var multiplier=1;for(var _i7=0;_i7<tin.length-1;_i7++){checksum+=parseInt(tin[_i7],10)*multiplier%10;multiplier+=2;if(multiplier>10){multiplier=1;}else if(multiplier===5){multiplier+=2;}}checksum=10-checksum%10;return checksum===parseInt(tin[10],10);}/*
  	* pt-BR validation function
  	* (Cadastro de Pessoas Físicas (CPF, persons)
  	* Cadastro Nacional de Pessoas Jurídicas (CNPJ, entities)
  	* Both inputs will be validated
  	*/function ptBrCheck(tin){if(tin.length===11){var _sum;var remainder;_sum=0;if(// Reject known invalid CPFs
  tin==='11111111111'||tin==='22222222222'||tin==='33333333333'||tin==='44444444444'||tin==='55555555555'||tin==='66666666666'||tin==='77777777777'||tin==='88888888888'||tin==='99999999999'||tin==='00000000000')return false;for(var i=1;i<=9;i++){_sum+=parseInt(tin.substring(i-1,i),10)*(11-i);}remainder=_sum*10%11;if(remainder===10)remainder=0;if(remainder!==parseInt(tin.substring(9,10),10))return false;_sum=0;for(var _i8=1;_i8<=10;_i8++){_sum+=parseInt(tin.substring(_i8-1,_i8),10)*(12-_i8);}remainder=_sum*10%11;if(remainder===10)remainder=0;if(remainder!==parseInt(tin.substring(10,11),10))return false;return true;}if(// Reject know invalid CNPJs
  tin==='00000000000000'||tin==='11111111111111'||tin==='22222222222222'||tin==='33333333333333'||tin==='44444444444444'||tin==='55555555555555'||tin==='66666666666666'||tin==='77777777777777'||tin==='88888888888888'||tin==='99999999999999'){return false;}var length=tin.length-2;var identifiers=tin.substring(0,length);var verificators=tin.substring(length);var sum=0;var pos=length-7;for(var _i9=length;_i9>=1;_i9--){sum+=identifiers.charAt(length-_i9)*pos;pos-=1;if(pos<2){pos=9;}}var result=sum%11<2?0:11-sum%11;if(result!==parseInt(verificators.charAt(0),10)){return false;}length+=1;identifiers=tin.substring(0,length);sum=0;pos=length-7;for(var _i10=length;_i10>=1;_i10--){sum+=identifiers.charAt(length-_i10)*pos;pos-=1;if(pos<2){pos=9;}}result=sum%11<2?0:11-sum%11;if(result!==parseInt(verificators.charAt(1),10)){return false;}return true;}/*
  	 * pt-PT validation function
  	 * (Número de identificação fiscal (NIF), persons/entities)
  	 * Verify TIN validity by calculating check (last) digit (variant of MOD 11)
  	 */function ptPtCheck(tin){var checksum=11-algorithms$1.reverseMultiplyAndSum(tin.split('').slice(0,8).map(function(a){return parseInt(a,10);}),9)%11;if(checksum>9){return parseInt(tin[8],10)===0;}return checksum===parseInt(tin[8],10);}/*
  	 * ro-RO validation function
  	 * (Cod Numeric Personal (CNP) or Cod de înregistrare fiscală (CIF),
  	 * persons only)
  	 * Verify CNP validity by calculating check (last) digit (test not found for CIF)
  	 * Material not in DG TAXUD document sourced from:
  	 * `https://en.wikipedia.org/wiki/National_identification_number#Romania`
  	 */function roRoCheck(tin){if(tin.slice(0,4)!=='9000'){// No test found for this format
  // Extract full year using century digit if possible
  var full_year=tin.slice(1,3);switch(tin[0]){case'1':case'2':full_year="19".concat(full_year);break;case'3':case'4':full_year="18".concat(full_year);break;case'5':case'6':full_year="20".concat(full_year);break;}// Check date validity
  var date="".concat(full_year,"/").concat(tin.slice(3,5),"/").concat(tin.slice(5,7));if(date.length===8){if(!(0, _isDate.default)(date,'YY/MM/DD')){return false;}}else if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}// Calculate check digit
  var digits=tin.split('').map(function(a){return parseInt(a,10);});var multipliers=[2,7,9,1,4,6,3,5,8,2,7,9];var checksum=0;for(var i=0;i<multipliers.length;i++){checksum+=digits[i]*multipliers[i];}if(checksum%11===10){return digits[12]===1;}return digits[12]===checksum%11;}return true;}/*
  	 * sk-SK validation function
  	 * (Rodné číslo (RČ) or bezvýznamové identifikačné číslo (BIČ), persons only)
  	 * Checks validity of pre-1954 birth numbers (rodné číslo) only
  	 * Due to the introduction of the pseudo-random BIČ it is not possible to test
  	 * post-1954 birth numbers without knowing whether they are BIČ or RČ beforehand
  	 */function skSkCheck(tin){if(tin.length===9){tin=tin.replace(/\W/,'');if(tin.slice(6)==='000'){return false;}// Three-zero serial not assigned before 1954
  // Extract full year from TIN length
  var full_year=parseInt(tin.slice(0,2),10);if(full_year>53){return false;}if(full_year<10){full_year="190".concat(full_year);}else {full_year="19".concat(full_year);}// Extract month from TIN and normalize
  var month=parseInt(tin.slice(2,4),10);if(month>50){month-=50;}if(month<10){month="0".concat(month);}// Check date validity
  var date="".concat(full_year,"/").concat(month,"/").concat(tin.slice(4,6));if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}}return true;}/*
  	 * sl-SI validation function
  	 * (Davčna številka, persons/entities)
  	 * Verify TIN validity by calculating check (last) digit (variant of MOD 11)
  	 */function slSiCheck(tin){var checksum=11-algorithms$1.reverseMultiplyAndSum(tin.split('').slice(0,7).map(function(a){return parseInt(a,10);}),8)%11;if(checksum===10){return parseInt(tin[7],10)===0;}return checksum===parseInt(tin[7],10);}/*
  	 * sv-SE validation function
  	 * (Personnummer or samordningsnummer, persons only)
  	 * Checks validity of birth date and calls luhnCheck() to validate check (last) digit
  	 */function svSeCheck(tin){// Make copy of TIN and normalize to two-digit year form
  var tin_copy=tin.slice(0);if(tin.length>11){tin_copy=tin_copy.slice(2);}// Extract date of birth
  var full_year='';var month=tin_copy.slice(2,4);var day=parseInt(tin_copy.slice(4,6),10);if(tin.length>11){full_year=tin.slice(0,4);}else {full_year=tin.slice(0,2);if(tin.length===11&&day<60){// Extract full year from centenarian symbol
  // Should work just fine until year 10000 or so
  var current_year=new Date().getFullYear().toString();var current_century=parseInt(current_year.slice(0,2),10);current_year=parseInt(current_year,10);if(tin[6]==='-'){if(parseInt("".concat(current_century).concat(full_year),10)>current_year){full_year="".concat(current_century-1).concat(full_year);}else {full_year="".concat(current_century).concat(full_year);}}else {full_year="".concat(current_century-1).concat(full_year);if(current_year-parseInt(full_year,10)<100){return false;}}}}// Normalize day and check date validity
  if(day>60){day-=60;}if(day<10){day="0".concat(day);}var date="".concat(full_year,"/").concat(month,"/").concat(day);if(date.length===8){if(!(0, _isDate.default)(date,'YY/MM/DD')){return false;}}else if(!(0, _isDate.default)(date,'YYYY/MM/DD')){return false;}return algorithms$1.luhnCheck(tin.replace(/\W/,''));}// Locale lookup objects
  /*
  	 * Tax id regex formats for various locales
  	 *
  	 * Where not explicitly specified in DG-TAXUD document both
  	 * uppercase and lowercase letters are acceptable.
  	 */var taxIdFormat={'bg-BG':/^\d{10}$/,'cs-CZ':/^\d{6}\/{0,1}\d{3,4}$/,'de-AT':/^\d{9}$/,'de-DE':/^[1-9]\d{10}$/,'dk-DK':/^\d{6}-{0,1}\d{4}$/,'el-CY':/^[09]\d{7}[A-Z]$/,'el-GR':/^([0-4]|[7-9])\d{8}$/,'en-GB':/^\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\d{6}[ABCD ]$/i,'en-IE':/^\d{7}[A-W][A-IW]{0,1}$/i,'en-US':/^\d{2}[- ]{0,1}\d{7}$/,'es-ES':/^(\d{0,8}|[XYZKLM]\d{7})[A-HJ-NP-TV-Z]$/i,'et-EE':/^[1-6]\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\d$/,'fi-FI':/^\d{6}[-+A]\d{3}[0-9A-FHJ-NPR-Y]$/i,'fr-BE':/^\d{11}$/,'fr-FR':/^[0-3]\d{12}$|^[0-3]\d\s\d{2}(\s\d{3}){3}$/,// Conforms both to official spec and provided example
  'fr-LU':/^\d{13}$/,'hr-HR':/^\d{11}$/,'hu-HU':/^8\d{9}$/,'it-IT':/^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,'lv-LV':/^\d{6}-{0,1}\d{5}$/,// Conforms both to DG TAXUD spec and original research
  'mt-MT':/^\d{3,7}[APMGLHBZ]$|^([1-8])\1\d{7}$/i,'nl-NL':/^\d{9}$/,'pl-PL':/^\d{10,11}$/,'pt-BR':/(?:^\d{11}$)|(?:^\d{14}$)/,'pt-PT':/^\d{9}$/,'ro-RO':/^\d{13}$/,'sk-SK':/^\d{6}\/{0,1}\d{3,4}$/,'sl-SI':/^[1-9]\d{7}$/,'sv-SE':/^(\d{6}[-+]{0,1}\d{4}|(18|19|20)\d{6}[-+]{0,1}\d{4})$/};// taxIdFormat locale aliases
  taxIdFormat['lb-LU']=taxIdFormat['fr-LU'];taxIdFormat['lt-LT']=taxIdFormat['et-EE'];taxIdFormat['nl-BE']=taxIdFormat['fr-BE'];// Algorithmic tax id check functions for various locales
  var taxIdCheck={'bg-BG':bgBgCheck,'cs-CZ':csCzCheck,'de-AT':deAtCheck,'de-DE':deDeCheck,'dk-DK':dkDkCheck,'el-CY':elCyCheck,'el-GR':elGrCheck,'en-IE':enIeCheck,'en-US':enUsCheck,'es-ES':esEsCheck,'et-EE':etEeCheck,'fi-FI':fiFiCheck,'fr-BE':frBeCheck,'fr-FR':frFrCheck,'fr-LU':frLuCheck,'hr-HR':hrHrCheck,'hu-HU':huHuCheck,'it-IT':itItCheck,'lv-LV':lvLvCheck,'mt-MT':mtMtCheck,'nl-NL':nlNlCheck,'pl-PL':plPlCheck,'pt-BR':ptBrCheck,'pt-PT':ptPtCheck,'ro-RO':roRoCheck,'sk-SK':skSkCheck,'sl-SI':slSiCheck,'sv-SE':svSeCheck};// taxIdCheck locale aliases
  taxIdCheck['lb-LU']=taxIdCheck['fr-LU'];taxIdCheck['lt-LT']=taxIdCheck['et-EE'];taxIdCheck['nl-BE']=taxIdCheck['fr-BE'];// Regexes for locales where characters should be omitted before checking format
  var allsymbols=/[-\\\/!@#$%\^&\*\(\)\+\=\[\]]+/g;var sanitizeRegexes={'de-AT':allsymbols,'de-DE':/[\/\\]/g,'fr-BE':allsymbols};// sanitizeRegexes locale aliases
  sanitizeRegexes['nl-BE']=sanitizeRegexes['fr-BE'];/*
  	 * Validator function
  	 * Return true if the passed string is a valid tax identification number
  	 * for the specified locale.
  	 * Throw an error exception if the locale is not supported.
  	 */function isTaxID(str){var locale=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'en-US';(0, _assertString.default)(str);// Copy TIN to avoid replacement if sanitized
  var strcopy=str.slice(0);if(locale in taxIdFormat){if(locale in sanitizeRegexes){strcopy=strcopy.replace(sanitizeRegexes[locale],'');}if(!taxIdFormat[locale].test(strcopy)){return false;}if(locale in taxIdCheck){return taxIdCheck[locale](strcopy);}// Fallthrough; not all locales have algorithmic checks
  return true;}throw new Error("Invalid locale '".concat(locale,"'"));}module.exports=exports.default;module.exports.default=exports.default;})(isTaxID,isTaxID.exports);

  var isMobilePhone$1 = {};

  Object.defineProperty(isMobilePhone$1,"__esModule",{value:true});isMobilePhone$1.default=isMobilePhone;isMobilePhone$1.locales=void 0;var _assertString$3=_interopRequireDefault$3(assertString.exports);function _interopRequireDefault$3(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable max-len */var phones={'am-AM':/^(\+?374|0)((10|[9|7][0-9])\d{6}$|[2-4]\d{7}$)/,'ar-AE':/^((\+?971)|0)?5[024568]\d{7}$/,'ar-BH':/^(\+?973)?(3|6)\d{7}$/,'ar-DZ':/^(\+?213|0)(5|6|7)\d{8}$/,'ar-LB':/^(\+?961)?((3|81)\d{6}|7\d{7})$/,'ar-EG':/^((\+?20)|0)?1[0125]\d{8}$/,'ar-IQ':/^(\+?964|0)?7[0-9]\d{8}$/,'ar-JO':/^(\+?962|0)?7[789]\d{7}$/,'ar-KW':/^(\+?965)[569]\d{7}$/,'ar-LY':/^((\+?218)|0)?(9[1-6]\d{7}|[1-8]\d{7,9})$/,'ar-MA':/^(?:(?:\+|00)212|0)[5-7]\d{8}$/,'ar-OM':/^((\+|00)968)?(9[1-9])\d{6}$/,'ar-PS':/^(\+?970|0)5[6|9](\d{7})$/,'ar-SA':/^(!?(\+?966)|0)?5\d{8}$/,'ar-SY':/^(!?(\+?963)|0)?9\d{8}$/,'ar-TN':/^(\+?216)?[2459]\d{7}$/,'az-AZ':/^(\+994|0)(5[015]|7[07]|99)\d{7}$/,'bs-BA':/^((((\+|00)3876)|06))((([0-3]|[5-6])\d{6})|(4\d{7}))$/,'be-BY':/^(\+?375)?(24|25|29|33|44)\d{7}$/,'bg-BG':/^(\+?359|0)?8[789]\d{7}$/,'bn-BD':/^(\+?880|0)1[13456789][0-9]{8}$/,'ca-AD':/^(\+376)?[346]\d{5}$/,'cs-CZ':/^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,'da-DK':/^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,'de-DE':/^((\+49|0)[1|3])([0|5][0-45-9]\d|6([23]|0\d?)|7([0-57-9]|6\d))\d{7,9}$/,'de-AT':/^(\+43|0)\d{1,4}\d{3,12}$/,'de-CH':/^(\+41|0)([1-9])\d{1,9}$/,'de-LU':/^(\+352)?((6\d1)\d{6})$/,'dv-MV':/^(\+?960)?(7[2-9]|91|9[3-9])\d{7}$/,'el-GR':/^(\+?30|0)?(69\d{8})$/,'en-AU':/^(\+?61|0)4\d{8}$/,'en-BM':/^(\+?1)?441(((3|7)\d{6}$)|(5[0-3][0-9]\d{4}$)|(59\d{5}))/,'en-GB':/^(\+?44|0)7\d{9}$/,'en-GG':/^(\+?44|0)1481\d{6}$/,'en-GH':/^(\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\d{7}$/,'en-GY':/^(\+592|0)6\d{6}$/,'en-HK':/^(\+?852[-\s]?)?[456789]\d{3}[-\s]?\d{4}$/,'en-MO':/^(\+?853[-\s]?)?[6]\d{3}[-\s]?\d{4}$/,'en-IE':/^(\+?353|0)8[356789]\d{7}$/,'en-IN':/^(\+?91|0)?[6789]\d{9}$/,'en-KE':/^(\+?254|0)(7|1)\d{8}$/,'en-KI':/^((\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,'en-MT':/^(\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,'en-MU':/^(\+?230|0)?\d{8}$/,'en-NA':/^(\+?264|0)(6|8)\d{7}$/,'en-NG':/^(\+?234|0)?[789]\d{9}$/,'en-NZ':/^(\+?64|0)[28]\d{7,9}$/,'en-PK':/^((00|\+)?92|0)3[0-6]\d{8}$/,'en-PH':/^(09|\+639)\d{9}$/,'en-RW':/^(\+?250|0)?[7]\d{8}$/,'en-SG':/^(\+65)?[3689]\d{7}$/,'en-SL':/^(\+?232|0)\d{8}$/,'en-TZ':/^(\+?255|0)?[67]\d{8}$/,'en-UG':/^(\+?256|0)?[7]\d{8}$/,'en-US':/^((\+1|1)?( |-)?)?(\([2-9][0-9]{2}\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,'en-ZA':/^(\+?27|0)\d{9}$/,'en-ZM':/^(\+?26)?09[567]\d{7}$/,'en-ZW':/^(\+263)[0-9]{9}$/,'en-BW':/^(\+?267)?(7[1-8]{1})\d{6}$/,'es-AR':/^\+?549(11|[2368]\d)\d{8}$/,'es-BO':/^(\+?591)?(6|7)\d{7}$/,'es-CO':/^(\+?57)?3(0(0|1|2|4|5)|1\d|2[0-4]|5(0|1))\d{7}$/,'es-CL':/^(\+?56|0)[2-9]\d{1}\d{7}$/,'es-CR':/^(\+506)?[2-8]\d{7}$/,'es-CU':/^(\+53|0053)?5\d{7}/,'es-DO':/^(\+?1)?8[024]9\d{7}$/,'es-HN':/^(\+?504)?[9|8]\d{7}$/,'es-EC':/^(\+?593|0)([2-7]|9[2-9])\d{7}$/,'es-ES':/^(\+?34)?[6|7]\d{8}$/,'es-PE':/^(\+?51)?9\d{8}$/,'es-MX':/^(\+?52)?(1|01)?\d{10,11}$/,'es-PA':/^(\+?507)\d{7,8}$/,'es-PY':/^(\+?595|0)9[9876]\d{7}$/,'es-SV':/^(\+?503)?[67]\d{7}$/,'es-UY':/^(\+598|0)9[1-9][\d]{6}$/,'es-VE':/^(\+?58)?(2|4)\d{9}$/,'et-EE':/^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,'fa-IR':/^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,'fi-FI':/^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,'fj-FJ':/^(\+?679)?\s?\d{3}\s?\d{4}$/,'fo-FO':/^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,'fr-BF':/^(\+226|0)[67]\d{7}$/,'fr-CM':/^(\+?237)6[0-9]{8}$/,'fr-FR':/^(\+?33|0)[67]\d{8}$/,'fr-GF':/^(\+?594|0|00594)[67]\d{8}$/,'fr-GP':/^(\+?590|0|00590)[67]\d{8}$/,'fr-MQ':/^(\+?596|0|00596)[67]\d{8}$/,'fr-PF':/^(\+?689)?8[789]\d{6}$/,'fr-RE':/^(\+?262|0|00262)[67]\d{8}$/,'he-IL':/^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}$/,'hu-HU':/^(\+?36|06)(20|30|31|50|70)\d{7}$/,'id-ID':/^(\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\s?|\d]{5,11})$/,'it-IT':/^(\+?39)?\s?3\d{2} ?\d{6,7}$/,'it-SM':/^((\+378)|(0549)|(\+390549)|(\+3780549))?6\d{5,9}$/,'ja-JP':/^(\+81[ \-]?(\(0\))?|0)[6789]0[ \-]?\d{4}[ \-]?\d{4}$/,'ka-GE':/^(\+?995)?(5|79)\d{7}$/,'kk-KZ':/^(\+?7|8)?7\d{9}$/,'kl-GL':/^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,'ko-KR':/^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,'lt-LT':/^(\+370|8)\d{8}$/,'lv-LV':/^(\+?371)2\d{7}$/,'ms-MY':/^(\+?6?01){1}(([0145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,'mz-MZ':/^(\+?258)?8[234567]\d{7}$/,'nb-NO':/^(\+?47)?[49]\d{7}$/,'ne-NP':/^(\+?977)?9[78]\d{8}$/,'nl-BE':/^(\+?32|0)4\d{8}$/,'nl-NL':/^(((\+|00)?31\(0\))|((\+|00)?31)|0)6{1}\d{8}$/,'nn-NO':/^(\+?47)?[49]\d{7}$/,'pl-PL':/^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,'pt-BR':/^((\+?55\ ?[1-9]{2}\ ?)|(\+?55\ ?\([1-9]{2}\)\ ?)|(0[1-9]{2}\ ?)|(\([1-9]{2}\)\ ?)|([1-9]{2}\ ?))((\d{4}\-?\d{4})|(9[2-9]{1}\d{3}\-?\d{4}))$/,'pt-PT':/^(\+?351)?9[1236]\d{7}$/,'pt-AO':/^(\+244)\d{9}$/,'ro-RO':/^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,'ru-RU':/^(\+?7|8)?9\d{9}$/,'si-LK':/^(?:0|94|\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\d{7}$/,'sl-SI':/^(\+386\s?|0)(\d{1}\s?\d{3}\s?\d{2}\s?\d{2}|\d{2}\s?\d{3}\s?\d{3})$/,'sk-SK':/^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,'sq-AL':/^(\+355|0)6[789]\d{6}$/,'sr-RS':/^(\+3816|06)[- \d]{5,9}$/,'sv-SE':/^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,'tg-TJ':/^(\+?992)?[5][5]\d{7}$/,'th-TH':/^(\+66|66|0)\d{9}$/,'tr-TR':/^(\+?90|0)?5\d{9}$/,'tk-TM':/^(\+993|993|8)\d{8}$/,'uk-UA':/^(\+?38|8)?0\d{9}$/,'uz-UZ':/^(\+?998)?(6[125-79]|7[1-69]|88|9\d)\d{7}$/,'vi-VN':/^((\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,'zh-CN':/^((\+|00)86)?(1[3-9]|9[28])\d{9}$/,'zh-TW':/^(\+?886\-?|0)?9\d{8}$/,'dz-BT':/^(\+?975|0)?(17|16|77|02)\d{6}$/};/* eslint-enable max-len */ // aliases
  phones['en-CA']=phones['en-US'];phones['fr-CA']=phones['en-CA'];phones['fr-BE']=phones['nl-BE'];phones['zh-HK']=phones['en-HK'];phones['zh-MO']=phones['en-MO'];phones['ga-IE']=phones['en-IE'];phones['fr-CH']=phones['de-CH'];phones['it-CH']=phones['fr-CH'];function isMobilePhone(str,locale,options){(0, _assertString$3.default)(str);if(options&&options.strictMode&&!str.startsWith('+')){return false;}if(Array.isArray(locale)){return locale.some(function(key){// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
  // istanbul ignore else
  if(phones.hasOwnProperty(key)){var phone=phones[key];if(phone.test(str)){return true;}}return false;});}else if(locale in phones){return phones[locale].test(str);// alias falsey locale as 'any'
  }else if(!locale||locale==='any'){for(var key in phones){// istanbul ignore else
  if(phones.hasOwnProperty(key)){var phone=phones[key];if(phone.test(str)){return true;}}}return false;}throw new Error("Invalid locale '".concat(locale,"'"));}var locales$1=Object.keys(phones);isMobilePhone$1.locales=locales$1;

  var isEthereumAddress = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isEthereumAddress;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var eth=/^(0x)[0-9a-f]{40}$/i;function isEthereumAddress(str){(0, _assertString.default)(str);return eth.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isEthereumAddress,isEthereumAddress.exports);

  var isCurrency = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isCurrency;var _merge=_interopRequireDefault(merge$2.exports);var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function currencyRegex(options){var decimal_digits="\\d{".concat(options.digits_after_decimal[0],"}");options.digits_after_decimal.forEach(function(digit,index){if(index!==0)decimal_digits="".concat(decimal_digits,"|\\d{").concat(digit,"}");});var symbol="(".concat(options.symbol.replace(/\W/,function(m){return "\\".concat(m);}),")").concat(options.require_symbol?'':'?'),negative='-?',whole_dollar_amount_without_sep='[1-9]\\d*',whole_dollar_amount_with_sep="[1-9]\\d{0,2}(\\".concat(options.thousands_separator,"\\d{3})*"),valid_whole_dollar_amounts=['0',whole_dollar_amount_without_sep,whole_dollar_amount_with_sep],whole_dollar_amount="(".concat(valid_whole_dollar_amounts.join('|'),")?"),decimal_amount="(\\".concat(options.decimal_separator,"(").concat(decimal_digits,"))").concat(options.require_decimal?'':'?');var pattern=whole_dollar_amount+(options.allow_decimal||options.require_decimal?decimal_amount:'');// default is negative sign before symbol, but there are two other options (besides parens)
  if(options.allow_negatives&&!options.parens_for_negatives){if(options.negative_sign_after_digits){pattern+=negative;}else if(options.negative_sign_before_digits){pattern=negative+pattern;}}// South African Rand, for example, uses R 123 (space) and R-123 (no space)
  if(options.allow_negative_sign_placeholder){pattern="( (?!\\-))?".concat(pattern);}else if(options.allow_space_after_symbol){pattern=" ?".concat(pattern);}else if(options.allow_space_after_digits){pattern+='( (?!$))?';}if(options.symbol_after_digits){pattern+=symbol;}else {pattern=symbol+pattern;}if(options.allow_negatives){if(options.parens_for_negatives){pattern="(\\(".concat(pattern,"\\)|").concat(pattern,")");}else if(!(options.negative_sign_before_digits||options.negative_sign_after_digits)){pattern=negative+pattern;}}// ensure there's a dollar and/or decimal amount, and that
  // it doesn't start with a space or a negative sign followed by a space
  return new RegExp("^(?!-? )(?=.*\\d)".concat(pattern,"$"));}var default_currency_options={symbol:'$',require_symbol:false,allow_space_after_symbol:false,symbol_after_digits:false,allow_negatives:true,parens_for_negatives:false,negative_sign_before_digits:false,negative_sign_after_digits:false,allow_negative_sign_placeholder:false,thousands_separator:',',decimal_separator:'.',allow_decimal:true,require_decimal:false,digits_after_decimal:[2],allow_space_after_digits:false};function isCurrency(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,default_currency_options);return currencyRegex(options).test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isCurrency,isCurrency.exports);

  var isBtcAddress = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBtcAddress;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// supports Bech32 addresses
  var bech32=/^(bc1)[a-z0-9]{25,39}$/;var base58=/^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;function isBtcAddress(str){(0, _assertString.default)(str);// check for bech32
  if(str.startsWith('bc1')){return bech32.test(str);}return base58.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isBtcAddress,isBtcAddress.exports);

  var isISO8601 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isISO8601;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable max-len */ // from http://goo.gl/0ejHHW
  var iso8601=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;// same as above, except with a strict 'T' separator between date and time
  var iso8601StrictSeparator=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;/* eslint-enable max-len */var isValidDate=function isValidDate(str){// str must have passed the ISO8601 check
  // this check is meant to catch invalid dates
  // like 2009-02-31
  // first check for ordinal dates
  var ordinalMatch=str.match(/^(\d{4})-?(\d{3})([ T]{1}\.*|$)/);if(ordinalMatch){var oYear=Number(ordinalMatch[1]);var oDay=Number(ordinalMatch[2]);// if is leap year
  if(oYear%4===0&&oYear%100!==0||oYear%400===0)return oDay<=366;return oDay<=365;}var match=str.match(/(\d{4})-?(\d{0,2})-?(\d*)/).map(Number);var year=match[1];var month=match[2];var day=match[3];var monthString=month?"0".concat(month).slice(-2):month;var dayString=day?"0".concat(day).slice(-2):day;// create a date object and compare
  var d=new Date("".concat(year,"-").concat(monthString||'01',"-").concat(dayString||'01'));if(month&&day){return d.getUTCFullYear()===year&&d.getUTCMonth()+1===month&&d.getUTCDate()===day;}return true;};function isISO8601(str){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};(0, _assertString.default)(str);var check=options.strictSeparator?iso8601StrictSeparator.test(str):iso8601.test(str);if(check&&options.strict)return isValidDate(str);return check;}module.exports=exports.default;module.exports.default=exports.default;})(isISO8601,isISO8601.exports);

  var isRFC3339 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isRFC3339;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */var dateFullYear=/[0-9]{4}/;var dateMonth=/(0[1-9]|1[0-2])/;var dateMDay=/([12]\d|0[1-9]|3[01])/;var timeHour=/([01][0-9]|2[0-3])/;var timeMinute=/[0-5][0-9]/;var timeSecond=/([0-5][0-9]|60)/;var timeSecFrac=/(\.[0-9]+)?/;var timeNumOffset=new RegExp("[-+]".concat(timeHour.source,":").concat(timeMinute.source));var timeOffset=new RegExp("([zZ]|".concat(timeNumOffset.source,")"));var partialTime=new RegExp("".concat(timeHour.source,":").concat(timeMinute.source,":").concat(timeSecond.source).concat(timeSecFrac.source));var fullDate=new RegExp("".concat(dateFullYear.source,"-").concat(dateMonth.source,"-").concat(dateMDay.source));var fullTime=new RegExp("".concat(partialTime.source).concat(timeOffset.source));var rfc3339=new RegExp("^".concat(fullDate.source,"[ tT]").concat(fullTime.source,"$"));function isRFC3339(str){(0, _assertString.default)(str);return rfc3339.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isRFC3339,isRFC3339.exports);

  var isISO31661Alpha3 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isISO31661Alpha3;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
  var validISO31661Alpha3CountriesCodes=new Set(['AFG','ALA','ALB','DZA','ASM','AND','AGO','AIA','ATA','ATG','ARG','ARM','ABW','AUS','AUT','AZE','BHS','BHR','BGD','BRB','BLR','BEL','BLZ','BEN','BMU','BTN','BOL','BES','BIH','BWA','BVT','BRA','IOT','BRN','BGR','BFA','BDI','KHM','CMR','CAN','CPV','CYM','CAF','TCD','CHL','CHN','CXR','CCK','COL','COM','COG','COD','COK','CRI','CIV','HRV','CUB','CUW','CYP','CZE','DNK','DJI','DMA','DOM','ECU','EGY','SLV','GNQ','ERI','EST','ETH','FLK','FRO','FJI','FIN','FRA','GUF','PYF','ATF','GAB','GMB','GEO','DEU','GHA','GIB','GRC','GRL','GRD','GLP','GUM','GTM','GGY','GIN','GNB','GUY','HTI','HMD','VAT','HND','HKG','HUN','ISL','IND','IDN','IRN','IRQ','IRL','IMN','ISR','ITA','JAM','JPN','JEY','JOR','KAZ','KEN','KIR','PRK','KOR','KWT','KGZ','LAO','LVA','LBN','LSO','LBR','LBY','LIE','LTU','LUX','MAC','MKD','MDG','MWI','MYS','MDV','MLI','MLT','MHL','MTQ','MRT','MUS','MYT','MEX','FSM','MDA','MCO','MNG','MNE','MSR','MAR','MOZ','MMR','NAM','NRU','NPL','NLD','NCL','NZL','NIC','NER','NGA','NIU','NFK','MNP','NOR','OMN','PAK','PLW','PSE','PAN','PNG','PRY','PER','PHL','PCN','POL','PRT','PRI','QAT','REU','ROU','RUS','RWA','BLM','SHN','KNA','LCA','MAF','SPM','VCT','WSM','SMR','STP','SAU','SEN','SRB','SYC','SLE','SGP','SXM','SVK','SVN','SLB','SOM','ZAF','SGS','SSD','ESP','LKA','SDN','SUR','SJM','SWZ','SWE','CHE','SYR','TWN','TJK','TZA','THA','TLS','TGO','TKL','TON','TTO','TUN','TUR','TKM','TCA','TUV','UGA','UKR','ARE','GBR','USA','UMI','URY','UZB','VUT','VEN','VNM','VGB','VIR','WLF','ESH','YEM','ZMB','ZWE']);function isISO31661Alpha3(str){(0, _assertString.default)(str);return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());}module.exports=exports.default;module.exports.default=exports.default;})(isISO31661Alpha3,isISO31661Alpha3.exports);

  var isISO4217$1 = {};

  Object.defineProperty(isISO4217$1,"__esModule",{value:true});isISO4217$1.default=isISO4217;isISO4217$1.CurrencyCodes=void 0;var _assertString$2=_interopRequireDefault$2(assertString.exports);function _interopRequireDefault$2(obj){return obj&&obj.__esModule?obj:{default:obj};}// from https://en.wikipedia.org/wiki/ISO_4217
  var validISO4217CurrencyCodes=new Set(['AED','AFN','ALL','AMD','ANG','AOA','ARS','AUD','AWG','AZN','BAM','BBD','BDT','BGN','BHD','BIF','BMD','BND','BOB','BOV','BRL','BSD','BTN','BWP','BYN','BZD','CAD','CDF','CHE','CHF','CHW','CLF','CLP','CNY','COP','COU','CRC','CUC','CUP','CVE','CZK','DJF','DKK','DOP','DZD','EGP','ERN','ETB','EUR','FJD','FKP','GBP','GEL','GHS','GIP','GMD','GNF','GTQ','GYD','HKD','HNL','HRK','HTG','HUF','IDR','ILS','INR','IQD','IRR','ISK','JMD','JOD','JPY','KES','KGS','KHR','KMF','KPW','KRW','KWD','KYD','KZT','LAK','LBP','LKR','LRD','LSL','LYD','MAD','MDL','MGA','MKD','MMK','MNT','MOP','MRU','MUR','MVR','MWK','MXN','MXV','MYR','MZN','NAD','NGN','NIO','NOK','NPR','NZD','OMR','PAB','PEN','PGK','PHP','PKR','PLN','PYG','QAR','RON','RSD','RUB','RWF','SAR','SBD','SCR','SDG','SEK','SGD','SHP','SLL','SOS','SRD','SSP','STN','SVC','SYP','SZL','THB','TJS','TMT','TND','TOP','TRY','TTD','TWD','TZS','UAH','UGX','USD','USN','UYI','UYU','UYW','UZS','VES','VND','VUV','WST','XAF','XAG','XAU','XBA','XBB','XBC','XBD','XCD','XDR','XOF','XPD','XPF','XPT','XSU','XTS','XUA','XXX','YER','ZAR','ZMW','ZWL']);function isISO4217(str){(0, _assertString$2.default)(str);return validISO4217CurrencyCodes.has(str.toUpperCase());}var CurrencyCodes=validISO4217CurrencyCodes;isISO4217$1.CurrencyCodes=CurrencyCodes;

  var isBase32 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBase32;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var base32=/^[A-Z2-7]+=*$/;function isBase32(str){(0, _assertString.default)(str);var len=str.length;if(len%8===0&&base32.test(str)){return true;}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isBase32,isBase32.exports);

  var isBase58 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isBase58;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// Accepted chars - 123456789ABCDEFGH JKLMN PQRSTUVWXYZabcdefghijk mnopqrstuvwxyz
  var base58Reg=/^[A-HJ-NP-Za-km-z1-9]*$/;function isBase58(str){(0, _assertString.default)(str);if(base58Reg.test(str)){return true;}return false;}module.exports=exports.default;module.exports.default=exports.default;})(isBase58,isBase58.exports);

  var isDataURI = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isDataURI;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var validMediaType=/^[a-z]+\/[a-z0-9\-\+]+$/i;var validAttribute=/^[a-z\-]+=[a-z0-9\-]+$/i;var validData=/^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;function isDataURI(str){(0, _assertString.default)(str);var data=str.split(',');if(data.length<2){return false;}var attributes=data.shift().trim().split(';');var schemeAndMediaType=attributes.shift();if(schemeAndMediaType.substr(0,5)!=='data:'){return false;}var mediaType=schemeAndMediaType.substr(5);if(mediaType!==''&&!validMediaType.test(mediaType)){return false;}for(var i=0;i<attributes.length;i++){if(!(i===attributes.length-1&&attributes[i].toLowerCase()==='base64')&&!validAttribute.test(attributes[i])){return false;}}for(var _i=0;_i<data.length;_i++){if(!validData.test(data[_i])){return false;}}return true;}module.exports=exports.default;module.exports.default=exports.default;})(isDataURI,isDataURI.exports);

  var isMagnetURI = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isMagnetURI;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var magnetURI=/^magnet:\?xt(?:\.1)?=urn:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?($|&)/i;function isMagnetURI(url){(0, _assertString.default)(url);return magnetURI.test(url.trim());}module.exports=exports.default;module.exports.default=exports.default;})(isMagnetURI,isMagnetURI.exports);

  var isMimeType = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isMimeType;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/*
  	  Checks if the provided string matches to a correct Media type format (MIME type)

  	  This function only checks is the string format follows the
  	  etablished rules by the according RFC specifications.
  	  This function supports 'charset' in textual media types
  	  (https://tools.ietf.org/html/rfc6657).

  	  This function does not check against all the media types listed
  	  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)
  	  because of lightness purposes : it would require to include
  	  all these MIME types in this librairy, which would weigh it
  	  significantly. This kind of effort maybe is not worth for the use that
  	  this function has in this entire librairy.

  	  More informations in the RFC specifications :
  	  - https://tools.ietf.org/html/rfc2045
  	  - https://tools.ietf.org/html/rfc2046
  	  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1
  	  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5
  	*/ // Match simple MIME types
  // NB :
  //   Subtype length must not exceed 100 characters.
  //   This rule does not comply to the RFC specs (what is the max length ?).
  var mimeTypeSimple=/^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i;// eslint-disable-line max-len
  // Handle "charset" in "text/*"
  var mimeTypeText=/^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i;// eslint-disable-line max-len
  // Handle "boundary" in "multipart/*"
  var mimeTypeMultipart=/^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i;// eslint-disable-line max-len
  function isMimeType(str){(0, _assertString.default)(str);return mimeTypeSimple.test(str)||mimeTypeText.test(str)||mimeTypeMultipart.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isMimeType,isMimeType.exports);

  var isLatLong = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isLatLong;var _assertString=_interopRequireDefault(assertString.exports);var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var lat=/^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/;var long=/^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;var latDMS=/^(([1-8]?\d)\D+([1-5]?\d|60)\D+([1-5]?\d|60)(\.\d+)?|90\D+0\D+0)\D+[NSns]?$/i;var longDMS=/^\s*([1-7]?\d{1,2}\D+([1-5]?\d|60)\D+([1-5]?\d|60)(\.\d+)?|180\D+0\D+0)\D+[EWew]?$/i;var defaultLatLongOptions={checkDMS:false};function isLatLong(str,options){(0, _assertString.default)(str);options=(0, _merge.default)(options,defaultLatLongOptions);if(!str.includes(','))return false;var pair=str.split(',');if(pair[0].startsWith('(')&&!pair[1].endsWith(')')||pair[1].endsWith(')')&&!pair[0].startsWith('('))return false;if(options.checkDMS){return latDMS.test(pair[0])&&longDMS.test(pair[1]);}return lat.test(pair[0])&&long.test(pair[1]);}module.exports=exports.default;module.exports.default=exports.default;})(isLatLong,isLatLong.exports);

  var isPostalCode$1 = {};

  Object.defineProperty(isPostalCode$1,"__esModule",{value:true});isPostalCode$1.default=isPostalCode;isPostalCode$1.locales=void 0;var _assertString$1=_interopRequireDefault$1(assertString.exports);function _interopRequireDefault$1(obj){return obj&&obj.__esModule?obj:{default:obj};}// common patterns
  var threeDigit=/^\d{3}$/;var fourDigit=/^\d{4}$/;var fiveDigit=/^\d{5}$/;var sixDigit=/^\d{6}$/;var patterns={AD:/^AD\d{3}$/,AT:fourDigit,AU:fourDigit,AZ:/^AZ\d{4}$/,BE:fourDigit,BG:fourDigit,BR:/^\d{5}-\d{3}$/,BY:/2[1-4]{1}\d{4}$/,CA:/^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,CH:fourDigit,CN:/^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\d{4}$/,CZ:/^\d{3}\s?\d{2}$/,DE:fiveDigit,DK:fourDigit,DO:fiveDigit,DZ:fiveDigit,EE:fiveDigit,ES:/^(5[0-2]{1}|[0-4]{1}\d{1})\d{3}$/,FI:fiveDigit,FR:/^\d{2}\s?\d{3}$/,GB:/^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,GR:/^\d{3}\s?\d{2}$/,HR:/^([1-5]\d{4}$)/,HT:/^HT\d{4}$/,HU:fourDigit,ID:fiveDigit,IE:/^(?!.*(?:o))[A-Za-z]\d[\dw]\s\w{4}$/i,IL:/^(\d{5}|\d{7})$/,IN:/^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,IR:/\b(?!(\d)\1{3})[13-9]{4}[1346-9][013-9]{5}\b/,IS:threeDigit,IT:fiveDigit,JP:/^\d{3}\-\d{4}$/,KE:fiveDigit,KR:/^(\d{5}|\d{6})$/,LI:/^(948[5-9]|949[0-7])$/,LT:/^LT\-\d{5}$/,LU:fourDigit,LV:/^LV\-\d{4}$/,LK:fiveDigit,MX:fiveDigit,MT:/^[A-Za-z]{3}\s{0,1}\d{4}$/,MY:fiveDigit,NL:/^\d{4}\s?[a-z]{2}$/i,NO:fourDigit,NP:/^(10|21|22|32|33|34|44|45|56|57)\d{3}$|^(977)$/i,NZ:fourDigit,PL:/^\d{2}\-\d{3}$/,PR:/^00[679]\d{2}([ -]\d{4})?$/,PT:/^\d{4}\-\d{3}?$/,RO:sixDigit,RU:sixDigit,SA:fiveDigit,SE:/^[1-9]\d{2}\s?\d{2}$/,SG:sixDigit,SI:fourDigit,SK:/^\d{3}\s?\d{2}$/,TH:fiveDigit,TN:fourDigit,TW:/^\d{3}(\d{2})?$/,UA:fiveDigit,US:/^\d{5}(-\d{4})?$/,ZA:fourDigit,ZM:fiveDigit};var locales=Object.keys(patterns);isPostalCode$1.locales=locales;function isPostalCode(str,locale){(0, _assertString$1.default)(str);if(locale in patterns){return patterns[locale].test(str);}else if(locale==='any'){for(var key in patterns){// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
  // istanbul ignore else
  if(patterns.hasOwnProperty(key)){var pattern=patterns[key];if(pattern.test(str)){return true;}}}return false;}throw new Error("Invalid locale '".concat(locale,"'"));}

  var ltrim = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=ltrim;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ltrim(str,chars){(0, _assertString.default)(str);// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping
  var pattern=chars?new RegExp("^[".concat(chars.replace(/[.*+?^${}()|[\]\\]/g,'\\$&'),"]+"),'g'):/^\s+/g;return str.replace(pattern,'');}module.exports=exports.default;module.exports.default=exports.default;})(ltrim,ltrim.exports);

  var rtrim = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=rtrim;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function rtrim(str,chars){(0, _assertString.default)(str);if(chars){// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping
  var pattern=new RegExp("[".concat(chars.replace(/[.*+?^${}()|[\]\\]/g,'\\$&'),"]+$"),'g');return str.replace(pattern,'');}// Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript
  var strIndex=str.length-1;while(/\s/.test(str.charAt(strIndex))){strIndex-=1;}return str.slice(0,strIndex+1);}module.exports=exports.default;module.exports.default=exports.default;})(rtrim,rtrim.exports);

  var trim$1 = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=trim;var _rtrim=_interopRequireDefault(rtrim.exports);var _ltrim=_interopRequireDefault(ltrim.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function trim(str,chars){return (0, _rtrim.default)((0, _ltrim.default)(str,chars),chars);}module.exports=exports.default;module.exports.default=exports.default;})(trim$1,trim$1.exports);

  var _escape = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=escape;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function escape(str){(0, _assertString.default)(str);return str.replace(/&/g,'&amp;').replace(/"/g,'&quot;').replace(/'/g,'&#x27;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\//g,'&#x2F;').replace(/\\/g,'&#x5C;').replace(/`/g,'&#96;');}module.exports=exports.default;module.exports.default=exports.default;})(_escape,_escape.exports);

  var _unescape = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=unescape;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function unescape(str){(0, _assertString.default)(str);return str.replace(/&quot;/g,'"').replace(/&#x27;/g,"'").replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&#x2F;/g,'/').replace(/&#x5C;/g,'\\').replace(/&#96;/g,'`').replace(/&amp;/g,'&');// &amp; replacement has to be the last one to prevent
  // bugs with intermediate strings containing escape sequences
  // See: https://github.com/validatorjs/validator.js/issues/1827
  }module.exports=exports.default;module.exports.default=exports.default;})(_unescape,_unescape.exports);

  var stripLow = {exports: {}};

  var blacklist = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=blacklist;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function blacklist(str,chars){(0, _assertString.default)(str);return str.replace(new RegExp("[".concat(chars,"]+"),'g'),'');}module.exports=exports.default;module.exports.default=exports.default;})(blacklist,blacklist.exports);

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=stripLow;var _assertString=_interopRequireDefault(assertString.exports);var _blacklist=_interopRequireDefault(blacklist.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function stripLow(str,keep_new_lines){(0, _assertString.default)(str);var chars=keep_new_lines?'\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F':'\\x00-\\x1F\\x7F';return (0, _blacklist.default)(str,chars);}module.exports=exports.default;module.exports.default=exports.default;})(stripLow,stripLow.exports);

  var whitelist = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=whitelist;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function whitelist(str,chars){(0, _assertString.default)(str);return str.replace(new RegExp("[^".concat(chars,"]+"),'g'),'');}module.exports=exports.default;module.exports.default=exports.default;})(whitelist,whitelist.exports);

  var isWhitelisted = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isWhitelisted;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function isWhitelisted(str,chars){(0, _assertString.default)(str);for(var i=str.length-1;i>=0;i--){if(chars.indexOf(str[i])===-1){return false;}}return true;}module.exports=exports.default;module.exports.default=exports.default;})(isWhitelisted,isWhitelisted.exports);

  var normalizeEmail = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=normalizeEmail;var _merge=_interopRequireDefault(merge$2.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var default_normalize_email_options={// The following options apply to all email addresses
  // Lowercases the local part of the email address.
  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).
  // The domain is always lowercased, as per RFC 1035
  all_lowercase:true,// The following conversions are specific to GMail
  // Lowercases the local part of the GMail address (known to be case-insensitive)
  gmail_lowercase:true,// Removes dots from the local part of the email address, as that's ignored by GMail
  gmail_remove_dots:true,// Removes the subaddress (e.g. "+foo") from the email address
  gmail_remove_subaddress:true,// Conversts the googlemail.com domain to gmail.com
  gmail_convert_googlemaildotcom:true,// The following conversions are specific to Outlook.com / Windows Live / Hotmail
  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)
  outlookdotcom_lowercase:true,// Removes the subaddress (e.g. "+foo") from the email address
  outlookdotcom_remove_subaddress:true,// The following conversions are specific to Yahoo
  // Lowercases the local part of the Yahoo address (known to be case-insensitive)
  yahoo_lowercase:true,// Removes the subaddress (e.g. "-foo") from the email address
  yahoo_remove_subaddress:true,// The following conversions are specific to Yandex
  // Lowercases the local part of the Yandex address (known to be case-insensitive)
  yandex_lowercase:true,// The following conversions are specific to iCloud
  // Lowercases the local part of the iCloud address (known to be case-insensitive)
  icloud_lowercase:true,// Removes the subaddress (e.g. "+foo") from the email address
  icloud_remove_subaddress:true};// List of domains used by iCloud
  var icloud_domains=['icloud.com','me.com'];// List of domains used by Outlook.com and its predecessors
  // This list is likely incomplete.
  // Partial reference:
  // https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/
  var outlookdotcom_domains=['hotmail.at','hotmail.be','hotmail.ca','hotmail.cl','hotmail.co.il','hotmail.co.nz','hotmail.co.th','hotmail.co.uk','hotmail.com','hotmail.com.ar','hotmail.com.au','hotmail.com.br','hotmail.com.gr','hotmail.com.mx','hotmail.com.pe','hotmail.com.tr','hotmail.com.vn','hotmail.cz','hotmail.de','hotmail.dk','hotmail.es','hotmail.fr','hotmail.hu','hotmail.id','hotmail.ie','hotmail.in','hotmail.it','hotmail.jp','hotmail.kr','hotmail.lv','hotmail.my','hotmail.ph','hotmail.pt','hotmail.sa','hotmail.sg','hotmail.sk','live.be','live.co.uk','live.com','live.com.ar','live.com.mx','live.de','live.es','live.eu','live.fr','live.it','live.nl','msn.com','outlook.at','outlook.be','outlook.cl','outlook.co.il','outlook.co.nz','outlook.co.th','outlook.com','outlook.com.ar','outlook.com.au','outlook.com.br','outlook.com.gr','outlook.com.pe','outlook.com.tr','outlook.com.vn','outlook.cz','outlook.de','outlook.dk','outlook.es','outlook.fr','outlook.hu','outlook.id','outlook.ie','outlook.in','outlook.it','outlook.jp','outlook.kr','outlook.lv','outlook.my','outlook.ph','outlook.pt','outlook.sa','outlook.sg','outlook.sk','passport.com'];// List of domains used by Yahoo Mail
  // This list is likely incomplete
  var yahoo_domains=['rocketmail.com','yahoo.ca','yahoo.co.uk','yahoo.com','yahoo.de','yahoo.fr','yahoo.in','yahoo.it','ymail.com'];// List of domains used by yandex.ru
  var yandex_domains=['yandex.ru','yandex.ua','yandex.kz','yandex.com','yandex.by','ya.ru'];// replace single dots, but not multiple consecutive dots
  function dotsReplacer(match){if(match.length>1){return match;}return '';}function normalizeEmail(email,options){options=(0, _merge.default)(options,default_normalize_email_options);var raw_parts=email.split('@');var domain=raw_parts.pop();var user=raw_parts.join('@');var parts=[user,domain];// The domain is always lowercased, as it's case-insensitive per RFC 1035
  parts[1]=parts[1].toLowerCase();if(parts[1]==='gmail.com'||parts[1]==='googlemail.com'){// Address is GMail
  if(options.gmail_remove_subaddress){parts[0]=parts[0].split('+')[0];}if(options.gmail_remove_dots){// this does not replace consecutive dots like example..email@gmail.com
  parts[0]=parts[0].replace(/\.+/g,dotsReplacer);}if(!parts[0].length){return false;}if(options.all_lowercase||options.gmail_lowercase){parts[0]=parts[0].toLowerCase();}parts[1]=options.gmail_convert_googlemaildotcom?'gmail.com':parts[1];}else if(icloud_domains.indexOf(parts[1])>=0){// Address is iCloud
  if(options.icloud_remove_subaddress){parts[0]=parts[0].split('+')[0];}if(!parts[0].length){return false;}if(options.all_lowercase||options.icloud_lowercase){parts[0]=parts[0].toLowerCase();}}else if(outlookdotcom_domains.indexOf(parts[1])>=0){// Address is Outlook.com
  if(options.outlookdotcom_remove_subaddress){parts[0]=parts[0].split('+')[0];}if(!parts[0].length){return false;}if(options.all_lowercase||options.outlookdotcom_lowercase){parts[0]=parts[0].toLowerCase();}}else if(yahoo_domains.indexOf(parts[1])>=0){// Address is Yahoo
  if(options.yahoo_remove_subaddress){var components=parts[0].split('-');parts[0]=components.length>1?components.slice(0,-1).join('-'):components[0];}if(!parts[0].length){return false;}if(options.all_lowercase||options.yahoo_lowercase){parts[0]=parts[0].toLowerCase();}}else if(yandex_domains.indexOf(parts[1])>=0){if(options.all_lowercase||options.yandex_lowercase){parts[0]=parts[0].toLowerCase();}parts[1]='yandex.ru';// all yandex domains are equal, 1st preferred
  }else if(options.all_lowercase){// Any other address
  parts[0]=parts[0].toLowerCase();}return parts.join('@');}module.exports=exports.default;module.exports.default=exports.default;})(normalizeEmail,normalizeEmail.exports);

  var isSlug = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isSlug;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var charsetRegex=/^[^\s-_](?!.*?[-_]{2,})[a-z0-9-\\][^\s]*[^-_\s]$/;function isSlug(str){(0, _assertString.default)(str);return charsetRegex.test(str);}module.exports=exports.default;module.exports.default=exports.default;})(isSlug,isSlug.exports);

  var isLicensePlate = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isLicensePlate;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var validators={'cs-CZ':function csCZ(str){return /^(([ABCDEFHKIJKLMNPRSTUVXYZ]|[0-9])-?){5,8}$/.test(str);},'de-DE':function deDE(str){return /^((AW|UL|AK|GA|AÖ|LF|AZ|AM|AS|ZE|AN|AB|A|KG|KH|BA|EW|BZ|HY|KM|BT|HP|B|BC|BI|BO|FN|TT|ÜB|BN|AH|BS|FR|HB|ZZ|BB|BK|BÖ|OC|OK|CW|CE|C|CO|LH|CB|KW|LC|LN|DA|DI|DE|DH|SY|NÖ|DO|DD|DU|DN|D|EI|EA|EE|FI|EM|EL|EN|PF|ED|EF|ER|AU|ZP|E|ES|NT|EU|FL|FO|FT|FF|F|FS|FD|FÜ|GE|G|GI|GF|GS|ZR|GG|GP|GR|NY|ZI|GÖ|GZ|GT|HA|HH|HM|HU|WL|HZ|WR|RN|HK|HD|HN|HS|GK|HE|HF|RZ|HI|HG|HO|HX|IK|IL|IN|J|JL|KL|KA|KS|KF|KE|KI|KT|KO|KN|KR|KC|KU|K|LD|LL|LA|L|OP|LM|LI|LB|LU|LÖ|HL|LG|MD|GN|MZ|MA|ML|MR|MY|AT|DM|MC|NZ|RM|RG|MM|ME|MB|MI|FG|DL|HC|MW|RL|MK|MG|MÜ|WS|MH|M|MS|NU|NB|ND|NM|NK|NW|NR|NI|NF|DZ|EB|OZ|TG|TO|N|OA|GM|OB|CA|EH|FW|OF|OL|OE|OG|BH|LR|OS|AA|GD|OH|KY|NP|WK|PB|PA|PE|PI|PS|P|PM|PR|RA|RV|RE|R|H|SB|WN|RS|RD|RT|BM|NE|GV|RP|SU|GL|RO|GÜ|RH|EG|RW|PN|SK|MQ|RU|SZ|RI|SL|SM|SC|HR|FZ|VS|SW|SN|CR|SE|SI|SO|LP|SG|NH|SP|IZ|ST|BF|TE|HV|OD|SR|S|AC|DW|ZW|TF|TS|TR|TÜ|UM|PZ|TP|UE|UN|UH|MN|KK|VB|V|AE|PL|RC|VG|GW|PW|VR|VK|KB|WA|WT|BE|WM|WE|AP|MO|WW|FB|WZ|WI|WB|JE|WF|WO|W|WÜ|BL|Z|GC)[- ]?[A-Z]{1,2}[- ]?\d{1,4}|(AIC|FDB|ABG|SLN|SAW|KLZ|BUL|ESB|NAB|SUL|WST|ABI|AZE|BTF|KÖT|DKB|FEU|ROT|ALZ|SMÜ|WER|AUR|NOR|DÜW|BRK|HAB|TÖL|WOR|BAD|BAR|BER|BIW|EBS|KEM|MÜB|PEG|BGL|BGD|REI|WIL|BKS|BIR|WAT|BOR|BOH|BOT|BRB|BLK|HHM|NEB|NMB|WSF|LEO|HDL|WMS|WZL|BÜS|CHA|KÖZ|ROD|WÜM|CLP|NEC|COC|ZEL|COE|CUX|DAH|LDS|DEG|DEL|RSL|DLG|DGF|LAN|HEI|MED|DON|KIB|ROK|JÜL|MON|SLE|EBE|EIC|HIG|WBS|BIT|PRÜ|LIB|EMD|WIT|ERH|HÖS|ERZ|ANA|ASZ|MAB|MEK|STL|SZB|FDS|HCH|HOR|WOL|FRG|GRA|WOS|FRI|FFB|GAP|GER|BRL|CLZ|GTH|NOH|HGW|GRZ|LÖB|NOL|WSW|DUD|HMÜ|OHA|KRU|HAL|HAM|HBS|QLB|HVL|NAU|HAS|EBN|GEO|HOH|HDH|ERK|HER|WAN|HEF|ROF|HBN|ALF|HSK|USI|NAI|REH|SAN|KÜN|ÖHR|HOL|WAR|ARN|BRG|GNT|HOG|WOH|KEH|MAI|PAR|RID|ROL|KLE|GEL|KUS|KYF|ART|SDH|LDK|DIL|MAL|VIB|LER|BNA|GHA|GRM|MTL|WUR|LEV|LIF|STE|WEL|LIP|VAI|LUP|HGN|LBZ|LWL|PCH|STB|DAN|MKK|SLÜ|MSP|TBB|MGH|MTK|BIN|MSH|EIL|HET|SGH|BID|MYK|MSE|MST|MÜR|WRN|MEI|GRH|RIE|MZG|MIL|OBB|BED|FLÖ|MOL|FRW|SEE|SRB|AIB|MOS|BCH|ILL|SOB|NMS|NEA|SEF|UFF|NEW|VOH|NDH|TDO|NWM|GDB|GVM|WIS|NOM|EIN|GAN|LAU|HEB|OHV|OSL|SFB|ERB|LOS|BSK|KEL|BSB|MEL|WTL|OAL|FÜS|MOD|OHZ|OPR|BÜR|PAF|PLÖ|CAS|GLA|REG|VIT|ECK|SIM|GOA|EMS|DIZ|GOH|RÜD|SWA|NES|KÖN|MET|LRO|BÜZ|DBR|ROS|TET|HRO|ROW|BRV|HIP|PAN|GRI|SHK|EIS|SRO|SOK|LBS|SCZ|MER|QFT|SLF|SLS|HOM|SLK|ASL|BBG|SBK|SFT|SHG|MGN|MEG|ZIG|SAD|NEN|OVI|SHA|BLB|SIG|SON|SPN|FOR|GUB|SPB|IGB|WND|STD|STA|SDL|OBG|HST|BOG|SHL|PIR|FTL|SEB|SÖM|SÜW|TIR|SAB|TUT|ANG|SDT|LÜN|LSZ|MHL|VEC|VER|VIE|OVL|ANK|OVP|SBG|UEM|UER|WLG|GMN|NVP|RDG|RÜG|DAU|FKB|WAF|WAK|SLZ|WEN|SOG|APD|WUG|GUN|ESW|WIZ|WES|DIN|BRA|BÜD|WHV|HWI|GHC|WTM|WOB|WUN|MAK|SEL|OCH|HOT|WDA)[- ]?(([A-Z][- ]?\d{1,4})|([A-Z]{2}[- ]?\d{1,3})))[- ]?(E|H)?$/.test(str);},'de-LI':function deLI(str){return /^FL[- ]?\d{1,5}[UZ]?$/.test(str);},'fi-FI':function fiFI(str){return /^(?=.{4,7})(([A-Z]{1,3}|[0-9]{1,3})[\s-]?([A-Z]{1,3}|[0-9]{1,5}))$/.test(str);},'pt-PT':function ptPT(str){return /^([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})$/.test(str);},'sq-AL':function sqAL(str){return /^[A-Z]{2}[- ]?((\d{3}[- ]?(([A-Z]{2})|T))|(R[- ]?\d{3}))$/.test(str);},'pt-BR':function ptBR(str){return /^[A-Z]{3}[ -]?[0-9][A-Z][0-9]{2}|[A-Z]{3}[ -]?[0-9]{4}$/.test(str);}};function isLicensePlate(str,locale){(0, _assertString.default)(str);if(locale in validators){return validators[locale](str);}else if(locale==='any'){for(var key in validators){/* eslint guard-for-in: 0 */var validator=validators[key];if(validator(str)){return true;}}return false;}throw new Error("Invalid locale '".concat(locale,"'"));}module.exports=exports.default;module.exports.default=exports.default;})(isLicensePlate,isLicensePlate.exports);

  var isStrongPassword = {exports: {}};

  (function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.default=isStrongPassword;var _merge=_interopRequireDefault(merge$2.exports);var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var upperCaseRegex=/^[A-Z]$/;var lowerCaseRegex=/^[a-z]$/;var numberRegex=/^[0-9]$/;var symbolRegex=/^[-#!$@%^&*()_+|~=`{}\[\]:";'<>?,.\/ ]$/;var defaultOptions={minLength:8,minLowercase:1,minUppercase:1,minNumbers:1,minSymbols:1,returnScore:false,pointsPerUnique:1,pointsPerRepeat:0.5,pointsForContainingLower:10,pointsForContainingUpper:10,pointsForContainingNumber:10,pointsForContainingSymbol:10};/* Counts number of occurrences of each char in a string
  	 * could be moved to util/ ?
  	*/function countChars(str){var result={};Array.from(str).forEach(function(char){var curVal=result[char];if(curVal){result[char]+=1;}else {result[char]=1;}});return result;}/* Return information about a password */function analyzePassword(password){var charMap=countChars(password);var analysis={length:password.length,uniqueChars:Object.keys(charMap).length,uppercaseCount:0,lowercaseCount:0,numberCount:0,symbolCount:0};Object.keys(charMap).forEach(function(char){/* istanbul ignore else */if(upperCaseRegex.test(char)){analysis.uppercaseCount+=charMap[char];}else if(lowerCaseRegex.test(char)){analysis.lowercaseCount+=charMap[char];}else if(numberRegex.test(char)){analysis.numberCount+=charMap[char];}else if(symbolRegex.test(char)){analysis.symbolCount+=charMap[char];}});return analysis;}function scorePassword(analysis,scoringOptions){var points=0;points+=analysis.uniqueChars*scoringOptions.pointsPerUnique;points+=(analysis.length-analysis.uniqueChars)*scoringOptions.pointsPerRepeat;if(analysis.lowercaseCount>0){points+=scoringOptions.pointsForContainingLower;}if(analysis.uppercaseCount>0){points+=scoringOptions.pointsForContainingUpper;}if(analysis.numberCount>0){points+=scoringOptions.pointsForContainingNumber;}if(analysis.symbolCount>0){points+=scoringOptions.pointsForContainingSymbol;}return points;}function isStrongPassword(str){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;(0, _assertString.default)(str);var analysis=analyzePassword(str);options=(0, _merge.default)(options||{},defaultOptions);if(options.returnScore){return scorePassword(analysis,options);}return analysis.length>=options.minLength&&analysis.lowercaseCount>=options.minLowercase&&analysis.uppercaseCount>=options.minUppercase&&analysis.numberCount>=options.minNumbers&&analysis.symbolCount>=options.minSymbols;}module.exports=exports.default;module.exports.default=exports.default;})(isStrongPassword,isStrongPassword.exports);

  var isVAT$1 = {};

  Object.defineProperty(isVAT$1,"__esModule",{value:true});isVAT$1.default=isVAT;isVAT$1.vatMatchers=void 0;var _assertString=_interopRequireDefault(assertString.exports);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var vatMatchers={GB:/^GB((\d{3} \d{4} ([0-8][0-9]|9[0-6]))|(\d{9} \d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,IT:/^(IT)?[0-9]{11}$/,NL:/^(NL)?[0-9]{9}B[0-9]{2}$/};isVAT$1.vatMatchers=vatMatchers;function isVAT(str,countryCode){(0, _assertString.default)(str);(0, _assertString.default)(countryCode);if(countryCode in vatMatchers){return vatMatchers[countryCode].test(str);}throw new Error("Invalid country code: '".concat(countryCode,"'"));}

  (function(module,exports){function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else {_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _toDate=_interopRequireDefault(toDate.exports);var _toFloat=_interopRequireDefault(toFloat.exports);var _toInt=_interopRequireDefault(toInt.exports);var _toBoolean=_interopRequireDefault(toBoolean.exports);var _equals=_interopRequireDefault(equals.exports);var _contains=_interopRequireDefault(contains.exports);var _matches=_interopRequireDefault(matches$1.exports);var _isEmail=_interopRequireDefault(isEmail.exports);var _isURL=_interopRequireDefault(isURL.exports);var _isMACAddress=_interopRequireDefault(isMACAddress.exports);var _isIP=_interopRequireDefault(isIP.exports);var _isIPRange=_interopRequireDefault(isIPRange.exports);var _isFQDN=_interopRequireDefault(isFQDN.exports);var _isDate=_interopRequireDefault(isDate$1.exports);var _isBoolean=_interopRequireDefault(isBoolean.exports);var _isLocale=_interopRequireDefault(isLocale.exports);var _isAlpha=_interopRequireWildcard(isAlpha$1);var _isAlphanumeric=_interopRequireWildcard(isAlphanumeric$1);var _isNumeric=_interopRequireDefault(isNumeric.exports);var _isPassportNumber=_interopRequireDefault(isPassportNumber.exports);var _isPort=_interopRequireDefault(isPort.exports);var _isLowercase=_interopRequireDefault(isLowercase.exports);var _isUppercase=_interopRequireDefault(isUppercase.exports);var _isIMEI=_interopRequireDefault(isIMEI.exports);var _isAscii=_interopRequireDefault(isAscii.exports);var _isFullWidth=_interopRequireDefault(isFullWidth$1);var _isHalfWidth=_interopRequireDefault(isHalfWidth$1);var _isVariableWidth=_interopRequireDefault(isVariableWidth.exports);var _isMultibyte=_interopRequireDefault(isMultibyte.exports);var _isSemVer=_interopRequireDefault(isSemVer.exports);var _isSurrogatePair=_interopRequireDefault(isSurrogatePair.exports);var _isInt=_interopRequireDefault(isInt.exports);var _isFloat=_interopRequireWildcard(isFloat$1);var _isDecimal=_interopRequireDefault(isDecimal.exports);var _isHexadecimal=_interopRequireDefault(isHexadecimal.exports);var _isOctal=_interopRequireDefault(isOctal.exports);var _isDivisibleBy=_interopRequireDefault(isDivisibleBy.exports);var _isHexColor=_interopRequireDefault(isHexColor.exports);var _isRgbColor=_interopRequireDefault(isRgbColor.exports);var _isHSL=_interopRequireDefault(isHSL.exports);var _isISRC=_interopRequireDefault(isISRC.exports);var _isIBAN=_interopRequireWildcard(isIBAN$1);var _isBIC=_interopRequireDefault(isBIC.exports);var _isMD=_interopRequireDefault(isMD5.exports);var _isHash=_interopRequireDefault(isHash.exports);var _isJWT=_interopRequireDefault(isJWT.exports);var _isJSON=_interopRequireDefault(isJSON.exports);var _isEmpty=_interopRequireDefault(isEmpty.exports);var _isLength=_interopRequireDefault(isLength.exports);var _isByteLength=_interopRequireDefault(isByteLength.exports);var _isUUID=_interopRequireDefault(isUUID.exports);var _isMongoId=_interopRequireDefault(isMongoId.exports);var _isAfter=_interopRequireDefault(isAfter.exports);var _isBefore=_interopRequireDefault(isBefore.exports);var _isIn=_interopRequireDefault(isIn.exports);var _isCreditCard=_interopRequireDefault(isCreditCard.exports);var _isIdentityCard=_interopRequireDefault(isIdentityCard.exports);var _isEAN=_interopRequireDefault(isEAN.exports);var _isISIN=_interopRequireDefault(isISIN.exports);var _isISBN=_interopRequireDefault(isISBN.exports);var _isISSN=_interopRequireDefault(isISSN.exports);var _isTaxID=_interopRequireDefault(isTaxID.exports);var _isMobilePhone=_interopRequireWildcard(isMobilePhone$1);var _isEthereumAddress=_interopRequireDefault(isEthereumAddress.exports);var _isCurrency=_interopRequireDefault(isCurrency.exports);var _isBtcAddress=_interopRequireDefault(isBtcAddress.exports);var _isISO=_interopRequireDefault(isISO8601.exports);var _isRFC=_interopRequireDefault(isRFC3339.exports);var _isISO31661Alpha=_interopRequireDefault(isISO31661Alpha2$1);var _isISO31661Alpha2=_interopRequireDefault(isISO31661Alpha3.exports);var _isISO2=_interopRequireDefault(isISO4217$1);var _isBase=_interopRequireDefault(isBase32.exports);var _isBase2=_interopRequireDefault(isBase58.exports);var _isBase3=_interopRequireDefault(isBase64.exports);var _isDataURI=_interopRequireDefault(isDataURI.exports);var _isMagnetURI=_interopRequireDefault(isMagnetURI.exports);var _isMimeType=_interopRequireDefault(isMimeType.exports);var _isLatLong=_interopRequireDefault(isLatLong.exports);var _isPostalCode=_interopRequireWildcard(isPostalCode$1);var _ltrim=_interopRequireDefault(ltrim.exports);var _rtrim=_interopRequireDefault(rtrim.exports);var _trim=_interopRequireDefault(trim$1.exports);var _escape$1=_interopRequireDefault(_escape.exports);var _unescape$1=_interopRequireDefault(_unescape.exports);var _stripLow=_interopRequireDefault(stripLow.exports);var _whitelist=_interopRequireDefault(whitelist.exports);var _blacklist=_interopRequireDefault(blacklist.exports);var _isWhitelisted=_interopRequireDefault(isWhitelisted.exports);var _normalizeEmail=_interopRequireDefault(normalizeEmail.exports);var _isSlug=_interopRequireDefault(isSlug.exports);var _isLicensePlate=_interopRequireDefault(isLicensePlate.exports);var _isStrongPassword=_interopRequireDefault(isStrongPassword.exports);var _isVAT=_interopRequireDefault(isVAT$1);function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return {default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else {newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var version='13.7.0';var validator={version:version,toDate:_toDate.default,toFloat:_toFloat.default,toInt:_toInt.default,toBoolean:_toBoolean.default,equals:_equals.default,contains:_contains.default,matches:_matches.default,isEmail:_isEmail.default,isURL:_isURL.default,isMACAddress:_isMACAddress.default,isIP:_isIP.default,isIPRange:_isIPRange.default,isFQDN:_isFQDN.default,isBoolean:_isBoolean.default,isIBAN:_isIBAN.default,isBIC:_isBIC.default,isAlpha:_isAlpha.default,isAlphaLocales:_isAlpha.locales,isAlphanumeric:_isAlphanumeric.default,isAlphanumericLocales:_isAlphanumeric.locales,isNumeric:_isNumeric.default,isPassportNumber:_isPassportNumber.default,isPort:_isPort.default,isLowercase:_isLowercase.default,isUppercase:_isUppercase.default,isAscii:_isAscii.default,isFullWidth:_isFullWidth.default,isHalfWidth:_isHalfWidth.default,isVariableWidth:_isVariableWidth.default,isMultibyte:_isMultibyte.default,isSemVer:_isSemVer.default,isSurrogatePair:_isSurrogatePair.default,isInt:_isInt.default,isIMEI:_isIMEI.default,isFloat:_isFloat.default,isFloatLocales:_isFloat.locales,isDecimal:_isDecimal.default,isHexadecimal:_isHexadecimal.default,isOctal:_isOctal.default,isDivisibleBy:_isDivisibleBy.default,isHexColor:_isHexColor.default,isRgbColor:_isRgbColor.default,isHSL:_isHSL.default,isISRC:_isISRC.default,isMD5:_isMD.default,isHash:_isHash.default,isJWT:_isJWT.default,isJSON:_isJSON.default,isEmpty:_isEmpty.default,isLength:_isLength.default,isLocale:_isLocale.default,isByteLength:_isByteLength.default,isUUID:_isUUID.default,isMongoId:_isMongoId.default,isAfter:_isAfter.default,isBefore:_isBefore.default,isIn:_isIn.default,isCreditCard:_isCreditCard.default,isIdentityCard:_isIdentityCard.default,isEAN:_isEAN.default,isISIN:_isISIN.default,isISBN:_isISBN.default,isISSN:_isISSN.default,isMobilePhone:_isMobilePhone.default,isMobilePhoneLocales:_isMobilePhone.locales,isPostalCode:_isPostalCode.default,isPostalCodeLocales:_isPostalCode.locales,isEthereumAddress:_isEthereumAddress.default,isCurrency:_isCurrency.default,isBtcAddress:_isBtcAddress.default,isISO8601:_isISO.default,isRFC3339:_isRFC.default,isISO31661Alpha2:_isISO31661Alpha.default,isISO31661Alpha3:_isISO31661Alpha2.default,isISO4217:_isISO2.default,isBase32:_isBase.default,isBase58:_isBase2.default,isBase64:_isBase3.default,isDataURI:_isDataURI.default,isMagnetURI:_isMagnetURI.default,isMimeType:_isMimeType.default,isLatLong:_isLatLong.default,ltrim:_ltrim.default,rtrim:_rtrim.default,trim:_trim.default,escape:_escape$1.default,unescape:_unescape$1.default,stripLow:_stripLow.default,whitelist:_whitelist.default,blacklist:_blacklist.default,isWhitelisted:_isWhitelisted.default,normalizeEmail:_normalizeEmail.default,toString:toString,isSlug:_isSlug.default,isStrongPassword:_isStrongPassword.default,isTaxID:_isTaxID.default,isDate:_isDate.default,isLicensePlate:_isLicensePlate.default,isVAT:_isVAT.default,ibanLocales:_isIBAN.locales};var _default=validator;exports.default=_default;module.exports=exports.default;module.exports.default=exports.default;})(validator$3,validator$3.exports);var validator$2 = /*@__PURE__*/getDefaultExportFromCjs(validator$3.exports);

  var ContactPage=function ContactPage(){// === DOM & VARS ===
  var DOM={};DOM.formContact=document.querySelector('#form-contact');DOM.formRequiredFields=Array.from(DOM.formContact.querySelectorAll('input[required], textarea[required]'));DOM.genderGroup=DOM.formContact.querySelector('.form-gender-group');console.log(DOM);// === INIT =========
  var init=function init(){DOM.formContact.noValidate=true;DOM.formRequiredFields.forEach(function(field){field.addEventListener('focus',onFocusFormField);field.addEventListener('blur',onBlurFormField);});DOM.formContact.addEventListener('submit',onFormSubmit);};// === EVENTS / XHR =======
  var sendFormContact=function sendFormContact(formData){fetch('http://localhost:3000/contact/send',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)}).then(function(resp){return resp.json();}).then(function(data){return console.log(data);}).catch(function(err){return console.error(err);});};var onFormSubmit=function onFormSubmit(e){var formEl=e.currentTarget;e.preventDefault();// const formData = {
  //   firstName: DOM.inputFirsname.value
  // }
  var formData=getFormData(formEl);console.log(formData);formEl.classList.remove('was-validated');if(!isFormValid()){formEl.classList.add('was-validated');console.error('Formular konnte nicht versendet werden');}else {console.log('Formular wird versendet.');sendFormContact(formData);}};var onFocusFormField=function onFocusFormField(e){var el=e.currentTarget;console.log('wurde fokusiert');el.dataset.touched=true;};var onBlurFormField=function onBlurFormField(e){var el=e.currentTarget;console.log(el);switch(el.name){case'firstname':validateTextField(el);break;case'lastname':validateTextField(el,{min:2,max:20});break;case'message':validateTextField(el,{min:2,max:1000});break;case'email':validateEmailField(el);break;case'agb':validateCheckbox(el);}validateRadioGroup(DOM.genderGroup);};// === FUNCTIONS ====
  var validateCheckbox=function validateCheckbox(el){if(!el.checked){console.warn('checkbox not selected');el.classList.add('is-invalid');el.classList.remove('is-valid');}else {el.classList.remove('is-invalid');el.classList.add('is-valid');}};var validateRadioGroup=function validateRadioGroup(groupEl){var radioEls=Array.from(groupEl.querySelectorAll('input[type="radio"]'));var isOneChecked=radioEls.some(function(el){return el.checked;});if(!isOneChecked){console.warn('no radio selected');groupEl.classList.add('is-invalid');groupEl.classList.remove('is-valid');radioEls.forEach(function(el){el.classList.add('is-invalid');el.classList.remove('is-valid');});}else {groupEl.classList.remove('is-invalid');groupEl.classList.add('is-valid');radioEls.forEach(function(el){el.classList.remove('is-invalid');el.classList.add('is-valid');});}};var validateEmailField=function validateEmailField(el){var value=el.value;// const emailRegex = new RegExp(
  //   /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
  // );
  // if (value === '' || !emailRegex.test(value)) {
  if(el.dataset.touched){if(validator$2.isEmpty(value)||!validator$2.isEmail(value)){console.warn('no valid input');el.classList.add('is-invalid');el.classList.remove('is-valid');}else {el.classList.remove('is-invalid');el.classList.add('is-valid');}}};var validateTextField=function validateTextField(el){var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{min:2,max:40};var value=el.value;if(validator$2.isEmpty(value)||!validator$2.isLength(value,opts)){console.warn('no valid input');el.classList.add('is-invalid');el.classList.remove('is-valid');}else {el.classList.remove('is-invalid');el.classList.add('is-valid');}};var isFormValid=function isFormValid(){var validFields=DOM.formRequiredFields.filter(function(field){return field.classList.contains('is-valid');});console.log('requiredFields: ',DOM.formRequiredFields);console.log('validFields: ',validFields);return validFields.length===DOM.formRequiredFields.length;};var getFormData=function getFormData(form){var requiredFields=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var formData=new FormData(form);// z.B. new FormData(form).entries()
  // [
  //  {},
  //    ['firstname', 'Max'],
  //    ['lastname', 'Mustermann']
  //  ...
  // ]
  //  {'firstname': 'Max', 'lastname:'Mustermann'}
  var formObj=Array.from(formData.entries()).reduce(function(obj,arr){if(requiredFields.length>0){if(!obj[arr[0]]&&requiredFields.includes(arr[0])){obj[arr[0]]=arr[1];}}else {if(!obj[arr[0]]){obj[arr[0]]=arr[1];}}return obj;},{});return formObj;};init();};

  var react = {exports: {}};

  function _typeof(obj) {
    "@babel/helpers - typeof";

    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
      return typeof obj;
    } : function (obj) {
      return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, _typeof(obj);
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;

    var _s, _e;

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

    return arr2;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var react_production_min = {};

  var l$1=Symbol.for("react.element"),n$1=Symbol.for("react.portal"),p$2=Symbol.for("react.fragment"),q$1=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t$1=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z$1=Symbol.iterator;function A$1(a){if(null===a||"object"!==_typeof(a))return null;a=z$1&&a[z$1]||a["@@iterator"];return "function"===typeof a?a:null;}var B$1={isMounted:function isMounted(){return !1;},enqueueForceUpdate:function enqueueForceUpdate(){},enqueueReplaceState:function enqueueReplaceState(){},enqueueSetState:function enqueueSetState(){}},C$1=Object.assign,D$1={};function E$1(a,b,e){this.props=a;this.context=b;this.refs=D$1;this.updater=e||B$1;}E$1.prototype.isReactComponent={};E$1.prototype.setState=function(a,b){if("object"!==_typeof(a)&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState");};E$1.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate");};function F(){}F.prototype=E$1.prototype;function G$1(a,b,e){this.props=a;this.context=b;this.refs=D$1;this.updater=e||B$1;}var H$1=G$1.prototype=new F();H$1.constructor=G$1;C$1(H$1,E$1.prototype);H$1.isPureReactComponent=!0;var I$1=Array.isArray,J=Object.prototype.hasOwnProperty,K$1={current:null},L$1={key:!0,ref:!0,__self:!0,__source:!0};function M$1(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b){J.call(b,d)&&!L$1.hasOwnProperty(d)&&(c[d]=b[d]);}var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++){f[m]=arguments[m+2];}c.children=f;}if(a&&a.defaultProps)for(d in g=a.defaultProps,g){void 0===c[d]&&(c[d]=g[d]);}return {$$typeof:l$1,type:a,key:k,ref:h,props:c,_owner:K$1.current};}function N$1(a,b){return {$$typeof:l$1,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner};}function O$1(a){return "object"===_typeof(a)&&null!==a&&a.$$typeof===l$1;}function escape(a){var b={"=":"=0",":":"=2"};return "$"+a.replace(/[=:]/g,function(a){return b[a];});}var P$1=/\/+/g;function Q$1(a,b){return "object"===_typeof(a)&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36);}function R$1(a,b,e,d,c){var k=_typeof(a);if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case"string":case"number":h=!0;break;case"object":switch(a.$$typeof){case l$1:case n$1:h=!0;}}if(h)return h=a,c=c(h),a=""===d?"."+Q$1(h,0):d,I$1(c)?(e="",null!=a&&(e=a.replace(P$1,"$&/")+"/"),R$1(c,b,e,"",function(a){return a;})):null!=c&&(O$1(c)&&(c=N$1(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P$1,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I$1(a))for(var g=0;g<a.length;g++){k=a[g];var f=d+Q$1(k,g);h+=R$1(k,b,e,f,c);}else if(f=A$1(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;){k=k.value,f=d+Q$1(k,g++),h+=R$1(k,b,e,f,c);}else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h;}function S$1(a,b,e){if(null==a)return a;var d=[],c=0;R$1(a,d,"","",function(a){return b.call(e,a,c++);});return d;}function T$1(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b;},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b;});-1===a._status&&(a._status=0,a._result=b);}if(1===a._status)return a._result.default;throw a._result;}var U$1={current:null},V$1={transition:null},W$1={ReactCurrentDispatcher:U$1,ReactCurrentBatchConfig:V$1,ReactCurrentOwner:K$1};react_production_min.Children={map:S$1,forEach:function forEach(a,b,e){S$1(a,function(){b.apply(this,arguments);},e);},count:function count(a){var b=0;S$1(a,function(){b++;});return b;},toArray:function toArray(a){return S$1(a,function(a){return a;})||[];},only:function only(a){if(!O$1(a))throw Error("React.Children.only expected to receive a single React element child.");return a;}};react_production_min.Component=E$1;react_production_min.Fragment=p$2;react_production_min.Profiler=r;react_production_min.PureComponent=G$1;react_production_min.StrictMode=q$1;react_production_min.Suspense=w;react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W$1;react_production_min.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C$1({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K$1.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b){J.call(b,f)&&!L$1.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f]);}}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);for(var m=0;m<f;m++){g[m]=arguments[m+2];}d.children=g;}return {$$typeof:l$1,type:a.type,key:c,ref:k,props:d,_owner:h};};react_production_min.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t$1,_context:a};return a.Consumer=a;};react_production_min.createElement=M$1;react_production_min.createFactory=function(a){var b=M$1.bind(null,a);b.type=a;return b;};react_production_min.createRef=function(){return {current:null};};react_production_min.forwardRef=function(a){return {$$typeof:v,render:a};};react_production_min.isValidElement=O$1;react_production_min.lazy=function(a){return {$$typeof:y,_payload:{_status:-1,_result:a},_init:T$1};};react_production_min.memo=function(a,b){return {$$typeof:x,type:a,compare:void 0===b?null:b};};react_production_min.startTransition=function(a){var b=V$1.transition;V$1.transition={};try{a();}finally{V$1.transition=b;}};react_production_min.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.");};react_production_min.useCallback=function(a,b){return U$1.current.useCallback(a,b);};react_production_min.useContext=function(a){return U$1.current.useContext(a);};react_production_min.useDebugValue=function(){};react_production_min.useDeferredValue=function(a){return U$1.current.useDeferredValue(a);};react_production_min.useEffect=function(a,b){return U$1.current.useEffect(a,b);};react_production_min.useId=function(){return U$1.current.useId();};react_production_min.useImperativeHandle=function(a,b,e){return U$1.current.useImperativeHandle(a,b,e);};react_production_min.useInsertionEffect=function(a,b){return U$1.current.useInsertionEffect(a,b);};react_production_min.useLayoutEffect=function(a,b){return U$1.current.useLayoutEffect(a,b);};react_production_min.useMemo=function(a,b){return U$1.current.useMemo(a,b);};react_production_min.useReducer=function(a,b,e){return U$1.current.useReducer(a,b,e);};react_production_min.useRef=function(a){return U$1.current.useRef(a);};react_production_min.useState=function(a){return U$1.current.useState(a);};react_production_min.useSyncExternalStore=function(a,b,e){return U$1.current.useSyncExternalStore(a,b,e);};react_production_min.useTransition=function(){return U$1.current.useTransition();};react_production_min.version="18.1.0";

  (function(module){{module.exports=react_production_min;}})(react);

  var jsxRuntime = {exports: {}};

  var reactJsxRuntime_production_min = {};

  var f$1=react.exports,k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m$1=Object.prototype.hasOwnProperty,n=f$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p$1={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=""+g);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(h=a.ref);for(b in a){m$1.call(a,b)&&!p$1.hasOwnProperty(b)&&(d[b]=a[b]);}if(c&&c.defaultProps)for(b in a=c.defaultProps,a){void 0===d[b]&&(d[b]=a[b]);}return {$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current};}reactJsxRuntime_production_min.Fragment=l;reactJsxRuntime_production_min.jsx=q;reactJsxRuntime_production_min.jsxs=q;

  (function(module){{module.exports=reactJsxRuntime_production_min;}})(jsxRuntime);

  var GameOfLife=function GameOfLife(props){// const {} = props;
  var canvasRef=react.exports.useRef(null);var ctxRef=react.exports.useRef(null);var w=1000;// breite von canvas
  var h=800;// höhe von canvas
  var r=10;// Auflösung bzw. Pixelbreite und -höhe.
  var cols=parseInt(w/r);var rows=parseInt(h/r);var colsArray=new Array(cols).fill(0);var rowsArray=new Array(rows).fill(0);var neighbours=[[0,-1],// n
  [1,-1],// ne
  [1,0],// e
  [1,1],// se
  [0,1],// s
  [-1,1],//sw
  [-1,0],// w
  [-1,-1]// nw
  ];var createGrid=function createGrid(cols,rows){return Array(rows).fill(0).map(function(){return Array(cols).fill(0).map(function(){return Math.floor(Math.random()*2);});});};var run=react.exports.useCallback(function(){var ctx=ctxRef.current;var copyGrid=_toConsumableArray(grid);rowsArray.forEach(function(row,i,rows){colsArray.forEach(function(col,j,cols){var x=j*r;var y=i*r;// https://math.stackexchange.com/a/1781233
  var nc=0;// Nachbarschaft-Counter
  neighbours.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),n1=_ref2[0],n2=_ref2[1];var newI=i+n1;var newJ=j+n2;if(newI>0&&newI<rows.length&&newJ>=0&&newJ<cols.length){nc+=copyGrid[newI][newJ];}if(nc<2||nc>4){ctx.fillStyle='black';copyGrid[i][j]=0;// Zelle stirbt
  }else if(grid[i][j]===0&&nc===3){ctx.fillStyle='steelblue';copyGrid[i][j]=1;}ctx.fillRect(x,y,r,r);});});setGrid(copyGrid);});});setTimeout(run,100);//  console.table(createGrid(cols, rows));
  // console.table(createEmptyGrid(cols, rows));
  var _useState=react.exports.useState(createGrid(cols,rows)),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];react.exports.useEffect(function(){console.table(grid);var canvas=canvasRef.current;canvas.width=w*2;canvas.height=h*2;canvas.style.width="".concat(w,"px");canvas.style.height="".concat(h,"px");var ctx=canvas.getContext('2d');ctx.scale(2,2);ctx.lineCap='round';ctx.strokeStyle='red';ctx.fillStyle='black';ctx.lineWidth='1';ctxRef.current=ctx;// Referenz über useRef auch auf Objekt bzw. Variablen möglich
  rowsArray.forEach(function(row,i){colsArray.forEach(function(col,j){var x=j*r;var y=i*r;if(grid[i][j]===1){ctx.fillStyle='steelblue';}else {ctx.fillStyle='black';}ctx.fillRect(x,y,r,r);});});return function(){// clean
  };},[]);return/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"m-game-of-life game-of-life",children:/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"container py-5",children:/*#__PURE__*/jsxRuntime.exports.jsx("canvas",{ref:canvasRef})})});};

  var reactDom = {exports: {}};

  var reactDom_production_min = {};

  var scheduler = {exports: {}};

  var scheduler_production_min = {};

  (function(exports){function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a;}}function h(a){return 0===a.length?null:a[0];}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a;}}return b;}function g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id;}if("object"===(typeof performance==="undefined"?"undefined":_typeof(performance))&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now();};}else {var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q;};}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t);}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else {var b=h(t);null!==b&&K(H,b.startTime-a);}}function J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b);}else k(r);v=h(r);}if(null!==v)var w=!0;else {var m=h(t);null!==m&&K(H,m.startTime-b);w=!1;}return w;}finally{v=null,y=c,z=!1;}}var N=!1,O=null,L=-1,P=5,Q=-1;function M(){return exports.unstable_now()-Q<P?!1:!0;}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a);}finally{b?S():(N=!1,O=null);}}else N=!1;}var S;if("function"===typeof F)S=function S(){F(R);};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel(),U=T.port2;T.port1.onmessage=R;S=function S(){U.postMessage(null);};}else S=function S(){D(R,0);};function I(a){O=a;N||(N=!0,S());}function K(a,b){L=D(function(){a(exports.unstable_now());},b);}exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null;};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J));};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5;};exports.unstable_getCurrentPriorityLevel=function(){return y;};exports.unstable_getFirstCallbackNode=function(){return h(r);};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y;}var c=y;y=b;try{return a();}finally{y=c;}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3;}var c=y;y=a;try{return b();}finally{y=c;}};exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===_typeof(c)&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3;}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a;};exports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments);}finally{y=c;}};};})(scheduler_production_min);

  (function(module){{module.exports=scheduler_production_min;}})(scheduler);

  var aa=react.exports,ba=scheduler.exports;function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++){b+="&args[]="+encodeURIComponent(arguments[c]);}return "Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";}var da=new Set(),ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b);}function ha(a,b){ea[a]=b;for(a=0;a<b.length;a++){da.add(b[a]);}}var ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function na(a){if(ja.call(ma,a))return !0;if(ja.call(la,a))return !1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return !1;}function oa(a,b,c,d){if(null!==c&&0===c.type)return !1;switch(_typeof(b)){case"function":case"symbol":return !0;case"boolean":if(d)return !1;if(null!==c)return !c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return "data-"!==a&&"aria-"!==a;default:return !1;}}function pa(a,b,c,d){if(null===b||"undefined"===typeof b||oa(a,b,c,d))return !0;if(d)return !1;if(null!==c)switch(c.type){case 3:return !b;case 4:return !1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b;}return !1;}function t(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g;}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new t(a,0,!1,a,null,!1,!1);});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new t(b,1,!1,a[1],null,!1,!1);});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new t(a,2,!1,a.toLowerCase(),null,!1,!1);});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new t(a,2,!1,a,null,!1,!1);});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new t(a,3,!1,a.toLowerCase(),null,!1,!1);});["checked","multiple","muted","selected"].forEach(function(a){z[a]=new t(a,3,!0,a,null,!1,!1);});["capture","download"].forEach(function(a){z[a]=new t(a,4,!1,a,null,!1,!1);});["cols","rows","size","span"].forEach(function(a){z[a]=new t(a,6,!1,a,null,!1,!1);});["rowSpan","start"].forEach(function(a){z[a]=new t(a,5,!1,a.toLowerCase(),null,!1,!1);});var qa=/[\-:]([a-z])/g;function ra(a){return a[1].toUpperCase();}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(qa,ra);z[b]=new t(b,1,!1,a,null,!1,!1);});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(qa,ra);z[b]=new t(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1);});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(qa,ra);z[b]=new t(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1);});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new t(a,1,!1,a.toLowerCase(),null,!1,!1);});z.xlinkHref=new t("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new t(a,1,!1,a.toLowerCase(),null,!0,!0);});function sa(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])pa(b,c,e,d)&&(c=null),d||null===e?na(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)));}var ta=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ua=Symbol.for("react.element"),va=Symbol.for("react.portal"),wa=Symbol.for("react.fragment"),xa=Symbol.for("react.strict_mode"),za=Symbol.for("react.profiler"),Aa=Symbol.for("react.provider"),Ba=Symbol.for("react.context"),Ca=Symbol.for("react.forward_ref"),Da=Symbol.for("react.suspense"),Ea=Symbol.for("react.suspense_list"),Fa=Symbol.for("react.memo"),Ga=Symbol.for("react.lazy");var Ha=Symbol.for("react.offscreen");var Ia=Symbol.iterator;function Ja(a){if(null===a||"object"!==_typeof(a))return null;a=Ia&&a[Ia]||a["@@iterator"];return "function"===typeof a?a:null;}var A=Object.assign,Ka;function La(a){if(void 0===Ka)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);Ka=b&&b[1]||"";}return "\n"+Ka+a;}var Ma=!1;function Na(a,b){if(!a||Ma)return "";Ma=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b){if(b=function b(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function set(){throw Error();}}),"object"===(typeof Reflect==="undefined"?"undefined":_typeof(Reflect))&&Reflect.construct){try{Reflect.construct(b,[]);}catch(l){var d=l;}Reflect.construct(a,[],b);}else {try{b.call();}catch(l){d=l;}a.call(b.prototype);}}else {try{throw Error();}catch(l){d=l;}a();}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\n"),f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];){h--;}for(;1<=g&&0<=h;g--,h--){if(e[g]!==f[h]){if(1!==g||1!==h){do{if(g--,h--,0>h||e[g]!==f[h]){var k="\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k;}}while(1<=g&&0<=h);}break;}}}}finally{Ma=!1,Error.prepareStackTrace=c;}return (a=a?a.displayName||a.name:"")?La(a):"";}function Oa(a){switch(a.tag){case 5:return La(a.type);case 16:return La("Lazy");case 13:return La("Suspense");case 19:return La("SuspenseList");case 0:case 2:case 15:return a=Na(a.type,!1),a;case 11:return a=Na(a.type.render,!1),a;case 1:return a=Na(a.type,!0),a;default:return "";}}function Pa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case wa:return "Fragment";case va:return "Portal";case za:return "Profiler";case xa:return "StrictMode";case Da:return "Suspense";case Ea:return "SuspenseList";}if("object"===_typeof(a))switch(a.$$typeof){case Ba:return (a.displayName||"Context")+".Consumer";case Aa:return (a._context.displayName||"Context")+".Provider";case Ca:var b=a.render;a=a.displayName;a||(a=b.displayName||b.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Fa:return b=a.displayName||null,null!==b?b:Pa(a.type)||"Memo";case Ga:b=a._payload;a=a._init;try{return Pa(a(b));}catch(c){}}return null;}function Qa(a){var b=a.type;switch(a.tag){case 24:return "Cache";case 9:return (b.displayName||"Context")+".Consumer";case 10:return (b._context.displayName||"Context")+".Provider";case 18:return "DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return "Fragment";case 5:return b;case 4:return "Portal";case 3:return "Root";case 6:return "Text";case 16:return Pa(b);case 8:return b===xa?"StrictMode":"Mode";case 22:return "Offscreen";case 12:return "Profiler";case 21:return "Scope";case 13:return "Suspense";case 19:return "SuspenseList";case 25:return "TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b;}return null;}function Ra(a){switch(_typeof(a)){case"boolean":case"number":case"string":case"undefined":return a;case"object":return a;default:return "";}}function Sa(a){var b=a.type;return (a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b);}function Ta(a){var b=Sa(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function get(){return e.call(this);},set:function set(a){d=""+a;f.call(this,a);}});Object.defineProperty(a,b,{enumerable:c.enumerable});return {getValue:function getValue(){return d;},setValue:function setValue(a){d=""+a;},stopTracking:function stopTracking(){a._valueTracker=null;delete a[b];}};}}function Ua(a){a._valueTracker||(a._valueTracker=Ta(a));}function Va(a){if(!a)return !1;var b=a._valueTracker;if(!b)return !0;var c=b.getValue();var d="";a&&(d=Sa(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1;}function Wa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body;}catch(b){return a.body;}}function Xa(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked});}function Ya(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ra(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value};}function Za(a,b){b=b.checked;null!=b&&sa(a,"checked",b,!1);}function $a(a,b){Za(a,b);var c=Ra(b.value),d=b.type;if(null!=c){if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c;}else a.value!==""+c&&(a.value=""+c);}else if("submit"===d||"reset"===d){a.removeAttribute("value");return;}b.hasOwnProperty("value")?bb(a,b.type,c):b.hasOwnProperty("defaultValue")&&bb(a,b.type,Ra(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked);}function cb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b;}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c);}function bb(a,b,c){if("number"!==b||Wa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c);}var db=Array.isArray;function eb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++){b["$"+c[e]]=!0;}for(c=0;c<a.length;c++){e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0);}}else {c=""+Ra(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return;}null!==b||a[e].disabled||(b=a[e]);}null!==b&&(b.selected=!0);}}function fb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue});}function gb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(db(c)){if(1<c.length)throw Error(p(93));c=c[0];}b=c;}null==b&&(b="");c=b;}a._wrapperState={initialValue:Ra(c)};}function hb(a,b){var c=Ra(b.value),d=Ra(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d);}function ib(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b);}function jb(a){switch(a){case"svg":return "http://www.w3.org/2000/svg";case"math":return "http://www.w3.org/1998/Math/MathML";default:return "http://www.w3.org/1999/xhtml";}}function kb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?jb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a;}var lb,mb=function(a){return "undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e);});}:a;}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else {lb=lb||document.createElement("div");lb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=lb.firstChild;a.firstChild;){a.removeChild(a.firstChild);}for(;b.firstChild;){a.appendChild(b.firstChild);}}});function nb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return;}}a.textContent=b;}var ob={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pb=["Webkit","ms","Moz","O"];Object.keys(ob).forEach(function(a){pb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);ob[b]=ob[a];});});function qb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||ob.hasOwnProperty(a)&&ob[a]?(""+b).trim():b+"px";}function rb(a,b){a=a.style;for(var c in b){if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=qb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e;}}}var sb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function tb(a,b){if(b){if(sb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==_typeof(b.dangerouslySetInnerHTML)||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==_typeof(b.style))throw Error(p(62));}}function ub(a,b){if(-1===a.indexOf("-"))return "string"===typeof b.is;switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return !1;default:return !0;}}var vb=null;function wb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a;}var xb=null,yb=null,zb=null;function Ab(a){if(a=Bb(a)){if("function"!==typeof xb)throw Error(p(280));var b=a.stateNode;b&&(b=Cb(b),xb(a.stateNode,a.type,b));}}function Db(a){yb?zb?zb.push(a):zb=[a]:yb=a;}function Eb(){if(yb){var a=yb,b=zb;zb=yb=null;Ab(a);if(b)for(a=0;a<b.length;a++){Ab(b[a]);}}}function Fb(a,b){return a(b);}function Gb(){}var Hb=!1;function Ib(a,b,c){if(Hb)return a(b,c);Hb=!0;try{return Fb(a,b,c);}finally{if(Hb=!1,null!==yb||null!==zb)Gb(),Eb();}}function Jb(a,b){var c=a.stateNode;if(null===c)return null;var d=Cb(c);if(null===d)return null;c=d[b];a:switch(b){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1;}if(a)return null;if(c&&"function"!==typeof c)throw Error(p(231,b,_typeof(c)));return c;}var Kb=!1;if(ia)try{var Lb={};Object.defineProperty(Lb,"passive",{get:function get(){Kb=!0;}});window.addEventListener("test",Lb,Lb);window.removeEventListener("test",Lb,Lb);}catch(a){Kb=!1;}function Mb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l);}catch(n){this.onError(n);}}var Nb=!1,Ob=null,Pb=!1,Qb=null,Rb={onError:function onError(a){Nb=!0;Ob=a;}};function Sb(a,b,c,d,e,f,g,h,k){Nb=!1;Ob=null;Mb.apply(Rb,arguments);}function Tb(a,b,c,d,e,f,g,h,k){Sb.apply(this,arguments);if(Nb){if(Nb){var l=Ob;Nb=!1;Ob=null;}else throw Error(p(198));Pb||(Pb=!0,Qb=l);}}function Ub(a){var b=a,c=a;if(a.alternate)for(;b.return;){b=b.return;}else {a=b;do{b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;}while(a);}return 3===b.tag?c:null;}function Vb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated;}return null;}function Wb(a){if(Ub(a)!==a)throw Error(p(188));}function Xb(a){var b=a.alternate;if(!b){b=Ub(a);if(null===b)throw Error(p(188));return b!==a?null:a;}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue;}break;}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Wb(e),a;if(f===d)return Wb(e),b;f=f.sibling;}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else {for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break;}if(h===d){g=!0;d=e;c=f;break;}h=h.sibling;}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break;}if(h===d){g=!0;d=f;c=e;break;}h=h.sibling;}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b;}function Yb(a){a=Xb(a);return null!==a?Zb(a):null;}function Zb(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=Zb(a);if(null!==b)return b;a=a.sibling;}return null;}var $b=ba.unstable_scheduleCallback,ac=ba.unstable_cancelCallback,bc=ba.unstable_shouldYield,cc=ba.unstable_requestPaint,B=ba.unstable_now,dc=ba.unstable_getCurrentPriorityLevel,ec=ba.unstable_ImmediatePriority,fc=ba.unstable_UserBlockingPriority,gc=ba.unstable_NormalPriority,hc=ba.unstable_LowPriority,ic=ba.unstable_IdlePriority,jc=null,kc=null;function lc(a){if(kc&&"function"===typeof kc.onCommitFiberRoot)try{kc.onCommitFiberRoot(jc,a,void 0,128===(a.current.flags&128));}catch(b){}}var nc=Math.clz32?Math.clz32:mc,oc=Math.log,pc=Math.LN2;function mc(a){a>>>=0;return 0===a?32:31-(oc(a)/pc|0)|0;}var qc=64,rc=4194304;function sc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a;}}function tc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=sc(h):(f&=g,0!==f&&(d=sc(f)));}else g=c&~e,0!==g?d=sc(g):0!==f&&(d=sc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;){c=31-nc(b),e=1<<c,d|=a[c],b&=~e;}return d;}function uc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return -1;case 134217728:case 268435456:case 536870912:case 1073741824:return -1;default:return -1;}}function vc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-nc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=uc(h,b);}else k<=b&&(a.expiredLanes|=h);f&=~h;}}function wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0;}function xc(){var a=qc;qc<<=1;0===(qc&4194240)&&(qc=64);return a;}function yc(a){for(var b=[],c=0;31>c;c++){b.push(a);}return b;}function zc(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-nc(b);a[b]=c;}function Ac(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-nc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f;}}function Bc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-nc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e;}}var C=0;function Cc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1;}var Dc,Ec,Fc,Gc,Hc,Ic=!1,Jc=[],Kc=null,Lc=null,Mc=null,Nc=new Map(),Oc=new Map(),Pc=[],Qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rc(a,b){switch(a){case"focusin":case"focusout":Kc=null;break;case"dragenter":case"dragleave":Lc=null;break;case"mouseover":case"mouseout":Mc=null;break;case"pointerover":case"pointerout":Nc.delete(b.pointerId);break;case"gotpointercapture":case"lostpointercapture":Oc.delete(b.pointerId);}}function Sc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Bb(b),null!==b&&Ec(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a;}function Tc(a,b,c,d,e){switch(b){case"focusin":return Kc=Sc(Kc,a,b,c,d,e),!0;case"dragenter":return Lc=Sc(Lc,a,b,c,d,e),!0;case"mouseover":return Mc=Sc(Mc,a,b,c,d,e),!0;case"pointerover":var f=e.pointerId;Nc.set(f,Sc(Nc.get(f)||null,a,b,c,d,e));return !0;case"gotpointercapture":return f=e.pointerId,Oc.set(f,Sc(Oc.get(f)||null,a,b,c,d,e)),!0;}return !1;}function Uc(a){var b=Vc(a.target);if(null!==b){var c=Ub(b);if(null!==c)if(b=c.tag,13===b){if(b=Vb(c),null!==b){a.blockedOn=b;Hc(a.priority,function(){Fc(c);});return;}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return;}}a.blockedOn=null;}function Wc(a){if(null!==a.blockedOn)return !1;for(var b=a.targetContainers;0<b.length;){var c=Xc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);vb=d;c.target.dispatchEvent(d);vb=null;}else return b=Bb(c),null!==b&&Ec(b),a.blockedOn=c,!1;b.shift();}return !0;}function Yc(a,b,c){Wc(a)&&c.delete(b);}function Zc(){Ic=!1;null!==Kc&&Wc(Kc)&&(Kc=null);null!==Lc&&Wc(Lc)&&(Lc=null);null!==Mc&&Wc(Mc)&&(Mc=null);Nc.forEach(Yc);Oc.forEach(Yc);}function $c(a,b){a.blockedOn===b&&(a.blockedOn=null,Ic||(Ic=!0,ba.unstable_scheduleCallback(ba.unstable_NormalPriority,Zc)));}function ad(a){function b(b){return $c(b,a);}if(0<Jc.length){$c(Jc[0],a);for(var c=1;c<Jc.length;c++){var d=Jc[c];d.blockedOn===a&&(d.blockedOn=null);}}null!==Kc&&$c(Kc,a);null!==Lc&&$c(Lc,a);null!==Mc&&$c(Mc,a);Nc.forEach(b);Oc.forEach(b);for(c=0;c<Pc.length;c++){d=Pc[c],d.blockedOn===a&&(d.blockedOn=null);}for(;0<Pc.length&&(c=Pc[0],null===c.blockedOn);){Uc(c),null===c.blockedOn&&Pc.shift();}}var bd=ta.ReactCurrentBatchConfig,cd=!0;function dd(a,b,c,d){var e=C,f=bd.transition;bd.transition=null;try{C=1,ed(a,b,c,d);}finally{C=e,bd.transition=f;}}function fd(a,b,c,d){var e=C,f=bd.transition;bd.transition=null;try{C=4,ed(a,b,c,d);}finally{C=e,bd.transition=f;}}function ed(a,b,c,d){if(cd){var e=Xc(a,b,c,d);if(null===e)gd(a,b,d,hd,c),Rc(a,d);else if(Tc(e,a,b,c,d))d.stopPropagation();else if(Rc(a,d),b&4&&-1<Qc.indexOf(a)){for(;null!==e;){var f=Bb(e);null!==f&&Dc(f);f=Xc(a,b,c,d);null===f&&gd(a,b,d,hd,c);if(f===e)break;e=f;}null!==e&&d.stopPropagation();}else gd(a,b,d,null,c);}}var hd=null;function Xc(a,b,c,d){hd=null;a=wb(d);a=Vc(a);if(null!==a)if(b=Ub(a),null===b)a=null;else if(c=b.tag,13===c){a=Vb(b);if(null!==a)return a;a=null;}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null;}else b!==a&&(a=null);hd=a;return null;}function id(a){switch(a){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(dc()){case ec:return 1;case fc:return 4;case gc:case hc:return 16;case ic:return 536870912;default:return 16;}default:return 16;}}var jd=null,kd=null,ld=null;function md(){if(ld)return ld;var a,b=kd,c=b.length,d,e="value"in jd?jd.value:jd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++){}var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++){}return ld=e.slice(a,1<d?1-d:void 0);}function nd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0;}function od(){return !0;}function pd(){return !1;}function qd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a){a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);}this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?od:pd;this.isPropagationStopped=pd;return this;}A(b.prototype,{preventDefault:function preventDefault(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=od);},stopPropagation:function stopPropagation(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=od);},persist:function persist(){},isPersistent:od});return b;}var rd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function timeStamp(a){return a.timeStamp||Date.now();},defaultPrevented:0,isTrusted:0},sd=qd(rd),td=A({},rd,{view:0,detail:0}),ud=qd(td),vd,wd,xd,zd=A({},td,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:yd,button:0,buttons:0,relatedTarget:function relatedTarget(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget;},movementX:function movementX(a){if("movementX"in a)return a.movementX;a!==xd&&(xd&&"mousemove"===a.type?(vd=a.screenX-xd.screenX,wd=a.screenY-xd.screenY):wd=vd=0,xd=a);return vd;},movementY:function movementY(a){return "movementY"in a?a.movementY:wd;}}),Ad=qd(zd),Bd=A({},zd,{dataTransfer:0}),Cd=qd(Bd),Dd=A({},td,{relatedTarget:0}),Ed=qd(Dd),Fd=A({},rd,{animationName:0,elapsedTime:0,pseudoElement:0}),Gd=qd(Fd),Hd=A({},rd,{clipboardData:function clipboardData(a){return "clipboardData"in a?a.clipboardData:window.clipboardData;}}),Id=qd(Hd),Jd=A({},rd,{data:0}),Kd=qd(Jd),Ld={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Md={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nd={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Od(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Nd[a])?!!b[a]:!1;}function yd(){return Od;}var Pd=A({},td,{key:function key(a){if(a.key){var b=Ld[a.key]||a.key;if("Unidentified"!==b)return b;}return "keypress"===a.type?(a=nd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Md[a.keyCode]||"Unidentified":"";},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:yd,charCode:function charCode(a){return "keypress"===a.type?nd(a):0;},keyCode:function keyCode(a){return "keydown"===a.type||"keyup"===a.type?a.keyCode:0;},which:function which(a){return "keypress"===a.type?nd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0;}}),Qd=qd(Pd),Rd=A({},zd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Sd=qd(Rd),Td=A({},td,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:yd}),Ud=qd(Td),Vd=A({},rd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Wd=qd(Vd),Xd=A({},zd,{deltaX:function deltaX(a){return "deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0;},deltaY:function deltaY(a){return "deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0;},deltaZ:0,deltaMode:0}),Yd=qd(Xd),Zd=[9,13,27,32],$d=ia&&"CompositionEvent"in window,ae=null;ia&&"documentMode"in document&&(ae=document.documentMode);var be=ia&&"TextEvent"in window&&!ae,ce=ia&&(!$d||ae&&8<ae&&11>=ae),de=String.fromCharCode(32),ee=!1;function fe(a,b){switch(a){case"keyup":return -1!==Zd.indexOf(b.keyCode);case"keydown":return 229!==b.keyCode;case"keypress":case"mousedown":case"focusout":return !0;default:return !1;}}function ge(a){a=a.detail;return "object"===_typeof(a)&&"data"in a?a.data:null;}var he=!1;function ie(a,b){switch(a){case"compositionend":return ge(b);case"keypress":if(32!==b.which)return null;ee=!0;return de;case"textInput":return a=b.data,a===de&&ee?null:a;default:return null;}}function je(a,b){if(he)return "compositionend"===a||!$d&&fe(a,b)?(a=md(),ld=kd=jd=null,he=!1,a):null;switch(a){case"paste":return null;case"keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which);}return null;case"compositionend":return ce&&"ko"!==b.locale?null:b.data;default:return null;}}var ke={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function le(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return "input"===b?!!ke[a.type]:"textarea"===b?!0:!1;}function me(a,b,c,d){Db(d);b=ne(b,"onChange");0<b.length&&(c=new sd("onChange","change",null,c,d),a.push({event:c,listeners:b}));}var oe=null,pe=null;function qe(a){re(a,0);}function se(a){var b=te(a);if(Va(b))return a;}function ue(a,b){if("change"===a)return b;}var ve=!1;if(ia){var we;if(ia){var xe=("oninput"in document);if(!xe){var ye=document.createElement("div");ye.setAttribute("oninput","return;");xe="function"===typeof ye.oninput;}we=xe;}else we=!1;ve=we&&(!document.documentMode||9<document.documentMode);}function ze(){oe&&(oe.detachEvent("onpropertychange",Ae),pe=oe=null);}function Ae(a){if("value"===a.propertyName&&se(pe)){var b=[];me(b,pe,a,wb(a));Ib(qe,b);}}function Be(a,b,c){"focusin"===a?(ze(),oe=b,pe=c,oe.attachEvent("onpropertychange",Ae)):"focusout"===a&&ze();}function Ce(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return se(pe);}function De(a,b){if("click"===a)return se(b);}function Ee(a,b){if("input"===a||"change"===a)return se(b);}function Fe(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b;}var Ge="function"===typeof Object.is?Object.is:Fe;function He(a,b){if(Ge(a,b))return !0;if("object"!==_typeof(a)||null===a||"object"!==_typeof(b)||null===b)return !1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return !1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!Ge(a[e],b[e]))return !1;}return !0;}function Ie(a){for(;a&&a.firstChild;){a=a.firstChild;}return a;}function Je(a,b){var c=Ie(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return {node:c,offset:b-a};a=d;}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a;}c=c.parentNode;}c=void 0;}c=Ie(c);}}function Ke(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Ke(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1;}function Le(){for(var a=window,b=Wa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href;}catch(d){c=!1;}if(c)a=b.contentWindow;else break;b=Wa(a.document);}return b;}function Me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable);}function Ne(a){var b=Le(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Ke(c.ownerDocument.documentElement,c)){if(null!==d&&Me(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Je(c,f);var g=Je(c,d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)));}b=[];for(a=c;a=a.parentNode;){1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});}"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++){a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top;}}}var Oe=ia&&"documentMode"in document&&11>=document.documentMode,Pe=null,Qe=null,Re=null,Se=!1;function Te(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Se||null==Pe||Pe!==Wa(d)||(d=Pe,"selectionStart"in d&&Me(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Re&&He(Re,d)||(Re=d,d=ne(Qe,"onSelect"),0<d.length&&(b=new sd("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Pe)));}function Ue(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c;}var Ve={animationend:Ue("Animation","AnimationEnd"),animationiteration:Ue("Animation","AnimationIteration"),animationstart:Ue("Animation","AnimationStart"),transitionend:Ue("Transition","TransitionEnd")},We={},Xe={};ia&&(Xe=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);function Ye(a){if(We[a])return We[a];if(!Ve[a])return a;var b=Ve[a],c;for(c in b){if(b.hasOwnProperty(c)&&c in Xe)return We[a]=b[c];}return a;}var Ze=Ye("animationend"),$e=Ye("animationiteration"),af=Ye("animationstart"),bf=Ye("transitionend"),cf=new Map(),df="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ef(a,b){cf.set(a,b);fa(b,[a]);}for(var ff=0;ff<df.length;ff++){var gf=df[ff],hf=gf.toLowerCase(),jf=gf[0].toUpperCase()+gf.slice(1);ef(hf,"on"+jf);}ef(Ze,"onAnimationEnd");ef($e,"onAnimationIteration");ef(af,"onAnimationStart");ef("dblclick","onDoubleClick");ef("focusin","onFocus");ef("focusout","onBlur");ef(bf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),lf=new Set("cancel close invalid load scroll toggle".split(" ").concat(kf));function mf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Tb(d,b,void 0,a);a.currentTarget=null;}function re(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;mf(e,h,l);f=k;}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;mf(e,h,l);f=k;}}}if(Pb)throw a=Qb,Pb=!1,Qb=null,a;}function D(a,b){var c=b[nf];void 0===c&&(c=b[nf]=new Set());var d=a+"__bubble";c.has(d)||(of(b,a,2,!1),c.add(d));}function pf(a,b,c){var d=0;b&&(d|=4);of(c,a,d,b);}var qf="_reactListening"+Math.random().toString(36).slice(2);function rf(a){if(!a[qf]){a[qf]=!0;da.forEach(function(b){"selectionchange"!==b&&(lf.has(b)||pf(b,!1,a),pf(b,!0,a));});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[qf]||(b[qf]=!0,pf("selectionchange",!1,b));}}function of(a,b,c,d){switch(id(b)){case 1:var e=dd;break;case 4:e=fd;break;default:e=ed;}c=e.bind(null,b,c,a);e=void 0;!Kb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1);}function gd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return;}for(;null!==h;){g=Vc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a;}h=h.parentNode;}}d=d.return;}Ib(function(){var d=f,e=wb(c),g=[];a:{var h=cf.get(a);if(void 0!==h){var k=sd,m=a;switch(a){case"keypress":if(0===nd(c))break a;case"keydown":case"keyup":k=Qd;break;case"focusin":m="focus";k=Ed;break;case"focusout":m="blur";k=Ed;break;case"beforeblur":case"afterblur":k=Ed;break;case"click":if(2===c.button)break a;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":k=Ad;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":k=Cd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":k=Ud;break;case Ze:case $e:case af:k=Gd;break;case bf:k=Wd;break;case"scroll":k=ud;break;case"wheel":k=Yd;break;case"copy":case"cut":case"paste":k=Id;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":k=Sd;}var w=0!==(b&4),J=!w&&"scroll"===a,v=w?null!==h?h+"Capture":null:h;w=[];for(var x=d,r;null!==x;){r=x;var F=r.stateNode;5===r.tag&&null!==F&&(r=F,null!==v&&(F=Jb(x,v),null!=F&&w.push(sf(x,F,r))));if(J)break;x=x.return;}0<w.length&&(h=new k(h,m,null,c,e),g.push({event:h,listeners:w}));}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==vb&&(m=c.relatedTarget||c.fromElement)&&(Vc(m)||m[tf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(m=c.relatedTarget||c.toElement,k=d,m=m?Vc(m):null,null!==m&&(J=Ub(m),m!==J||5!==m.tag&&6!==m.tag))m=null;}else k=null,m=d;if(k!==m){w=Ad;F="onMouseLeave";v="onMouseEnter";x="mouse";if("pointerout"===a||"pointerover"===a)w=Sd,F="onPointerLeave",v="onPointerEnter",x="pointer";J=null==k?h:te(k);r=null==m?h:te(m);h=new w(F,x+"leave",k,c,e);h.target=J;h.relatedTarget=r;F=null;Vc(e)===d&&(w=new w(v,x+"enter",m,c,e),w.target=r,w.relatedTarget=J,F=w);J=F;if(k&&m)b:{w=k;v=m;x=0;for(r=w;r;r=uf(r)){x++;}r=0;for(F=v;F;F=uf(F)){r++;}for(;0<x-r;){w=uf(w),x--;}for(;0<r-x;){v=uf(v),r--;}for(;x--;){if(w===v||null!==v&&w===v.alternate)break b;w=uf(w);v=uf(v);}w=null;}else w=null;null!==k&&vf(g,h,k,w,!1);null!==m&&null!==J&&vf(g,J,m,w,!0);}}}a:{h=d?te(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var Z=ue;else if(le(h)){if(ve)Z=Ee;else {Z=Ce;var ya=Be;}}else (k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(Z=De);if(Z&&(Z=Z(a,d))){me(g,Z,c,e);break a;}ya&&ya(a,h,d);"focusout"===a&&(ya=h._wrapperState)&&ya.controlled&&"number"===h.type&&bb(h,"number",h.value);}ya=d?te(d):window;switch(a){case"focusin":if(le(ya)||"true"===ya.contentEditable)Pe=ya,Qe=d,Re=null;break;case"focusout":Re=Qe=Pe=null;break;case"mousedown":Se=!0;break;case"contextmenu":case"mouseup":case"dragend":Se=!1;Te(g,c,e);break;case"selectionchange":if(Oe)break;case"keydown":case"keyup":Te(g,c,e);}var ab;if($d)b:{switch(a){case"compositionstart":var ca="onCompositionStart";break b;case"compositionend":ca="onCompositionEnd";break b;case"compositionupdate":ca="onCompositionUpdate";break b;}ca=void 0;}else he?fe(a,c)&&(ca="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ca="onCompositionStart");ca&&(ce&&"ko"!==c.locale&&(he||"onCompositionStart"!==ca?"onCompositionEnd"===ca&&he&&(ab=md()):(jd=e,kd="value"in jd?jd.value:jd.textContent,he=!0)),ya=ne(d,ca),0<ya.length&&(ca=new Kd(ca,a,null,c,e),g.push({event:ca,listeners:ya}),ab?ca.data=ab:(ab=ge(c),null!==ab&&(ca.data=ab))));if(ab=be?ie(a,c):je(a,c))d=ne(d,"onBeforeInput"),0<d.length&&(e=new Kd("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=ab);}re(g,b);});}function sf(a,b,c){return {instance:a,listener:b,currentTarget:c};}function ne(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Jb(a,c),null!=f&&d.unshift(sf(a,f,e)),f=Jb(a,b),null!=f&&d.push(sf(a,f,e)));a=a.return;}return d;}function uf(a){if(null===a)return null;do{a=a.return;}while(a&&5!==a.tag);return a?a:null;}function vf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Jb(c,f),null!=k&&g.unshift(sf(c,k,h))):e||(k=Jb(c,f),null!=k&&g.push(sf(c,k,h))));c=c.return;}0!==g.length&&a.push({event:b,listeners:g});}var wf=/\r\n?/g,xf=/\u0000|\uFFFD/g;function yf(a){return ("string"===typeof a?a:""+a).replace(wf,"\n").replace(xf,"");}function zf(a,b,c){b=yf(b);if(yf(a)!==b&&c)throw Error(p(425));}function Af(){}var Bf=null,Cf=null;function Df(a,b){return "textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===_typeof(b.dangerouslySetInnerHTML)&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html;}var Ef="function"===typeof setTimeout?setTimeout:void 0,Ff="function"===typeof clearTimeout?clearTimeout:void 0,Gf="function"===typeof Promise?Promise:void 0,If="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Gf?function(a){return Gf.resolve(null).then(a).catch(Hf);}:Ef;function Hf(a){setTimeout(function(){throw a;});}function Jf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);ad(b);return;}d--;}else "$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e;}while(c);ad(b);}function Kf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null;}}return a;}function Lf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--;}else "/$"===c&&b++;}a=a.previousSibling;}return null;}var Mf=Math.random().toString(36).slice(2),Nf="__reactFiber$"+Mf,Of="__reactProps$"+Mf,tf="__reactContainer$"+Mf,nf="__reactEvents$"+Mf,Pf="__reactListeners$"+Mf,Qf="__reactHandles$"+Mf;function Vc(a){var b=a[Nf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[tf]||c[Nf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Lf(a);null!==a;){if(c=a[Nf])return c;a=Lf(a);}return b;}a=c;c=a.parentNode;}return null;}function Bb(a){a=a[Nf]||a[tf];return !a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a;}function te(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Cb(a){return a[Of]||null;}var Rf=[],Sf=-1;function Tf(a){return {current:a};}function E(a){0>Sf||(a.current=Rf[Sf],Rf[Sf]=null,Sf--);}function G(a,b){Sf++;Rf[Sf]=a.current;a.current=b;}var Uf={},H=Tf(Uf),Vf=Tf(!1),Wf=Uf;function Xf(a,b){var c=a.type.contextTypes;if(!c)return Uf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c){e[f]=b[f];}d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e;}function Yf(a){a=a.childContextTypes;return null!==a&&void 0!==a;}function Zf(){E(Vf);E(H);}function $f(a,b,c){if(H.current!==Uf)throw Error(p(168));G(H,b);G(Vf,c);}function ag(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d){if(!(e in b))throw Error(p(108,Qa(a)||"Unknown",e));}return A({},c,d);}function bg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Uf;Wf=H.current;G(H,a);G(Vf,Vf.current);return !0;}function cg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=ag(a,b,Wf),d.__reactInternalMemoizedMergedChildContext=a,E(Vf),E(H),G(H,a)):E(Vf);G(Vf,c);}var dg=null,eg=!1,fg=!1;function gg(a){null===dg?dg=[a]:dg.push(a);}function hg(a){eg=!0;gg(a);}function ig(){if(!fg&&null!==dg){fg=!0;var a=0,b=C;try{var c=dg;for(C=1;a<c.length;a++){var d=c[a];do{d=d(!0);}while(null!==d);}dg=null;eg=!1;}catch(e){throw null!==dg&&(dg=dg.slice(a+1)),$b(ec,ig),e;}finally{C=b,fg=!1;}}return null;}var jg=ta.ReactCurrentBatchConfig;function kg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a){void 0===b[c]&&(b[c]=a[c]);}return b;}return b;}var lg=Tf(null),mg=null,ng=null,og=null;function pg(){og=ng=mg=null;}function qg(a){var b=lg.current;E(lg);a._currentValue=b;}function rg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return;}}function sg(a,b){mg=a;og=ng=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(tg=!0),a.firstContext=null);}function ug(a){var b=a._currentValue;if(og!==a)if(a={context:a,memoizedValue:b,next:null},null===ng){if(null===mg)throw Error(p(308));ng=a;mg.dependencies={lanes:0,firstContext:a};}else ng=ng.next=a;return b;}var vg=null,wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null};}function yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects});}function zg(a,b){return {eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null};}function Ag(a,b){var c=a.updateQueue;null!==c&&(c=c.shared,Bg(a)?(a=c.interleaved,null===a?(b.next=b,null===vg?vg=[c]:vg.push(c)):(b.next=a.next,a.next=b),c.interleaved=b):(a=c.pending,null===a?b.next=b:(b.next=a.next,a.next=b),c.pending=b));}function Cg(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Bc(a,c);}}function Dg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next;}while(null!==c);null===f?e=f=b:f=f.next=b;}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return;}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=b;c.lastBaseUpdate=b;}function Eg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;null!==n&&(n=n.updateQueue,h=n.lastBaseUpdate,h!==g&&(null===h?n.firstBaseUpdate=l:h.next=l,n.lastBaseUpdate=k));}if(null!==f){var u=e.baseState;g=0;n=l=k=null;h=f;do{var q=h.lane,y=h.eventTime;if((d&q)===q){null!==n&&(n=n.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,next:null});a:{var m=a,w=h;q=b;y=c;switch(w.tag){case 1:m=w.payload;if("function"===typeof m){u=m.call(y,u,q);break a;}u=m;break a;case 3:m.flags=m.flags&-65537|128;case 0:m=w.payload;q="function"===typeof m?m.call(y,u,q):m;if(null===q||void 0===q)break a;u=A({},u,q);break a;case 2:wg=!0;}}null!==h.callback&&0!==h.lane&&(a.flags|=64,q=e.effects,null===q?e.effects=[h]:q.push(h));}else y={eventTime:y,lane:q,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===n?(l=n=y,k=u):n=n.next=y,g|=q;h=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else q=h,h=q.next,q.next=null,e.lastBaseUpdate=q,e.shared.pending=null;}while(1);null===n&&(k=u);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;b=e.shared.interleaved;if(null!==b){e=b;do{g|=e.lane,e=e.next;}while(e!==b);}else null===f&&(e.shared.lanes=0);Fg|=g;a.lanes=g;a.memoizedState=u;}}function Gg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d);}}}var Hg=new aa.Component().refs;function Ig(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c);}var Mg={isMounted:function isMounted(a){return (a=a._reactInternals)?Ub(a)===a:!1;},enqueueSetState:function enqueueSetState(a,b,c){a=a._reactInternals;var d=Jg(),e=Kg(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);b=Lg(a,e,d);null!==b&&Cg(b,a,e);},enqueueReplaceState:function enqueueReplaceState(a,b,c){a=a._reactInternals;var d=Jg(),e=Kg(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);b=Lg(a,e,d);null!==b&&Cg(b,a,e);},enqueueForceUpdate:function enqueueForceUpdate(a,b){a=a._reactInternals;var c=Jg(),d=Kg(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);Ag(a,e);b=Lg(a,d,c);null!==b&&Cg(b,a,d);}};function Ng(a,b,c,d,e,f,g){a=a.stateNode;return "function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!He(c,d)||!He(e,f):!0;}function Og(a,b,c){var d=!1,e=Uf;var f=b.contextType;"object"===_typeof(f)&&null!==f?f=ug(f):(e=Yf(b)?Wf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Xf(a,e):Uf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Mg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b;}function Pg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Mg.enqueueReplaceState(b,b.state,null);}function Qg(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Hg;xg(a);var f=b.contextType;"object"===_typeof(f)&&null!==f?e.context=ug(f):(f=Yf(b)?Wf:H.current,e.context=Xf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Ig(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Mg.enqueueReplaceState(e,e.state,null),Eg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308);}var Rg=[],Sg=0,Tg=null,Ug=0,Vg=[],Wg=0,Xg=null,Yg=1,Zg="";function $g(a,b){Rg[Sg++]=Ug;Rg[Sg++]=Tg;Tg=a;Ug=b;}function ah(a,b,c){Vg[Wg++]=Yg;Vg[Wg++]=Zg;Vg[Wg++]=Xg;Xg=a;var d=Yg;a=Zg;var e=32-nc(d)-1;d&=~(1<<e);c+=1;var f=32-nc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;Yg=1<<32-nc(b)+e|c<<e|d;Zg=f+a;}else Yg=1<<f|c<<e|d,Zg=a;}function bh(a){null!==a.return&&($g(a,1),ah(a,1,0));}function ch(a){for(;a===Tg;){Tg=Rg[--Sg],Rg[Sg]=null,Ug=Rg[--Sg],Rg[Sg]=null;}for(;a===Xg;){Xg=Vg[--Wg],Vg[Wg]=null,Zg=Vg[--Wg],Vg[Wg]=null,Yg=Vg[--Wg],Vg[Wg]=null;}}var dh=null,eh=null,I=!1,fh=null;function gh(a,b){var c=hh(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c);}function ih(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,dh=a,eh=Kf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,dh=a,eh=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==Xg?{id:Yg,overflow:Zg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=hh(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,dh=a,eh=null,!0):!1;default:return !1;}}function jh(a){return 0!==(a.mode&1)&&0===(a.flags&128);}function kh(a){if(I){var b=eh;if(b){var c=b;if(!ih(a,b)){if(jh(a))throw Error(p(418));b=Kf(c.nextSibling);var d=dh;b&&ih(a,b)?gh(d,c):(a.flags=a.flags&-4097|2,I=!1,dh=a);}}else {if(jh(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;dh=a;}}}function lh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;){a=a.return;}dh=a;}function mh(a){if(a!==dh)return !1;if(!I)return lh(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Df(a.type,a.memoizedProps));if(b&&(b=eh)){if(jh(a)){for(a=eh;a;){a=Kf(a.nextSibling);}throw Error(p(418));}for(;b;){gh(a,b),b=Kf(b.nextSibling);}}lh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){eh=Kf(a.nextSibling);break a;}b--;}else "$"!==c&&"$!"!==c&&"$?"!==c||b++;}a=a.nextSibling;}eh=null;}}else eh=dh?Kf(a.stateNode.nextSibling):null;return !0;}function nh(){eh=dh=null;I=!1;}function oh(a){null===fh?fh=[a]:fh.push(a);}function ph(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==_typeof(a)){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode;}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function b(a){var b=e.refs;b===Hg&&(b=e.refs={});null===a?delete b[f]:b[f]=a;};b._stringRef=f;return b;}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a;}function qh(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function rh(a){var b=a._init;return b(a._payload);}function sh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c);}}function c(c,d){if(!a)return null;for(;null!==d;){b(c,d),d=d.sibling;}return null;}function d(a,b){for(a=new Map();null!==b;){null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;}return a;}function e(a,b){a=th(a,b);a.index=0;a.sibling=null;return a;}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c;}function g(b){a&&null===b.alternate&&(b.flags|=2);return b;}function h(a,b,c,d){if(null===b||6!==b.tag)return b=uh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b;}function k(a,b,c,d){var f=c.type;if(f===wa)return n(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===_typeof(f)&&null!==f&&f.$$typeof===Ga&&rh(f)===b.type))return d=e(b,c.props),d.ref=ph(a,b,c),d.return=a,d;d=vh(c.type,c.key,c.props,null,a.mode,d);d.ref=ph(a,b,c);d.return=a;return d;}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=wh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b;}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=xh(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b;}function u(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=uh(""+b,a.mode,c),b.return=a,b;if("object"===_typeof(b)&&null!==b){switch(b.$$typeof){case ua:return c=vh(b.type,b.key,b.props,null,a.mode,c),c.ref=ph(a,null,b),c.return=a,c;case va:return b=wh(b,a.mode,c),b.return=a,b;case Ga:var d=b._init;return u(a,d(b._payload),c);}if(db(b)||Ja(b))return b=xh(b,a.mode,c,null),b.return=a,b;qh(a,b);}return null;}function q(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===_typeof(c)&&null!==c){switch(c.$$typeof){case ua:return c.key===e?k(a,b,c,d):null;case va:return c.key===e?l(a,b,c,d):null;case Ga:return e=c._init,q(a,b,e(c._payload),d);}if(db(c)||Ja(c))return null!==e?null:n(a,b,c,d,null);qh(a,c);}return null;}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===_typeof(d)&&null!==d){switch(d.$$typeof){case ua:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case va:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ga:var f=d._init;return y(a,b,c,f(d._payload),e);}if(db(d)||Ja(d))return a=a.get(c)||null,n(b,a,d,e,null);qh(b,d);}return null;}function m(e,g,h,k){for(var l=null,n=null,r=g,m=g=0,x=null;null!==r&&m<h.length;m++){r.index>m?(x=r,r=null):x=r.sibling;var v=q(e,r,h[m],k);if(null===v){null===r&&(r=x);break;}a&&r&&null===v.alternate&&b(e,r);g=f(v,g,m);null===n?l=v:n.sibling=v;n=v;r=x;}if(m===h.length)return c(e,r),I&&$g(e,m),l;if(null===r){for(;m<h.length;m++){r=u(e,h[m],k),null!==r&&(g=f(r,g,m),null===n?l=r:n.sibling=r,n=r);}I&&$g(e,m);return l;}for(r=d(e,r);m<h.length;m++){x=y(r,e,m,h[m],k),null!==x&&(a&&null!==x.alternate&&r.delete(null===x.key?m:x.key),g=f(x,g,m),null===n?l=x:n.sibling=x,n=x);}a&&r.forEach(function(a){return b(e,a);});I&&$g(e,m);return l;}function w(e,g,h,k){var l=Ja(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var n=l=null,m=g,r=g=0,x=null,v=h.next();null!==m&&!v.done;r++,v=h.next()){m.index>r?(x=m,m=null):x=m.sibling;var w=q(e,m,v.value,k);if(null===w){null===m&&(m=x);break;}a&&m&&null===w.alternate&&b(e,m);g=f(w,g,r);null===n?l=w:n.sibling=w;n=w;m=x;}if(v.done)return c(e,m),I&&$g(e,r),l;if(null===m){for(;!v.done;r++,v=h.next()){v=u(e,v.value,k),null!==v&&(g=f(v,g,r),null===n?l=v:n.sibling=v,n=v);}I&&$g(e,r);return l;}for(m=d(e,m);!v.done;r++,v=h.next()){v=y(m,e,r,v.value,k),null!==v&&(a&&null!==v.alternate&&m.delete(null===v.key?r:v.key),g=f(v,g,r),null===n?l=v:n.sibling=v,n=v);}a&&m.forEach(function(a){return b(e,a);});I&&$g(e,r);return l;}function J(a,d,f,h){"object"===_typeof(f)&&null!==f&&f.type===wa&&null===f.key&&(f=f.props.children);if("object"===_typeof(f)&&null!==f){switch(f.$$typeof){case ua:a:{for(var k=f.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===wa){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a;}}else if(l.elementType===k||"object"===_typeof(k)&&null!==k&&k.$$typeof===Ga&&rh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=ph(a,l,f);d.return=a;a=d;break a;}c(a,l);break;}else b(a,l);l=l.sibling;}f.type===wa?(d=xh(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=vh(f.type,f.key,f.props,null,a.mode,h),h.ref=ph(a,d,f),h.return=a,a=h);}return g(a);case va:a:{for(l=f.key;null!==d;){if(d.key===l){if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a;}else {c(a,d);break;}}else b(a,d);d=d.sibling;}d=wh(f,a.mode,h);d.return=a;a=d;}return g(a);case Ga:return l=f._init,J(a,d,l(f._payload),h);}if(db(f))return m(a,d,f,h);if(Ja(f))return w(a,d,f,h);qh(a,f);}return "string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=uh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d);}return J;}var yh=sh(!0),zh=sh(!1),Ah={},Bh=Tf(Ah),Ch=Tf(Ah),Dh=Tf(Ah);function Eh(a){if(a===Ah)throw Error(p(174));return a;}function Fh(a,b){G(Dh,b);G(Ch,a);G(Bh,Ah);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:kb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=kb(b,a);}E(Bh);G(Bh,b);}function Gh(){E(Bh);E(Ch);E(Dh);}function Hh(a){Eh(Dh.current);var b=Eh(Bh.current);var c=kb(b,a.type);b!==c&&(G(Ch,a),G(Bh,c));}function Ih(a){Ch.current===a&&(E(Bh),E(Ch));}var K=Tf(0);function Jh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b;}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b;}else if(null!==b.child){b.child.return=b;b=b.child;continue;}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return;}b.sibling.return=b.return;b=b.sibling;}return null;}var Kh=[];function Lh(){for(var a=0;a<Kh.length;a++){Kh[a]._workInProgressVersionPrimary=null;}Kh.length=0;}var Mh=ta.ReactCurrentDispatcher,Nh=ta.ReactCurrentBatchConfig,Oh=0,L=null,M=null,N=null,Ph=!1,Qh=!1,Rh=0,Sh=0;function O(){throw Error(p(321));}function Th(a,b){if(null===b)return !1;for(var c=0;c<b.length&&c<a.length;c++){if(!Ge(a[c],b[c]))return !1;}return !0;}function Uh(a,b,c,d,e,f){Oh=f;L=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Mh.current=null===a||null===a.memoizedState?Vh:Wh;a=c(d,e);if(Qh){f=0;do{Qh=!1;Rh=0;if(25<=f)throw Error(p(301));f+=1;N=M=null;b.updateQueue=null;Mh.current=Xh;a=c(d,e);}while(Qh);}Mh.current=Yh;b=null!==M&&null!==M.next;Oh=0;N=M=L=null;Ph=!1;if(b)throw Error(p(300));return a;}function Zh(){var a=0!==Rh;Rh=0;return a;}function $h(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===N?L.memoizedState=N=a:N=N.next=a;return N;}function ai(){if(null===M){var a=L.alternate;a=null!==a?a.memoizedState:null;}else a=M.next;var b=null===N?L.memoizedState:N.next;if(null!==b)N=b,M=a;else {if(null===a)throw Error(p(310));M=a;a={memoizedState:M.memoizedState,baseState:M.baseState,baseQueue:M.baseQueue,queue:M.queue,next:null};null===N?L.memoizedState=N=a:N=N.next=a;}return N;}function bi(a,b){return "function"===typeof b?b(a):b;}function ci(a){var b=ai(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=M,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g;}d.baseQueue=e=f;c.pending=null;}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var n=l.lane;if((Oh&n)===n)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else {var u={lane:n,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===k?(h=k=u,g=d):k=k.next=u;L.lanes|=n;Fg|=n;}l=l.next;}while(null!==l&&l!==f);null===k?g=d:k.next=h;Ge(d,b.memoizedState)||(tg=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d;}a=c.interleaved;if(null!==a){e=a;do{f=e.lane,L.lanes|=f,Fg|=f,e=e.next;}while(e!==a);}else null===e&&(c.lanes=0);return [b.memoizedState,c.dispatch];}function di(a){var b=ai(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do{f=a(f,g.action),g=g.next;}while(g!==e);Ge(f,b.memoizedState)||(tg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f;}return [f,d];}function ei(){}function fi(a,b){var c=L,d=ai(),e=b(),f=!Ge(d.memoizedState,e);f&&(d.memoizedState=e,tg=!0);d=d.queue;gi(hi.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==N&&N.memoizedState.tag&1){c.flags|=2048;ii(9,ji.bind(null,c,d,e,b),void 0,null);if(null===P)throw Error(p(349));0!==(Oh&30)||ki(c,b,e);}return e;}function ki(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=L.updateQueue;null===b?(b={lastEffect:null,stores:null},L.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a));}function ji(a,b,c,d){b.value=c;b.getSnapshot=d;li(b)&&Lg(a,1,-1);}function hi(a,b,c){return c(function(){li(b)&&Lg(a,1,-1);});}function li(a){var b=a.getSnapshot;a=a.value;try{var c=b();return !Ge(a,c);}catch(d){return !0;}}function mi(a){var b=$h();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:bi,lastRenderedState:a};b.queue=a;a=a.dispatch=ni.bind(null,L,a);return [b.memoizedState,a];}function ii(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=L.updateQueue;null===b?(b={lastEffect:null,stores:null},L.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a;}function oi(){return ai().memoizedState;}function pi(a,b,c,d){var e=$h();L.flags|=a;e.memoizedState=ii(1|b,c,void 0,void 0===d?null:d);}function qi(a,b,c,d){var e=ai();d=void 0===d?null:d;var f=void 0;if(null!==M){var g=M.memoizedState;f=g.destroy;if(null!==d&&Th(d,g.deps)){e.memoizedState=ii(b,c,f,d);return;}}L.flags|=a;e.memoizedState=ii(1|b,c,f,d);}function ri(a,b){return pi(8390656,8,a,b);}function gi(a,b){return qi(2048,8,a,b);}function si(a,b){return qi(4,2,a,b);}function ti(a,b){return qi(4,4,a,b);}function ui(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null);};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null;};}function vi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return qi(4,4,ui.bind(null,b,a),c);}function wi(){}function xi(a,b){var c=ai();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Th(b,d[1]))return d[0];c.memoizedState=[a,b];return a;}function yi(a,b){var c=ai();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Th(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a;}function zi(a,b,c){if(0===(Oh&21))return a.baseState&&(a.baseState=!1,tg=!0),a.memoizedState=c;Ge(c,b)||(c=xc(),L.lanes|=c,Fg|=c,a.baseState=!0);return b;}function Ai(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Nh.transition;Nh.transition={};try{a(!1),b();}finally{C=c,Nh.transition=d;}}function Bi(){return ai().memoizedState;}function Ci(a,b,c){var d=Kg(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};Di(a)?Ei(b,c):(Fi(a,b,c),c=Jg(),a=Lg(a,d,c),null!==a&&Gi(a,b,d));}function ni(a,b,c){var d=Kg(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Di(a))Ei(b,e);else {Fi(a,b,e);var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(Ge(h,g))return;}catch(k){}finally{}c=Jg();a=Lg(a,d,c);null!==a&&Gi(a,b,d);}}function Di(a){var b=a.alternate;return a===L||null!==b&&b===L;}function Ei(a,b){Qh=Ph=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b;}function Fi(a,b,c){Bg(a)?(a=b.interleaved,null===a?(c.next=c,null===vg?vg=[b]:vg.push(b)):(c.next=a.next,a.next=c),b.interleaved=c):(a=b.pending,null===a?c.next=c:(c.next=a.next,a.next=c),b.pending=c);}function Gi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Bc(a,c);}}var Yh={readContext:ug,useCallback:O,useContext:O,useEffect:O,useImperativeHandle:O,useInsertionEffect:O,useLayoutEffect:O,useMemo:O,useReducer:O,useRef:O,useState:O,useDebugValue:O,useDeferredValue:O,useTransition:O,useMutableSource:O,useSyncExternalStore:O,useId:O,unstable_isNewReconciler:!1},Vh={readContext:ug,useCallback:function useCallback(a,b){$h().memoizedState=[a,void 0===b?null:b];return a;},useContext:ug,useEffect:ri,useImperativeHandle:function useImperativeHandle(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return pi(4194308,4,ui.bind(null,b,a),c);},useLayoutEffect:function useLayoutEffect(a,b){return pi(4194308,4,a,b);},useInsertionEffect:function useInsertionEffect(a,b){return pi(4,2,a,b);},useMemo:function useMemo(a,b){var c=$h();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a;},useReducer:function useReducer(a,b,c){var d=$h();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Ci.bind(null,L,a);return [d.memoizedState,a];},useRef:function useRef(a){var b=$h();a={current:a};return b.memoizedState=a;},useState:mi,useDebugValue:wi,useDeferredValue:function useDeferredValue(a){return $h().memoizedState=a;},useTransition:function useTransition(){var a=mi(!1),b=a[0];a=Ai.bind(null,a[1]);$h().memoizedState=a;return [b,a];},useMutableSource:function useMutableSource(){},useSyncExternalStore:function useSyncExternalStore(a,b,c){var d=L,e=$h();if(I){if(void 0===c)throw Error(p(407));c=c();}else {c=b();if(null===P)throw Error(p(349));0!==(Oh&30)||ki(d,b,c);}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;ri(hi.bind(null,d,f,a),[a]);d.flags|=2048;ii(9,ji.bind(null,d,f,c,b),void 0,null);return c;},useId:function useId(){var a=$h(),b=P.identifierPrefix;if(I){var c=Zg;var d=Yg;c=(d&~(1<<32-nc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Rh++;0<c&&(b+="H"+c.toString(32));b+=":";}else c=Sh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b;},unstable_isNewReconciler:!1},Wh={readContext:ug,useCallback:xi,useContext:ug,useEffect:gi,useImperativeHandle:vi,useInsertionEffect:si,useLayoutEffect:ti,useMemo:yi,useReducer:ci,useRef:oi,useState:function useState(){return ci(bi);},useDebugValue:wi,useDeferredValue:function useDeferredValue(a){var b=ai();return zi(b,M.memoizedState,a);},useTransition:function useTransition(){var a=ci(bi)[0],b=ai().memoizedState;return [a,b];},useMutableSource:ei,useSyncExternalStore:fi,useId:Bi,unstable_isNewReconciler:!1},Xh={readContext:ug,useCallback:xi,useContext:ug,useEffect:gi,useImperativeHandle:vi,useInsertionEffect:si,useLayoutEffect:ti,useMemo:yi,useReducer:di,useRef:oi,useState:function useState(){return di(bi);},useDebugValue:wi,useDeferredValue:function useDeferredValue(a){var b=ai();return null===M?b.memoizedState=a:zi(b,M.memoizedState,a);},useTransition:function useTransition(){var a=di(bi)[0],b=ai().memoizedState;return [a,b];},useMutableSource:ei,useSyncExternalStore:fi,useId:Bi,unstable_isNewReconciler:!1};function Hi(a,b){try{var c="",d=b;do{c+=Oa(d),d=d.return;}while(d);var e=c;}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack;}return {value:a,source:b,stack:e};}function Ii(a,b){try{console.error(b.value);}catch(c){setTimeout(function(){throw c;});}}var Ji="function"===typeof WeakMap?WeakMap:Map;function Ki(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Li||(Li=!0,Mi=d);Ii(a,b);};return c;}function Ni(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e);};c.callback=function(){Ii(a,b);};}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Ii(a,b);"function"!==typeof d&&(null===Oi?Oi=new Set([this]):Oi.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""});});return c;}function Pi(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ji();var e=new Set();d.set(b,e);}else e=d.get(b),void 0===e&&(e=new Set(),d.set(b,e));e.has(c)||(e.add(c),a=Qi.bind(null,a,b,c),b.then(a,a));}function Ri(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return;}while(null!==a);return null;}function Si(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=zg(-1,1),b.tag=2,Ag(c,b))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a;}var Ti,Ui,Vi,Wi;Ti=function Ti(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue;}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;}c.sibling.return=c.return;c=c.sibling;}};Ui=function Ui(){};Vi=function Vi(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Eh(Bh.current);var f=null;switch(c){case"input":e=Xa(a,e);d=Xa(a,d);f=[];break;case"select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case"textarea":e=fb(a,e);d=fb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Af);}tb(c,d);var g;c=null;for(l in e){if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h){h.hasOwnProperty(g)&&(c||(c={}),c[g]="");}}else "dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));}for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l){if(h){for(g in h){!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");}for(g in k){k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g]);}}else c||(f||(f=[]),f.push(l,c)),c=k;}else "dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k));}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4;}};Wi=function Wi(a,b,c,d){c!==d&&(b.flags|=4);};function Xi(a,b){if(!I)switch(a.tailMode){case"hidden":b=a.tail;for(var c=null;null!==b;){null!==b.alternate&&(c=b),b=b.sibling;}null===c?a.tail=null:c.sibling=null;break;case"collapsed":c=a.tail;for(var d=null;null!==c;){null!==c.alternate&&(d=c),c=c.sibling;}null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null;}}function Q(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;){c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;}else for(e=a.child;null!==e;){c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;}a.subtreeFlags|=d;a.childLanes=c;return b;}function Yi(a,b,c){var d=b.pendingProps;ch(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Q(b),null;case 1:return Yf(b.type)&&Zf(),Q(b),null;case 3:d=b.stateNode;Gh();E(Vf);E(H);Lh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)mh(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==fh&&(Zi(fh),fh=null));Ui(a,b);Q(b);return null;case 5:Ih(b);var e=Eh(Dh.current);c=b.type;if(null!==a&&null!=b.stateNode)Vi(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else {if(!d){if(null===b.stateNode)throw Error(p(166));Q(b);return null;}a=Eh(Bh.current);if(mh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Nf]=b;d[Of]=f;a=0!==(b.mode&1);switch(c){case"dialog":D("cancel",d);D("close",d);break;case"iframe":case"object":case"embed":D("load",d);break;case"video":case"audio":for(e=0;e<kf.length;e++){D(kf[e],d);}break;case"source":D("error",d);break;case"img":case"image":case"link":D("error",d);D("load",d);break;case"details":D("toggle",d);break;case"input":Ya(d,f);D("invalid",d);break;case"select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case"textarea":gb(d,f),D("invalid",d);}tb(c,f);e=null;for(var g in f){if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&zf(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&zf(d.textContent,h,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d);}}switch(c){case"input":Ua(d);cb(d,f,!0);break;case"textarea":Ua(d);ib(d);break;case"select":case"option":break;default:"function"===typeof f.onClick&&(d.onclick=Af);}d=e;b.updateQueue=d;null!==d&&(b.flags|=4);}else {g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=jb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Nf]=b;a[Of]=d;Ti(a,b,!1,!1);b.stateNode=a;a:{g=ub(c,d);switch(c){case"dialog":D("cancel",a);D("close",a);e=d;break;case"iframe":case"object":case"embed":D("load",a);e=d;break;case"video":case"audio":for(e=0;e<kf.length;e++){D(kf[e],a);}e=d;break;case"source":D("error",a);e=d;break;case"img":case"image":case"link":D("error",a);D("load",a);e=d;break;case"details":D("toggle",a);e=d;break;case"input":Ya(a,d);e=Xa(a,d);D("invalid",a);break;case"option":e=d;break;case"select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case"textarea":gb(a,d);e=fb(a,d);D("invalid",a);break;default:e=d;}tb(c,e);h=e;for(f in h){if(h.hasOwnProperty(f)){var k=h[f];"style"===f?rb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&mb(a,k)):"children"===f?"string"===typeof k?("textarea"!==c||""!==k)&&nb(a,k):"number"===typeof k&&nb(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&sa(a,f,k,g));}}switch(c){case"input":Ua(a);cb(a,d,!1);break;case"textarea":Ua(a);ib(a);break;case"option":null!=d.value&&a.setAttribute("value",""+Ra(d.value));break;case"select":a.multiple=!!d.multiple;f=d.value;null!=f?eb(a,!!d.multiple,f,!1):null!=d.defaultValue&&eb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof e.onClick&&(a.onclick=Af);}switch(c){case"button":case"input":case"select":case"textarea":d=!!d.autoFocus;break a;case"img":d=!0;break a;default:d=!1;}}d&&(b.flags|=4);}null!==b.ref&&(b.flags|=512,b.flags|=2097152);}Q(b);return null;case 6:if(a&&null!=b.stateNode)Wi(a,b,a.memoizedProps,d);else {if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Eh(Dh.current);Eh(Bh.current);if(mh(b)){d=b.stateNode;c=b.memoizedProps;d[Nf]=b;if(f=d.nodeValue!==c)if(a=dh,null!==a)switch(a.tag){case 3:zf(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&zf(d.nodeValue,c,0!==(a.mode&1));}f&&(b.flags|=4);}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Nf]=b,b.stateNode=d;}Q(b);return null;case 13:E(K);d=b.memoizedState;if(I&&null!==eh&&0!==(b.mode&1)&&0===(b.flags&128)){for(d=eh;d;){d=Kf(d.nextSibling);}nh();b.flags|=98560;return b;}if(null!==d&&null!==d.dehydrated){d=mh(b);if(null===a){if(!d)throw Error(p(318));d=b.memoizedState;d=null!==d?d.dehydrated:null;if(!d)throw Error(p(317));d[Nf]=b;}else nh(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;Q(b);return null;}null!==fh&&(Zi(fh),fh=null);if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;c=!1;null===a?mh(b):c=null!==a.memoizedState;d!==c&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(K.current&1)?0===R&&(R=3):$i()));null!==b.updateQueue&&(b.flags|=4);Q(b);return null;case 4:return Gh(),Ui(a,b),null===a&&rf(b.stateNode.containerInfo),Q(b),null;case 10:return qg(b.type._context),Q(b),null;case 17:return Yf(b.type)&&Zf(),Q(b),null;case 19:E(K);f=b.memoizedState;if(null===f)return Q(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g){if(d)Xi(f,!1);else {if(0!==R||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Jh(a);if(null!==g){b.flags|=128;Xi(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;){f=c,a=d,f.flags&=14680066,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;}G(K,K.current&1|2);return b.child;}a=a.sibling;}null!==f.tail&&B()>aj&&(b.flags|=128,d=!0,Xi(f,!1),b.lanes=4194304);}}else {if(!d)if(a=Jh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Xi(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return Q(b),null;}else 2*B()-f.renderingStartTime>aj&&1073741824!==c&&(b.flags|=128,d=!0,Xi(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g);}if(null!==f.tail)return b=f.tail,f.rendering=b,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=K.current,G(K,d?c&1|2:c&1),b;Q(b);return null;case 22:case 23:return bj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(cj&1073741824)&&(Q(b),b.subtreeFlags&6&&(b.flags|=8192)):Q(b),null;case 24:return null;case 25:return null;}throw Error(p(156,b.tag));}var dj=ta.ReactCurrentOwner,tg=!1;function ej(a,b,c,d){b.child=null===a?zh(b,null,c,d):yh(b,a.child,c,d);}function fj(a,b,c,d,e){c=c.render;var f=b.ref;sg(b,e);d=Uh(a,b,c,d,f,e);c=Zh();if(null!==a&&!tg)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,gj(a,b,e);I&&c&&bh(b);b.flags|=1;ej(a,b,d,e);return b.child;}function hj(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!ij(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,jj(a,b,f,d,e);a=vh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a;}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:He;if(c(g,d)&&a.ref===b.ref)return gj(a,b,e);}b.flags|=1;a=th(f,d);a.ref=b.ref;a.return=b;return b.child=a;}function jj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(He(f,d)&&a.ref===b.ref)if(tg=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(tg=!0);else return b.lanes=a.lanes,gj(a,b,e);}return kj(a,b,c,d,e);}function lj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode){if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(mj,cj),cj|=c;else if(0!==(c&1073741824))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},d=null!==f?f.baseLanes:c,G(mj,cj),cj|=d;else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(mj,cj),cj|=a,null;}else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(mj,cj),cj|=d;ej(a,b,e,c);return b.child;}function nj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152;}function kj(a,b,c,d,e){var f=Yf(c)?Wf:H.current;f=Xf(b,f);sg(b,e);c=Uh(a,b,c,d,f,e);d=Zh();if(null!==a&&!tg)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,gj(a,b,e);I&&d&&bh(b);b.flags|=1;ej(a,b,c,e);return b.child;}function oj(a,b,c,d,e){if(Yf(c)){var f=!0;bg(b);}else f=!1;sg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Og(b,c,d),Qg(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===_typeof(l)&&null!==l?l=ug(l):(l=Yf(c)?Wf:H.current,l=Xf(b,l));var n=c.getDerivedStateFromProps,u="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;u||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Pg(b,g,d,l);wg=!1;var q=b.memoizedState;g.state=q;Eg(b,d,g,e);k=b.memoizedState;h!==d||q!==k||Vf.current||wg?("function"===typeof n&&(Ig(b,c,n,d),k=b.memoizedState),(h=wg||Ng(b,c,h,d,q,k,l))?(u||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1);}else {g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:kg(b.type,h);g.props=l;u=b.pendingProps;q=g.context;k=c.contextType;"object"===_typeof(k)&&null!==k?k=ug(k):(k=Yf(c)?Wf:H.current,k=Xf(b,k));var y=c.getDerivedStateFromProps;(n="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==u||q!==k)&&Pg(b,g,d,k);wg=!1;q=b.memoizedState;g.state=q;Eg(b,d,g,e);var m=b.memoizedState;h!==u||q!==m||Vf.current||wg?("function"===typeof y&&(Ig(b,c,y,d),m=b.memoizedState),(l=wg||Ng(b,c,l,d,q,m,k)||!1)?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,m,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,m,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=m),g.props=d,g.state=m,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=1024),d=!1);}return pj(a,b,c,d,f,e);}function pj(a,b,c,d,e,f){nj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&cg(b,c,!1),gj(a,b,f);d=b.stateNode;dj.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=yh(b,a.child,null,f),b.child=yh(b,null,h,f)):ej(a,b,h,f);b.memoizedState=d.state;e&&cg(b,c,!0);return b.child;}function qj(a){var b=a.stateNode;b.pendingContext?$f(a,b.pendingContext,b.pendingContext!==b.context):b.context&&$f(a,b.context,!1);Fh(a,b.containerInfo);}function rj(a,b,c,d,e){nh();oh(e);b.flags|=256;ej(a,b,c,d);return b.child;}var sj={dehydrated:null,treeContext:null,retryLane:0};function tj(a){return {baseLanes:a,cachePool:null,transitions:null};}function uj(a,b){return {baseLanes:a.baseLanes|b,cachePool:null,transitions:a.transitions};}function vj(a,b,c){var d=b.pendingProps,e=K.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(K,e&1);if(null===a){kh(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;e=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,e={mode:"hidden",children:e},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=e):f=wj(e,d,0,null),a=xh(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=tj(c),b.memoizedState=sj,a):xj(b,e);}e=a.memoizedState;if(null!==e){h=e.dehydrated;if(null!==h){if(g){if(b.flags&256)return b.flags&=-257,yj(a,b,c,Error(p(422)));if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=wj({mode:"visible",children:d.children},e,0,null);f=xh(f,e,c,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&yh(b,a.child,null,c);b.child.memoizedState=tj(c);b.memoizedState=sj;return f;}if(0===(b.mode&1))b=yj(a,b,c,null);else if("$!"===h.data)b=yj(a,b,c,Error(p(419)));else if(d=0!==(c&a.childLanes),tg||d){d=P;if(null!==d){switch(c&-c){case 4:f=2;break;case 16:f=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:f=32;break;case 536870912:f=268435456;break;default:f=0;}d=0!==(f&(d.suspendedLanes|c))?0:f;0!==d&&d!==e.retryLane&&(e.retryLane=d,Lg(a,d,-1));}$i();b=yj(a,b,c,Error(p(421)));}else "$?"===h.data?(b.flags|=128,b.child=a.child,b=zj.bind(null,a),h._reactRetry=b,b=null):(c=e.treeContext,eh=Kf(h.nextSibling),dh=b,I=!0,fh=null,null!==c&&(Vg[Wg++]=Yg,Vg[Wg++]=Zg,Vg[Wg++]=Xg,Yg=c.id,Zg=c.overflow,Xg=b),b=xj(b,b.pendingProps.children),b.flags|=4096);return b;}if(f)return d=Aj(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?tj(c):uj(e,c),f.childLanes=a.childLanes&~c,b.memoizedState=sj,d;c=Bj(a,b,d.children,c);b.memoizedState=null;return c;}if(f)return d=Aj(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?tj(c):uj(e,c),f.childLanes=a.childLanes&~c,b.memoizedState=sj,d;c=Bj(a,b,d.children,c);b.memoizedState=null;return c;}function xj(a,b){b=wj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b;}function Bj(a,b,c,d){var e=a.child;a=e.sibling;c=th(e,{mode:"visible",children:c});0===(b.mode&1)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(d=b.deletions,null===d?(b.deletions=[a],b.flags|=16):d.push(a));return b.child=c;}function Aj(a,b,c,d,e){var f=b.mode;a=a.child;var g=a.sibling,h={mode:"hidden",children:c};0===(f&1)&&b.child!==a?(c=b.child,c.childLanes=0,c.pendingProps=h,b.deletions=null):(c=th(a,h),c.subtreeFlags=a.subtreeFlags&14680064);null!==g?d=th(g,d):(d=xh(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d;}function yj(a,b,c,d){null!==d&&oh(d);yh(b,a.child,null,c);a=xj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a;}function Cj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);rg(a.return,b,c);}function Dj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e);}function Ej(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;ej(a,b,d.children,c);d=K.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else {if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&Cj(a,c,b);else if(19===a.tag)Cj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue;}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return;}a.sibling.return=a.return;a=a.sibling;}d&=1;}G(K,d);if(0===(b.mode&1))b.memoizedState=null;else switch(e){case"forwards":c=b.child;for(e=null;null!==c;){a=c.alternate,null!==a&&null===Jh(a)&&(e=c),c=c.sibling;}c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Dj(b,!1,e,c,f);break;case"backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Jh(a)){b.child=e;break;}a=e.sibling;e.sibling=c;c=e;e=a;}Dj(b,!0,c,null,f);break;case"together":Dj(b,!1,null,null,void 0);break;default:b.memoizedState=null;}return b.child;}function gj(a,b,c){null!==a&&(b.dependencies=a.dependencies);Fg|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=th(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;){a=a.sibling,c=c.sibling=th(a,a.pendingProps),c.return=b;}c.sibling=null;}return b.child;}function Fj(a,b,c){switch(b.tag){case 3:qj(b);nh();break;case 5:Hh(b);break;case 1:Yf(b.type)&&bg(b);break;case 4:Fh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(lg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(K,K.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return vj(a,b,c);G(K,K.current&1);a=gj(a,b,c);return null!==a?a.sibling:null;}G(K,K.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&128)){if(d)return Ej(a,b,c);b.flags|=128;}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(K,K.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,lj(a,b,c);}return gj(a,b,c);}function Gj(a,b){ch(b);switch(b.tag){case 1:return Yf(b.type)&&Zf(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Gh(),E(Vf),E(H),Lh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Ih(b),null;case 13:E(K);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));nh();}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(K),null;case 4:return Gh(),null;case 10:return qg(b.type._context),null;case 22:case 23:return bj(),null;case 24:return null;default:return null;}}var Hj=!1,S=!1,Ij="function"===typeof WeakSet?WeakSet:Set,T=null;function Jj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null);}catch(d){U(a,b,d);}else c.current=null;}function Kj(a,b,c){try{c();}catch(d){U(a,b,d);}}var Lj=!1;function Mj(a,b){Bf=cd;a=Le();if(Me(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType;}catch(Z){c=null;break a;}var g=0,h=-1,k=-1,l=0,n=0,u=a,q=null;b:for(;;){for(var y;;){u!==c||0!==e&&3!==u.nodeType||(h=g+e);u!==f||0!==d&&3!==u.nodeType||(k=g+d);3===u.nodeType&&(g+=u.nodeValue.length);if(null===(y=u.firstChild))break;q=u;u=y;}for(;;){if(u===a)break b;q===c&&++l===e&&(h=g);q===f&&++n===d&&(k=g);if(null!==(y=u.nextSibling))break;u=q;q=u.parentNode;}u=y;}c=-1===h||-1===k?null:{start:h,end:k};}else c=null;}c=c||{start:0,end:0};}else c=null;Cf={focusedElem:a,selectionRange:c};cd=!1;for(T=b;null!==T;){if(b=T,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,T=a;else for(;null!==T;){b=T;try{var m=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;case 1:if(null!==m){var w=m.memoizedProps,J=m.memoizedState,v=b.stateNode,x=v.getSnapshotBeforeUpdate(b.elementType===b.type?w:kg(b.type,w),J);v.__reactInternalSnapshotBeforeUpdate=x;}break;case 3:var r=b.stateNode.containerInfo;if(1===r.nodeType)r.textContent="";else if(9===r.nodeType){var F=r.body;null!=F&&(F.textContent="");}break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(Z){U(b,b.return,Z);}a=b.sibling;if(null!==a){a.return=b.return;T=a;break;}T=b.return;}}m=Lj;Lj=!1;return m;}function Nj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Kj(b,c,f);}e=e.next;}while(e!==d);}}function Oj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d();}c=c.next;}while(c!==b);}}function Pj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c;}"function"===typeof b?b(a):b.current=a;}}function Qj(a){var b=a.alternate;null!==b&&(a.alternate=null,Qj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Nf],delete b[Of],delete b[nf],delete b[Pf],delete b[Qf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null;}function Rj(a){return 5===a.tag||3===a.tag||4===a.tag;}function Sj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Rj(a.return))return null;a=a.return;}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child;}if(!(a.flags&2))return a.stateNode;}}function Tj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Af));else if(4!==d&&(a=a.child,null!==a))for(Tj(a,b,c),a=a.sibling;null!==a;){Tj(a,b,c),a=a.sibling;}}function Uj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Uj(a,b,c),a=a.sibling;null!==a;){Uj(a,b,c),a=a.sibling;}}var V=null,Vj=!1;function Wj(a,b,c){for(c=c.child;null!==c;){Xj(a,b,c),c=c.sibling;}}function Xj(a,b,c){if(kc&&"function"===typeof kc.onCommitFiberUnmount)try{kc.onCommitFiberUnmount(jc,c);}catch(h){}switch(c.tag){case 5:S||Jj(c,b);case 6:var d=V,e=Vj;V=null;Wj(a,b,c);V=d;Vj=e;null!==V&&(Vj?(a=V,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):V.removeChild(c.stateNode));break;case 18:null!==V&&(Vj?(a=V,c=c.stateNode,8===a.nodeType?Jf(a.parentNode,c):1===a.nodeType&&Jf(a,c),ad(a)):Jf(V,c.stateNode));break;case 4:d=V;e=Vj;V=c.stateNode.containerInfo;Vj=!0;Wj(a,b,c);V=d;Vj=e;break;case 0:case 11:case 14:case 15:if(!S&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Kj(c,b,g):0!==(f&4)&&Kj(c,b,g));e=e.next;}while(e!==d);}Wj(a,b,c);break;case 1:if(!S&&(Jj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount();}catch(h){U(c,b,h);}Wj(a,b,c);break;case 21:Wj(a,b,c);break;case 22:c.mode&1?(S=(d=S)||null!==c.memoizedState,Wj(a,b,c),S=d):Wj(a,b,c);break;default:Wj(a,b,c);}}function Yj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ij());b.forEach(function(b){var d=Zj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d));});}}function ak(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:V=h.stateNode;Vj=!1;break a;case 3:V=h.stateNode.containerInfo;Vj=!0;break a;case 4:V=h.stateNode.containerInfo;Vj=!0;break a;}h=h.return;}if(null===V)throw Error(p(160));Xj(f,g,e);V=null;Vj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null;}catch(l){U(e,b,l);}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;){bk(b,a),b=b.sibling;}}function bk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ak(b,a);ck(a);if(d&4){try{Nj(3,a,a.return),Oj(3,a);}catch(m){U(a,a.return,m);}try{Nj(5,a,a.return);}catch(m){U(a,a.return,m);}}break;case 1:ak(b,a);ck(a);d&512&&null!==c&&Jj(c,c.return);break;case 5:ak(b,a);ck(a);d&512&&null!==c&&Jj(c,c.return);if(a.flags&32){var e=a.stateNode;try{nb(e,"");}catch(m){U(a,a.return,m);}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;a.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&Za(e,f);ub(h,g);var l=ub(h,f);for(g=0;g<k.length;g+=2){var n=k[g],u=k[g+1];"style"===n?rb(e,u):"dangerouslySetInnerHTML"===n?mb(e,u):"children"===n?nb(e,u):sa(e,n,u,l);}switch(h){case"input":$a(e,f);break;case"textarea":hb(e,f);break;case"select":var q=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?eb(e,!!f.multiple,y,!1):q!==!!f.multiple&&(null!=f.defaultValue?eb(e,!!f.multiple,f.defaultValue,!0):eb(e,!!f.multiple,f.multiple?[]:"",!1));}e[Of]=f;}catch(m){U(a,a.return,m);}}break;case 6:ak(b,a);ck(a);if(d&4){if(null===a.stateNode)throw Error(p(162));l=a.stateNode;n=a.memoizedProps;try{l.nodeValue=n;}catch(m){U(a,a.return,m);}}break;case 3:ak(b,a);ck(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{ad(b.containerInfo);}catch(m){U(a,a.return,m);}break;case 4:ak(b,a);ck(a);break;case 13:ak(b,a);ck(a);l=a.child;l.flags&8192&&null!==l.memoizedState&&(null===l.alternate||null===l.alternate.memoizedState)&&(dk=B());d&4&&Yj(a);break;case 22:l=null!==c&&null!==c.memoizedState;a.mode&1?(S=(n=S)||l,ak(b,a),S=n):ak(b,a);ck(a);if(d&8192){n=null!==a.memoizedState;a:for(u=null,q=a;;){if(5===q.tag){if(null===u){u=q;try{e=q.stateNode,n?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=qb("display",g));}catch(m){U(a,a.return,m);}}}else if(6===q.tag){if(null===u)try{q.stateNode.nodeValue=n?"":q.memoizedProps;}catch(m){U(a,a.return,m);}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue;}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;u===q&&(u=null);q=q.return;}u===q&&(u=null);q.sibling.return=q.return;q=q.sibling;}if(n&&!l&&0!==(a.mode&1))for(T=a,a=a.child;null!==a;){for(l=T=a;null!==T;){n=T;u=n.child;switch(n.tag){case 0:case 11:case 14:case 15:Nj(4,n,n.return);break;case 1:Jj(n,n.return);f=n.stateNode;if("function"===typeof f.componentWillUnmount){q=n;y=n.return;try{e=q,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount();}catch(m){U(q,y,m);}}break;case 5:Jj(n,n.return);break;case 22:if(null!==n.memoizedState){ek(l);continue;}}null!==u?(u.return=n,T=u):ek(l);}a=a.sibling;}}break;case 19:ak(b,a);ck(a);d&4&&Yj(a);break;case 21:break;default:ak(b,a),ck(a);}}function ck(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Rj(c)){var d=c;break a;}c=c.return;}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(nb(e,""),d.flags&=-33);var f=Sj(a);Uj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Sj(a);Tj(a,h,g);break;default:throw Error(p(161));}}catch(k){U(a,a.return,k);}a.flags&=-3;}b&4096&&(a.flags&=-4097);}function fk(a,b,c){T=a;gk(a);}function gk(a,b,c){for(var d=0!==(a.mode&1);null!==T;){var e=T,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Hj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||S;h=Hj;var l=S;Hj=g;if((S=k)&&!l)for(T=e;null!==T;){g=T,k=g.child,22===g.tag&&null!==g.memoizedState?hk(e):null!==k?(k.return=g,T=k):hk(e);}for(;null!==f;){T=f,gk(f),f=f.sibling;}T=e;Hj=h;S=l;}ik(a);}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,T=f):ik(a);}}function ik(a){for(;null!==T;){var b=T;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:S||Oj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!S)if(null===c)d.componentDidMount();else {var e=b.elementType===b.type?c.memoizedProps:kg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate);}var f=b.updateQueue;null!==f&&Gg(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=b.child.stateNode;break;case 1:c=b.child.stateNode;}Gg(b,g,c);}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case"button":case"input":case"select":case"textarea":k.autoFocus&&c.focus();break;case"img":k.src&&(c.src=k.src);}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var n=l.memoizedState;if(null!==n){var u=n.dehydrated;null!==u&&ad(u);}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(p(163));}S||b.flags&512&&Pj(b);}catch(q){U(b,b.return,q);}}if(b===a){T=null;break;}c=b.sibling;if(null!==c){c.return=b.return;T=c;break;}T=b.return;}}function ek(a){for(;null!==T;){var b=T;if(b===a){T=null;break;}var c=b.sibling;if(null!==c){c.return=b.return;T=c;break;}T=b.return;}}function hk(a){for(;null!==T;){var b=T;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Oj(4,b);}catch(k){U(b,c,k);}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount();}catch(k){U(b,e,k);}}var f=b.return;try{Pj(b);}catch(k){U(b,f,k);}break;case 5:var g=b.return;try{Pj(b);}catch(k){U(b,g,k);}}}catch(k){U(b,b.return,k);}if(b===a){T=null;break;}var h=b.sibling;if(null!==h){h.return=b.return;T=h;break;}T=b.return;}}var jk=Math.ceil,kk=ta.ReactCurrentDispatcher,lk=ta.ReactCurrentOwner,mk=ta.ReactCurrentBatchConfig,W=0,P=null,X=null,Y=0,cj=0,mj=Tf(0),R=0,nk=null,Fg=0,ok=0,pk=0,qk=null,rk=null,dk=0,aj=Infinity,sk=null,Li=!1,Mi=null,Oi=null,tk=!1,uk=null,vk=0,wk=0,xk=null,yk=-1,zk=0;function Jg(){return 0!==(W&6)?B():-1!==yk?yk:yk=B();}function Kg(a){if(0===(a.mode&1))return 1;if(0!==(W&2)&&0!==Y)return Y&-Y;if(null!==jg.transition)return 0===zk&&(zk=xc()),zk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:id(a.type);return a;}function Lg(a,b,c){if(50<wk)throw wk=0,xk=null,Error(p(185));var d=Ak(a,b);if(null===d)return null;zc(d,b,c);if(0===(W&2)||d!==P)d===P&&(0===(W&2)&&(ok|=b),4===R&&Bk(d,Y)),Ck(d,c),1===b&&0===W&&0===(a.mode&1)&&(aj=B()+500,eg&&ig());return d;}function Ak(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;){a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;}return 3===c.tag?c.stateNode:null;}function Bg(a){return (null!==P||null!==vg)&&0!==(a.mode&1)&&0===(W&2);}function Ck(a,b){var c=a.callbackNode;vc(a,b);var d=tc(a,a===P?Y:0);if(0===d)null!==c&&ac(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&ac(c);if(1===b)0===a.tag?hg(Dk.bind(null,a)):gg(Dk.bind(null,a)),If(function(){0===W&&ig();}),c=null;else {switch(Cc(d)){case 1:c=ec;break;case 4:c=fc;break;case 16:c=gc;break;case 536870912:c=ic;break;default:c=gc;}c=Ek(c,Fk.bind(null,a));}a.callbackPriority=b;a.callbackNode=c;}}function Fk(a,b){yk=-1;zk=0;if(0!==(W&6))throw Error(p(327));var c=a.callbackNode;if(Gk()&&a.callbackNode!==c)return null;var d=tc(a,a===P?Y:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Hk(a,d);else {b=d;var e=W;W|=2;var f=Ik();if(P!==a||Y!==b)sk=null,aj=B()+500,Jk(a,b);do{try{Kk();break;}catch(h){Lk(a,h);}}while(1);pg();kk.current=f;W=e;null!==X?b=0:(P=null,Y=0,b=R);}if(0!==b){2===b&&(e=wc(a),0!==e&&(d=e,b=Mk(a,e)));if(1===b)throw c=nk,Jk(a,0),Bk(a,d),Ck(a,B()),c;if(6===b)Bk(a,d);else {e=a.current.alternate;if(0===(d&30)&&!Nk(e)&&(b=Hk(a,d),2===b&&(f=wc(a),0!==f&&(d=f,b=Mk(a,f))),1===b))throw c=nk,Jk(a,0),Bk(a,d),Ck(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Ok(a,rk,sk);break;case 3:Bk(a,d);if((d&130023424)===d&&(b=dk+500-B(),10<b)){if(0!==tc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){Jg();a.pingedLanes|=a.suspendedLanes&e;break;}a.timeoutHandle=Ef(Ok.bind(null,a,rk,sk),b);break;}Ok(a,rk,sk);break;case 4:Bk(a,d);if((d&4194240)===d)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-nc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f;}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*jk(d/1960))-d;if(10<d){a.timeoutHandle=Ef(Ok.bind(null,a,rk,sk),d);break;}Ok(a,rk,sk);break;case 5:Ok(a,rk,sk);break;default:throw Error(p(329));}}}Ck(a,B());return a.callbackNode===c?Fk.bind(null,a):null;}function Mk(a,b){var c=qk;a.current.memoizedState.isDehydrated&&(Jk(a,b).flags|=256);a=Hk(a,b);2!==a&&(b=rk,rk=c,null!==b&&Zi(b));return a;}function Zi(a){null===rk?rk=a:rk.push.apply(rk,a);}function Nk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!Ge(f(),e))return !1;}catch(g){return !1;}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else {if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return !0;b=b.return;}b.sibling.return=b.return;b=b.sibling;}}return !0;}function Bk(a,b){b&=~pk;b&=~ok;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-nc(b),d=1<<c;a[c]=-1;b&=~d;}}function Dk(a){if(0!==(W&6))throw Error(p(327));Gk();var b=tc(a,0);if(0===(b&1))return Ck(a,B()),null;var c=Hk(a,b);if(0!==a.tag&&2===c){var d=wc(a);0!==d&&(b=d,c=Mk(a,d));}if(1===c)throw c=nk,Jk(a,0),Bk(a,b),Ck(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Ok(a,rk,sk);Ck(a,B());return null;}function Pk(a,b){var c=W;W|=1;try{return a(b);}finally{W=c,0===W&&(aj=B()+500,eg&&ig());}}function Qk(a){null!==uk&&0===uk.tag&&0===(W&6)&&Gk();var b=W;W|=1;var c=mk.transition,d=C;try{if(mk.transition=null,C=1,a)return a();}finally{C=d,mk.transition=c,W=b,0===(W&6)&&ig();}}function bj(){cj=mj.current;E(mj);}function Jk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Ff(c));if(null!==X)for(c=X.return;null!==c;){var d=c;ch(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Zf();break;case 3:Gh();E(Vf);E(H);Lh();break;case 5:Ih(d);break;case 4:Gh();break;case 13:E(K);break;case 19:E(K);break;case 10:qg(d.type._context);break;case 22:case 23:bj();}c=c.return;}P=a;X=a=th(a.current,null);Y=cj=b;R=0;nk=null;pk=ok=Fg=0;rk=qk=null;if(null!==vg){for(b=0;b<vg.length;b++){if(c=vg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g;}c.pending=d;}}vg=null;}return a;}function Lk(a,b){do{var c=X;try{pg();Mh.current=Yh;if(Ph){for(var d=L.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next;}Ph=!1;}Oh=0;N=M=L=null;Qh=!1;Rh=0;lk.current=null;if(null===c||null===c.return){R=1;nk=b;X=null;break;}a:{var f=a,g=c.return,h=c,k=b;b=Y;h.flags|=32768;if(null!==k&&"object"===_typeof(k)&&"function"===typeof k.then){var l=k,n=h,u=n.tag;if(0===(n.mode&1)&&(0===u||11===u||15===u)){var q=n.alternate;q?(n.updateQueue=q.updateQueue,n.memoizedState=q.memoizedState,n.lanes=q.lanes):(n.updateQueue=null,n.memoizedState=null);}var y=Ri(g);if(null!==y){y.flags&=-257;Si(y,g,h,f,b);y.mode&1&&Pi(f,l,b);b=y;k=l;var m=b.updateQueue;if(null===m){var w=new Set();w.add(k);b.updateQueue=w;}else m.add(k);break a;}else {if(0===(b&1)){Pi(f,l,b);$i();break a;}k=Error(p(426));}}else if(I&&h.mode&1){var J=Ri(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Si(J,g,h,f,b);oh(k);break a;}}f=k;4!==R&&(R=2);null===qk?qk=[f]:qk.push(f);k=Hi(k,h);h=g;do{switch(h.tag){case 3:h.flags|=65536;b&=-b;h.lanes|=b;var v=Ki(h,k,b);Dg(h,v);break a;case 1:f=k;var x=h.type,r=h.stateNode;if(0===(h.flags&128)&&("function"===typeof x.getDerivedStateFromError||null!==r&&"function"===typeof r.componentDidCatch&&(null===Oi||!Oi.has(r)))){h.flags|=65536;b&=-b;h.lanes|=b;var F=Ni(h,f,b);Dg(h,F);break a;}}h=h.return;}while(null!==h);}Rk(c);}catch(Z){b=Z;X===c&&null!==c&&(X=c=c.return);continue;}break;}while(1);}function Ik(){var a=kk.current;kk.current=Yh;return null===a?Yh:a;}function $i(){if(0===R||3===R||2===R)R=4;null===P||0===(Fg&268435455)&&0===(ok&268435455)||Bk(P,Y);}function Hk(a,b){var c=W;W|=2;var d=Ik();if(P!==a||Y!==b)sk=null,Jk(a,b);do{try{Sk();break;}catch(e){Lk(a,e);}}while(1);pg();W=c;kk.current=d;if(null!==X)throw Error(p(261));P=null;Y=0;return R;}function Sk(){for(;null!==X;){Tk(X);}}function Kk(){for(;null!==X&&!bc();){Tk(X);}}function Tk(a){var b=Uk(a.alternate,a,cj);a.memoizedProps=a.pendingProps;null===b?Rk(a):X=b;lk.current=null;}function Rk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Yi(c,b,cj),null!==c){X=c;return;}}else {c=Gj(c,b);if(null!==c){c.flags&=32767;X=c;return;}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else {R=6;X=null;return;}}b=b.sibling;if(null!==b){X=b;return;}X=b=a;}while(null!==b);0===R&&(R=5);}function Ok(a,b,c){var d=C,e=mk.transition;try{mk.transition=null,C=1,Vk(a,b,c,d);}finally{mk.transition=e,C=d;}return null;}function Vk(a,b,c,d){do{Gk();}while(null!==uk);if(0!==(W&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Ac(a,f);a===P&&(X=P=null,Y=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||tk||(tk=!0,Ek(gc,function(){Gk();return null;}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=mk.transition;mk.transition=null;var g=C;C=1;var h=W;W|=4;lk.current=null;Mj(a,c);bk(c,a);Ne(Cf);cd=!!Bf;Cf=Bf=null;a.current=c;fk(c);cc();W=h;C=g;mk.transition=f;}else a.current=c;tk&&(tk=!1,uk=a,vk=e);f=a.pendingLanes;0===f&&(Oi=null);lc(c.stateNode);Ck(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++){d(b[c]);}if(Li)throw Li=!1,a=Mi,Mi=null,a;0!==(vk&1)&&0!==a.tag&&Gk();f=a.pendingLanes;0!==(f&1)?a===xk?wk++:(wk=0,xk=a):wk=0;ig();return null;}function Gk(){if(null!==uk){var a=Cc(vk),b=mk.transition,c=C;try{mk.transition=null;C=16>a?16:a;if(null===uk)var d=!1;else {a=uk;uk=null;vk=0;if(0!==(W&6))throw Error(p(331));var e=W;W|=4;for(T=a.current;null!==T;){var f=T,g=f.child;if(0!==(T.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(T=l;null!==T;){var n=T;switch(n.tag){case 0:case 11:case 15:Nj(8,n,f);}var u=n.child;if(null!==u)u.return=n,T=u;else for(;null!==T;){n=T;var q=n.sibling,y=n.return;Qj(n);if(n===l){T=null;break;}if(null!==q){q.return=y;T=q;break;}T=y;}}}var m=f.alternate;if(null!==m){var w=m.child;if(null!==w){m.child=null;do{var J=w.sibling;w.sibling=null;w=J;}while(null!==w);}}T=f;}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,T=g;else b:for(;null!==T;){f=T;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Nj(9,f,f.return);}var v=f.sibling;if(null!==v){v.return=f.return;T=v;break b;}T=f.return;}}var x=a.current;for(T=x;null!==T;){g=T;var r=g.child;if(0!==(g.subtreeFlags&2064)&&null!==r)r.return=g,T=r;else b:for(g=x;null!==T;){h=T;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Oj(9,h);}}catch(Z){U(h,h.return,Z);}if(h===g){T=null;break b;}var F=h.sibling;if(null!==F){F.return=h.return;T=F;break b;}T=h.return;}}W=e;ig();if(kc&&"function"===typeof kc.onPostCommitFiberRoot)try{kc.onPostCommitFiberRoot(jc,a);}catch(Z){}d=!0;}return d;}finally{C=c,mk.transition=b;}}return !1;}function Wk(a,b,c){b=Hi(c,b);b=Ki(a,b,1);Ag(a,b);b=Jg();a=Ak(a,1);null!==a&&(zc(a,1,b),Ck(a,b));}function U(a,b,c){if(3===a.tag)Wk(a,a,c);else for(;null!==b;){if(3===b.tag){Wk(b,a,c);break;}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Oi||!Oi.has(d))){a=Hi(c,a);a=Ni(b,a,1);Ag(b,a);a=Jg();b=Ak(b,1);null!==b&&(zc(b,1,a),Ck(b,a));break;}}b=b.return;}}function Qi(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Jg();a.pingedLanes|=a.suspendedLanes&c;P===a&&(Y&c)===c&&(4===R||3===R&&(Y&130023424)===Y&&500>B()-dk?Jk(a,0):pk|=c);Ck(a,b);}function Xk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=rc,rc<<=1,0===(rc&130023424)&&(rc=4194304)));var c=Jg();a=Ak(a,b);null!==a&&(zc(a,b,c),Ck(a,c));}function zj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Xk(a,c);}function Zj(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Xk(a,c);}var Uk;Uk=function Uk(a,b,c){if(null!==a){if(a.memoizedProps!==b.pendingProps||Vf.current)tg=!0;else {if(0===(a.lanes&c)&&0===(b.flags&128))return tg=!1,Fj(a,b,c);tg=0!==(a.flags&131072)?!0:!1;}}else tg=!1,I&&0!==(b.flags&1048576)&&ah(b,Ug,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;var e=Xf(b,H.current);sg(b,c);e=Uh(null,b,d,a,e,c);var f=Zh();b.flags|=1;"object"===_typeof(e)&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=null,Yf(d)?(f=!0,bg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,xg(b),e.updater=Mg,b.stateNode=e,e._reactInternals=b,Qg(b,d,a,c),b=pj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&bh(b),ej(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Yk(d);a=kg(d,a);switch(e){case 0:b=kj(null,b,d,a,c);break a;case 1:b=oj(null,b,d,a,c);break a;case 11:b=fj(null,b,d,a,c);break a;case 14:b=hj(null,b,d,kg(d.type,a),c);break a;}throw Error(p(306,d,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),kj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),oj(a,b,d,e,c);case 3:a:{qj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;yg(a,b);Eg(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated){if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=f,b.memoizedState=f,b.flags&256){e=Error(p(423));b=rj(a,b,d,c,e);break a;}else if(d!==e){e=Error(p(424));b=rj(a,b,d,c,e);break a;}else for(eh=Kf(b.stateNode.containerInfo.firstChild),dh=b,I=!0,fh=null,c=zh(b,null,d,c),b.child=c;c;){c.flags=c.flags&-3|4096,c=c.sibling;}}else {nh();if(d===e){b=gj(a,b,c);break a;}ej(a,b,d,c);}b=b.child;}return b;case 5:return Hh(b),null===a&&kh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Df(d,e)?g=null:null!==f&&Df(d,f)&&(b.flags|=32),nj(a,b),ej(a,b,g,c),b.child;case 6:return null===a&&kh(b),null;case 13:return vj(a,b,c);case 4:return Fh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=yh(b,null,d,c):ej(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),fj(a,b,d,e,c);case 7:return ej(a,b,b.pendingProps,c),b.child;case 8:return ej(a,b,b.pendingProps.children,c),b.child;case 12:return ej(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;g=e.value;G(lg,d._currentValue);d._currentValue=g;if(null!==f)if(Ge(f.value,g)){if(f.children===e.children&&!Vf.current){b=gj(a,b,c);break a;}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=zg(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var n=l.pending;null===n?k.next=k:(k.next=n.next,n.next=k);l.pending=k;}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);rg(f.return,c,b);h.lanes|=c;break;}k=k.next;}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);rg(g,c,b);g=f.sibling;}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break;}f=g.sibling;if(null!==f){f.return=g.return;g=f;break;}g=g.return;}f=g;}ej(a,b,e.children,c);b=b.child;}return b;case 9:return e=b.type,d=b.pendingProps.children,sg(b,c),e=ug(e),d=d(e),b.flags|=1,ej(a,b,d,c),b.child;case 14:return d=b.type,e=kg(d,b.pendingProps),e=kg(d.type,e),hj(a,b,d,e,c);case 15:return jj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Yf(d)?(a=!0,bg(b)):a=!1,sg(b,c),Og(b,d,e),Qg(b,d,e,c),pj(null,b,d,!0,a,c);case 19:return Ej(a,b,c);case 22:return lj(a,b,c);}throw Error(p(156,b.tag));};function Ek(a,b){return $b(a,b);}function Zk(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null;}function hh(a,b,c,d){return new Zk(a,b,c,d);}function ij(a){a=a.prototype;return !(!a||!a.isReactComponent);}function Yk(a){if("function"===typeof a)return ij(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Ca)return 11;if(a===Fa)return 14;}return 2;}function th(a,b){var c=a.alternate;null===c?(c=hh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c;}function vh(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)ij(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case wa:return xh(c.children,e,f,b);case xa:g=8;e|=8;break;case za:return a=hh(12,c,b,e|2),a.elementType=za,a.lanes=f,a;case Da:return a=hh(13,c,b,e),a.elementType=Da,a.lanes=f,a;case Ea:return a=hh(19,c,b,e),a.elementType=Ea,a.lanes=f,a;case Ha:return wj(c,e,f,b);default:if("object"===_typeof(a)&&null!==a)switch(a.$$typeof){case Aa:g=10;break a;case Ba:g=9;break a;case Ca:g=11;break a;case Fa:g=14;break a;case Ga:g=16;d=null;break a;}throw Error(p(130,null==a?a:_typeof(a),""));}b=hh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b;}function xh(a,b,c,d){a=hh(7,a,d,b);a.lanes=c;return a;}function wj(a,b,c,d){a=hh(22,a,d,b);a.elementType=Ha;a.lanes=c;a.stateNode={};return a;}function uh(a,b,c){a=hh(6,a,null,b);a.lanes=c;return a;}function wh(a,b,c){b=hh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b;}function $k(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=yc(0);this.expirationTimes=yc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=yc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=null;}function al(a,b,c,d,e,f,g,h,k){a=new $k(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=hh(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};xg(f);return a;}function bl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return {$$typeof:va,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c};}function cl(a){if(!a)return Uf;a=a._reactInternals;a:{if(Ub(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Yf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a;}}b=b.return;}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Yf(c))return ag(a,c,b);}return b;}function dl(a,b,c,d,e,f,g,h,k){a=al(c,d,!0,a,e,f,g,h,k);a.context=cl(null);c=a.current;d=Jg();e=Kg(c);f=zg(d,e);f.callback=void 0!==b&&null!==b?b:null;Ag(c,f);a.current.lanes=e;zc(a,e,d);Ck(a,d);return a;}function el(a,b,c,d){var e=b.current,f=Jg(),g=Kg(e);c=cl(c);null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);Ag(e,b);a=Lg(e,g,f);null!==a&&Cg(a,e,g);return g;}function fl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode;}}function gl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b;}}function hl(a,b){gl(a,b);(a=a.alternate)&&gl(a,b);}function il(){return null;}var jl="function"===typeof reportError?reportError:function(a){console.error(a);};function kl(a){this._internalRoot=a;}ll.prototype.render=kl.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));el(a,b,null,null);};ll.prototype.unmount=kl.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Qk(function(){el(null,a,null,null);});b[tf]=null;}};function ll(a){this._internalRoot=a;}ll.prototype.unstable_scheduleHydration=function(a){if(a){var b=Gc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Pc.length&&0!==b&&b<Pc[c].priority;c++){}Pc.splice(c,0,a);0===c&&Uc(a);}};function ml(a){return !(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType);}function nl(a){return !(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue));}function ol(){}function pl(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function d(){var a=fl(g);f.call(a);};}var g=dl(b,d,a,0,null,!1,!1,"",ol);a._reactRootContainer=g;a[tf]=g.current;rf(8===a.nodeType?a.parentNode:a);Qk();return g;}for(;e=a.lastChild;){a.removeChild(e);}if("function"===typeof d){var h=d;d=function d(){var a=fl(k);h.call(a);};}var k=al(a,0,!1,null,null,!1,!1,"",ol);a._reactRootContainer=k;a[tf]=k.current;rf(8===a.nodeType?a.parentNode:a);Qk(function(){el(b,k,c,d);});return k;}function ql(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function e(){var a=fl(g);h.call(a);};}el(b,g,a,e);}else g=pl(c,b,a,e,d);return fl(g);}Dc=function Dc(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=sc(b.pendingLanes);0!==c&&(Bc(b,c|1),Ck(b,B()),0===(W&6)&&(aj=B()+500,ig()));}break;case 13:var d=Jg();Qk(function(){return Lg(a,1,d);});hl(a,1);}};Ec=function Ec(a){if(13===a.tag){var b=Jg();Lg(a,134217728,b);hl(a,134217728);}};Fc=function Fc(a){if(13===a.tag){var b=Jg(),c=Kg(a);Lg(a,c,b);hl(a,c);}};Gc=function Gc(){return C;};Hc=function Hc(a,b){var c=C;try{return C=a,b();}finally{C=c;}};xb=function xb(a,b,c){switch(b){case"input":$a(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;){c=c.parentNode;}c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Cb(d);if(!e)throw Error(p(90));Va(d);$a(d,e);}}}break;case"textarea":hb(a,c);break;case"select":b=c.value,null!=b&&eb(a,!!c.multiple,b,!1);}};Fb=Pk;Gb=Qk;var rl={usingClientEntryPoint:!1,Events:[Bb,te,Cb,Db,Eb,Pk]},sl={findFiberByHostInstance:Vc,bundleType:0,version:"18.1.0",rendererPackageName:"react-dom"};var tl={bundleType:sl.bundleType,version:sl.version,rendererPackageName:sl.rendererPackageName,rendererConfig:sl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ta.ReactCurrentDispatcher,findHostInstanceByFiber:function findHostInstanceByFiber(a){a=Yb(a);return null===a?null:a.stateNode;},findFiberByHostInstance:sl.findFiberByHostInstance||il,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.1.0-next-22edb9f77-20220426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ul=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ul.isDisabled&&ul.supportsFiber)try{jc=ul.inject(tl),kc=ul;}catch(a){}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=rl;reactDom_production_min.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ml(b))throw Error(p(200));return bl(a,b,null,c);};reactDom_production_min.createRoot=function(a,b){if(!ml(a))throw Error(p(299));var c=!1,d="",e=jl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=al(a,1,!1,null,null,c,!1,d,e);a[tf]=b.current;rf(8===a.nodeType?a.parentNode:a);return new kl(b);};reactDom_production_min.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Yb(b);a=null===a?null:a.stateNode;return a;};reactDom_production_min.flushSync=function(a){return Qk(a);};reactDom_production_min.hydrate=function(a,b,c){if(!nl(b))throw Error(p(200));return ql(null,a,b,!0,c);};reactDom_production_min.hydrateRoot=function(a,b,c){if(!ml(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=jl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=dl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[tf]=b.current;rf(a);if(d)for(a=0;a<d.length;a++){c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,e);}return new ll(b);};reactDom_production_min.render=function(a,b,c){if(!nl(b))throw Error(p(200));return ql(null,a,b,!1,c);};reactDom_production_min.unmountComponentAtNode=function(a){if(!nl(a))throw Error(p(40));return a._reactRootContainer?(Qk(function(){ql(null,null,a,!1,function(){a._reactRootContainer=null;a[tf]=null;});}),!0):!1;};reactDom_production_min.unstable_batchedUpdates=Pk;reactDom_production_min.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!nl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return ql(a,b,c,!1,d);};reactDom_production_min.version="18.1.0-next-22edb9f77-20220426";

  (function(module){function checkDCE(){/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__==='undefined'||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!=='function'){return;}try{// Verify that the code above has been dead code eliminated (DCE'd).
  __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);}catch(err){// DevTools shouldn't crash React, no matter what.
  // We should still report in case we break this code.
  console.error(err);}}{// DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();module.exports=reactDom_production_min;}})(reactDom);

  var createRoot;var m=reactDom.exports;{createRoot=m.createRoot;}

  var GameOfLifePage=function GameOfLifePage(props){// === DOM & VARS ===
  var reactEl=createRoot(document.querySelector('#react-game-of-life'));// === INIT =========
  var init=function init(){console.log('horoskop');reactEl.render(/*#__PURE__*/jsxRuntime.exports.jsx(jsxRuntime.exports.Fragment,{children:/*#__PURE__*/jsxRuntime.exports.jsx(GameOfLife,{})}));};// === EVENTS / XHR =======
  // === FUNCTIONS ====
  init();};

  function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:false});return Constructor;}/*!
   * Splide.js
   * Version  : 4.0.6
   * License  : MIT
   * Copyright: 2022 Naotoshi Fujita
   */var MEDIA_PREFERS_REDUCED_MOTION="(prefers-reduced-motion: reduce)";var CREATED=1;var MOUNTED=2;var IDLE=3;var MOVING=4;var SCROLLING=5;var DRAGGING=6;var DESTROYED=7;var STATES={CREATED:CREATED,MOUNTED:MOUNTED,IDLE:IDLE,MOVING:MOVING,SCROLLING:SCROLLING,DRAGGING:DRAGGING,DESTROYED:DESTROYED};function empty(array){array.length=0;}function slice(arrayLike,start,end){return Array.prototype.slice.call(arrayLike,start,end);}function apply(func){return func.bind.apply(func,[null].concat(slice(arguments,1)));}var nextTick=setTimeout;var noop=function noop(){};function raf(func){return requestAnimationFrame(func);}function typeOf(type,subject){return _typeof(subject)===type;}function isObject$4(subject){return !isNull(subject)&&typeOf("object",subject);}var isArray$3=Array.isArray;var isFunction$1=apply(typeOf,"function");var isString$1=apply(typeOf,"string");var isUndefined$1=apply(typeOf,"undefined");function isNull(subject){return subject===null;}function isHTMLElement(subject){return subject instanceof HTMLElement;}function toArray$1(value){return isArray$3(value)?value:[value];}function forEach$1(values,iteratee){toArray$1(values).forEach(iteratee);}function includes(array,value){return array.indexOf(value)>-1;}function push(array,items){array.push.apply(array,toArray$1(items));return array;}function toggleClass(elm,classes,add){if(elm){forEach$1(classes,function(name){if(name){elm.classList[add?"add":"remove"](name);}});}}function addClass(elm,classes){toggleClass(elm,isString$1(classes)?classes.split(" "):classes,true);}function append(parent,children){forEach$1(children,parent.appendChild.bind(parent));}function before(nodes,ref){forEach$1(nodes,function(node){var parent=(ref||node).parentNode;if(parent){parent.insertBefore(node,ref);}});}function matches(elm,selector){return isHTMLElement(elm)&&(elm["msMatchesSelector"]||elm.matches).call(elm,selector);}function children(parent,selector){var children2=parent?slice(parent.children):[];return selector?children2.filter(function(child){return matches(child,selector);}):children2;}function child(parent,selector){return selector?children(parent,selector)[0]:parent.firstElementChild;}var ownKeys=Object.keys;function forOwn(object,iteratee,right){if(object){var keys=ownKeys(object);keys=right?keys.reverse():keys;for(var i=0;i<keys.length;i++){var key=keys[i];if(key!=="__proto__"){if(iteratee(object[key],key)===false){break;}}}}return object;}function assign(object){slice(arguments,1).forEach(function(source){forOwn(source,function(value,key){object[key]=source[key];});});return object;}function merge$1(object){slice(arguments,1).forEach(function(source){forOwn(source,function(value,key){if(isArray$3(value)){object[key]=value.slice();}else if(isObject$4(value)){object[key]=merge$1({},isObject$4(object[key])?object[key]:{},value);}else {object[key]=value;}});});return object;}function omit(object,keys){toArray$1(keys||ownKeys(object)).forEach(function(key){delete object[key];});}function removeAttribute(elms,attrs){forEach$1(elms,function(elm){forEach$1(attrs,function(attr){elm&&elm.removeAttribute(attr);});});}function setAttribute(elms,attrs,value){if(isObject$4(attrs)){forOwn(attrs,function(value2,name){setAttribute(elms,name,value2);});}else {forEach$1(elms,function(elm){isNull(value)||value===""?removeAttribute(elm,attrs):elm.setAttribute(attrs,String(value));});}}function create(tag,attrs,parent){var elm=document.createElement(tag);if(attrs){isString$1(attrs)?addClass(elm,attrs):setAttribute(elm,attrs);}parent&&append(parent,elm);return elm;}function style(elm,prop,value){if(isUndefined$1(value)){return getComputedStyle(elm)[prop];}if(!isNull(value)){elm.style[prop]=""+value;}}function display(elm,display2){style(elm,"display",display2);}function focus(elm){elm["setActive"]&&elm["setActive"]()||elm.focus({preventScroll:true});}function getAttribute(elm,attr){return elm.getAttribute(attr);}function hasClass(elm,className){return elm&&elm.classList.contains(className);}function rect(target){return target.getBoundingClientRect();}function remove(nodes){forEach$1(nodes,function(node){if(node&&node.parentNode){node.parentNode.removeChild(node);}});}function parseHtml(html){return child(new DOMParser().parseFromString(html,"text/html").body);}function prevent(e,stopPropagation){e.preventDefault();if(stopPropagation){e.stopPropagation();e.stopImmediatePropagation();}}function query(parent,selector){return parent&&parent.querySelector(selector);}function queryAll(parent,selector){return selector?slice(parent.querySelectorAll(selector)):[];}function removeClass(elm,classes){toggleClass(elm,classes,false);}function timeOf(e){return e.timeStamp;}function unit(value){return isString$1(value)?value:value?value+"px":"";}var PROJECT_CODE="splide";var DATA_ATTRIBUTE="data-"+PROJECT_CODE;function assert(condition,message){if(!condition){throw new Error("["+PROJECT_CODE+"] "+(message||""));}}var min=Math.min,max=Math.max,floor=Math.floor,ceil=Math.ceil,abs=Math.abs;function approximatelyEqual(x,y,epsilon){return abs(x-y)<epsilon;}function between(number,minOrMax,maxOrMin,exclusive){var minimum=min(minOrMax,maxOrMin);var maximum=max(minOrMax,maxOrMin);return exclusive?minimum<number&&number<maximum:minimum<=number&&number<=maximum;}function clamp(number,x,y){var minimum=min(x,y);var maximum=max(x,y);return min(max(minimum,number),maximum);}function sign(x){return +(x>0)-+(x<0);}function format(string,replacements){forEach$1(replacements,function(replacement){string=string.replace("%s",""+replacement);});return string;}function pad(number){return number<10?"0"+number:""+number;}var ids={};function uniqueId$1(prefix){return ""+prefix+pad(ids[prefix]=(ids[prefix]||0)+1);}function EventBinder(){var listeners=[];function bind(targets,events,callback,options){forEachEvent(targets,events,function(target,event,namespace){var isEventTarget=("addEventListener"in target);var remover=isEventTarget?target.removeEventListener.bind(target,event,callback,options):target["removeListener"].bind(target,callback);isEventTarget?target.addEventListener(event,callback,options):target["addListener"](callback);listeners.push([target,event,namespace,callback,remover]);});}function unbind(targets,events,callback){forEachEvent(targets,events,function(target,event,namespace){listeners=listeners.filter(function(listener){if(listener[0]===target&&listener[1]===event&&listener[2]===namespace&&(!callback||listener[3]===callback)){listener[4]();return false;}return true;});});}function dispatch(target,type,detail){var e;var bubbles=true;if(typeof CustomEvent==="function"){e=new CustomEvent(type,{bubbles:bubbles,detail:detail});}else {e=document.createEvent("CustomEvent");e.initCustomEvent(type,bubbles,false,detail);}target.dispatchEvent(e);return e;}function forEachEvent(targets,events,iteratee){forEach$1(targets,function(target){target&&forEach$1(events,function(events2){events2.split(" ").forEach(function(eventNS){var fragment=eventNS.split(".");iteratee(target,fragment[0],fragment[1]);});});});}function destroy(){listeners.forEach(function(data){data[4]();});empty(listeners);}return {bind:bind,unbind:unbind,dispatch:dispatch,destroy:destroy};}var EVENT_MOUNTED="mounted";var EVENT_READY="ready";var EVENT_MOVE="move";var EVENT_MOVED="moved";var EVENT_SHIFTED="shifted";var EVENT_CLICK="click";var EVENT_ACTIVE="active";var EVENT_INACTIVE="inactive";var EVENT_VISIBLE="visible";var EVENT_HIDDEN="hidden";var EVENT_SLIDE_KEYDOWN="slide:keydown";var EVENT_REFRESH="refresh";var EVENT_UPDATED="updated";var EVENT_RESIZE="resize";var EVENT_RESIZED="resized";var EVENT_DRAG="drag";var EVENT_DRAGGING="dragging";var EVENT_DRAGGED="dragged";var EVENT_SCROLL="scroll";var EVENT_SCROLLED="scrolled";var EVENT_DESTROY="destroy";var EVENT_ARROWS_MOUNTED="arrows:mounted";var EVENT_ARROWS_UPDATED="arrows:updated";var EVENT_PAGINATION_MOUNTED="pagination:mounted";var EVENT_PAGINATION_UPDATED="pagination:updated";var EVENT_NAVIGATION_MOUNTED="navigation:mounted";var EVENT_AUTOPLAY_PLAY="autoplay:play";var EVENT_AUTOPLAY_PLAYING="autoplay:playing";var EVENT_AUTOPLAY_PAUSE="autoplay:pause";var EVENT_LAZYLOAD_LOADED="lazyload:loaded";function EventInterface(Splide2){var bus=Splide2?Splide2.event.bus:document.createDocumentFragment();var binder=EventBinder();function on(events,callback){binder.bind(bus,toArray$1(events).join(" "),function(e){callback.apply(callback,isArray$3(e.detail)?e.detail:[]);});}function emit(event){binder.dispatch(bus,event,slice(arguments,1));}if(Splide2){Splide2.event.on(EVENT_DESTROY,binder.destroy);}return assign(binder,{bus:bus,on:on,off:apply(binder.unbind,bus),emit:emit});}function RequestInterval(interval,onInterval,onUpdate,limit){var now=Date.now;var startTime;var rate=0;var id;var paused=true;var count=0;function update(){if(!paused){rate=interval?min((now()-startTime)/interval,1):1;onUpdate&&onUpdate(rate);if(rate>=1){onInterval();startTime=now();if(limit&&++count>=limit){return pause();}}raf(update);}}function start(resume){!resume&&cancel();startTime=now()-(resume?rate*interval:0);paused=false;raf(update);}function pause(){paused=true;}function rewind(){startTime=now();rate=0;if(onUpdate){onUpdate(rate);}}function cancel(){id&&cancelAnimationFrame(id);rate=0;id=0;paused=true;}function set(time){interval=time;}function isPaused(){return paused;}return {start:start,rewind:rewind,pause:pause,cancel:cancel,set:set,isPaused:isPaused};}function State(initialState){var state=initialState;function set(value){state=value;}function is(states){return includes(toArray$1(states),state);}return {set:set,is:is};}function Throttle(func,duration){var interval;function throttled(){if(!interval){interval=RequestInterval(duration||0,function(){func();interval=null;},null,1);interval.start();}}return throttled;}function Media(Splide2,Components2,options){var state=Splide2.state;var breakpoints=options.breakpoints||{};var reducedMotion=options.reducedMotion||{};var binder=EventBinder();var queries=[];function setup(){var isMin=options.mediaQuery==="min";ownKeys(breakpoints).sort(function(n,m){return isMin?+n-+m:+m-+n;}).forEach(function(key){register(breakpoints[key],"("+(isMin?"min":"max")+"-width:"+key+"px)");});register(reducedMotion,MEDIA_PREFERS_REDUCED_MOTION);update();}function destroy(completely){if(completely){binder.destroy();}}function register(options2,query){var queryList=matchMedia(query);binder.bind(queryList,"change",update);queries.push([options2,queryList]);}function update(){var destroyed=state.is(DESTROYED);var direction=options.direction;var merged=queries.reduce(function(merged2,entry){return merge$1(merged2,entry[1].matches?entry[0]:{});},{});omit(options);set(merged);if(options.destroy){Splide2.destroy(options.destroy==="completely");}else if(destroyed){destroy(true);Splide2.mount();}else {direction!==options.direction&&Splide2.refresh();}}function reduce(enable){if(matchMedia(MEDIA_PREFERS_REDUCED_MOTION).matches){enable?merge$1(options,reducedMotion):omit(options,ownKeys(reducedMotion));}}function set(opts,user){merge$1(options,opts);user&&merge$1(Object.getPrototypeOf(options),opts);if(!state.is(CREATED)){Splide2.emit(EVENT_UPDATED,options);}}return {setup:setup,destroy:destroy,reduce:reduce,set:set};}var ARROW="Arrow";var ARROW_LEFT=ARROW+"Left";var ARROW_RIGHT=ARROW+"Right";var ARROW_UP=ARROW+"Up";var ARROW_DOWN=ARROW+"Down";var RTL="rtl";var TTB="ttb";var ORIENTATION_MAP={width:["height"],left:["top","right"],right:["bottom","left"],x:["y"],X:["Y"],Y:["X"],ArrowLeft:[ARROW_UP,ARROW_RIGHT],ArrowRight:[ARROW_DOWN,ARROW_LEFT]};function Direction(Splide2,Components2,options){function resolve(prop,axisOnly,direction){direction=direction||options.direction;var index=direction===RTL&&!axisOnly?1:direction===TTB?0:-1;return ORIENTATION_MAP[prop]&&ORIENTATION_MAP[prop][index]||prop.replace(/width|left|right/i,function(match,offset){var replacement=ORIENTATION_MAP[match.toLowerCase()][index]||match;return offset>0?replacement.charAt(0).toUpperCase()+replacement.slice(1):replacement;});}function orient(value){return value*(options.direction===RTL?1:-1);}return {resolve:resolve,orient:orient};}var ROLE="role";var TAB_INDEX="tabindex";var DISABLED="disabled";var ARIA_PREFIX="aria-";var ARIA_CONTROLS=ARIA_PREFIX+"controls";var ARIA_CURRENT=ARIA_PREFIX+"current";var ARIA_SELECTED=ARIA_PREFIX+"selected";var ARIA_LABEL=ARIA_PREFIX+"label";var ARIA_LABELLEDBY=ARIA_PREFIX+"labelledby";var ARIA_HIDDEN=ARIA_PREFIX+"hidden";var ARIA_ORIENTATION=ARIA_PREFIX+"orientation";var ARIA_ROLEDESCRIPTION=ARIA_PREFIX+"roledescription";var ARIA_LIVE=ARIA_PREFIX+"live";var ARIA_BUSY=ARIA_PREFIX+"busy";var ARIA_ATOMIC=ARIA_PREFIX+"atomic";var ALL_ATTRIBUTES=[ROLE,TAB_INDEX,DISABLED,ARIA_CONTROLS,ARIA_CURRENT,ARIA_LABEL,ARIA_LABELLEDBY,ARIA_HIDDEN,ARIA_ORIENTATION,ARIA_ROLEDESCRIPTION];var CLASS_ROOT=PROJECT_CODE;var CLASS_TRACK=PROJECT_CODE+"__track";var CLASS_LIST=PROJECT_CODE+"__list";var CLASS_SLIDE=PROJECT_CODE+"__slide";var CLASS_CLONE=CLASS_SLIDE+"--clone";var CLASS_CONTAINER=CLASS_SLIDE+"__container";var CLASS_ARROWS=PROJECT_CODE+"__arrows";var CLASS_ARROW=PROJECT_CODE+"__arrow";var CLASS_ARROW_PREV=CLASS_ARROW+"--prev";var CLASS_ARROW_NEXT=CLASS_ARROW+"--next";var CLASS_PAGINATION=PROJECT_CODE+"__pagination";var CLASS_PAGINATION_PAGE=CLASS_PAGINATION+"__page";var CLASS_PROGRESS=PROJECT_CODE+"__progress";var CLASS_PROGRESS_BAR=CLASS_PROGRESS+"__bar";var CLASS_TOGGLE=PROJECT_CODE+"__toggle";var CLASS_SPINNER=PROJECT_CODE+"__spinner";var CLASS_SR=PROJECT_CODE+"__sr";var CLASS_INITIALIZED="is-initialized";var CLASS_ACTIVE="is-active";var CLASS_PREV="is-prev";var CLASS_NEXT="is-next";var CLASS_VISIBLE="is-visible";var CLASS_LOADING="is-loading";var CLASS_FOCUS_IN="is-focus-in";var STATUS_CLASSES=[CLASS_ACTIVE,CLASS_VISIBLE,CLASS_PREV,CLASS_NEXT,CLASS_LOADING,CLASS_FOCUS_IN];var CLASSES={slide:CLASS_SLIDE,clone:CLASS_CLONE,arrows:CLASS_ARROWS,arrow:CLASS_ARROW,prev:CLASS_ARROW_PREV,next:CLASS_ARROW_NEXT,pagination:CLASS_PAGINATION,page:CLASS_PAGINATION_PAGE,spinner:CLASS_SPINNER};function closest(from,selector){if(isFunction$1(from.closest)){return from.closest(selector);}var elm=from;while(elm&&elm.nodeType===1){if(matches(elm,selector)){break;}elm=elm.parentElement;}return elm;}var FRICTION=5;var LOG_INTERVAL=200;var POINTER_DOWN_EVENTS="touchstart mousedown";var POINTER_MOVE_EVENTS="touchmove mousemove";var POINTER_UP_EVENTS="touchend touchcancel mouseup click";function Elements(Splide2,Components2,options){var _EventInterface=EventInterface(Splide2),on=_EventInterface.on,bind=_EventInterface.bind;var root=Splide2.root;var i18n=options.i18n;var elements={};var slides=[];var rootClasses=[];var trackClasses=[];var track;var list;var isUsingKey;function setup(){collect();init();update();}function mount(){on(EVENT_REFRESH,destroy);on(EVENT_REFRESH,setup);on(EVENT_UPDATED,update);bind(document,POINTER_DOWN_EVENTS+" keydown",function(e){isUsingKey=e.type==="keydown";},{capture:true});bind(root,"focusin",function(){toggleClass(root,CLASS_FOCUS_IN,!!isUsingKey);});}function destroy(completely){var attrs=ALL_ATTRIBUTES.concat("style");empty(slides);removeClass(root,rootClasses);removeClass(track,trackClasses);removeAttribute([track,list],attrs);removeAttribute(root,completely?attrs:["style",ARIA_ROLEDESCRIPTION]);}function update(){removeClass(root,rootClasses);removeClass(track,trackClasses);rootClasses=getClasses(CLASS_ROOT);trackClasses=getClasses(CLASS_TRACK);addClass(root,rootClasses);addClass(track,trackClasses);setAttribute(root,ARIA_LABEL,options.label);setAttribute(root,ARIA_LABELLEDBY,options.labelledby);}function collect(){track=find("."+CLASS_TRACK);list=child(track,"."+CLASS_LIST);assert(track&&list,"A track/list element is missing.");push(slides,children(list,"."+CLASS_SLIDE+":not(."+CLASS_CLONE+")"));forOwn({arrows:CLASS_ARROWS,pagination:CLASS_PAGINATION,prev:CLASS_ARROW_PREV,next:CLASS_ARROW_NEXT,bar:CLASS_PROGRESS_BAR,toggle:CLASS_TOGGLE},function(className,key){elements[key]=find("."+className);});assign(elements,{root:root,track:track,list:list,slides:slides});}function init(){var id=root.id||uniqueId$1(PROJECT_CODE);var role=options.role;root.id=id;track.id=track.id||id+"-track";list.id=list.id||id+"-list";if(!getAttribute(root,ROLE)&&root.tagName!=="SECTION"&&role){setAttribute(root,ROLE,role);}setAttribute(root,ARIA_ROLEDESCRIPTION,i18n.carousel);setAttribute(list,ROLE,"presentation");}function find(selector){var elm=query(root,selector);return elm&&closest(elm,"."+CLASS_ROOT)===root?elm:void 0;}function getClasses(base){return [base+"--"+options.type,base+"--"+options.direction,options.drag&&base+"--draggable",options.isNavigation&&base+"--nav",base===CLASS_ROOT&&CLASS_ACTIVE];}return assign(elements,{setup:setup,mount:mount,destroy:destroy});}var SLIDE="slide";var LOOP="loop";var FADE="fade";function Slide$1(Splide2,index,slideIndex,slide){var event=EventInterface(Splide2);var on=event.on,emit=event.emit,bind=event.bind;var Components=Splide2.Components,root=Splide2.root,options=Splide2.options;var isNavigation=options.isNavigation,updateOnMove=options.updateOnMove,i18n=options.i18n,pagination=options.pagination,slideFocus=options.slideFocus;var resolve=Components.Direction.resolve;var styles=getAttribute(slide,"style");var label=getAttribute(slide,ARIA_LABEL);var isClone=slideIndex>-1;var container=child(slide,"."+CLASS_CONTAINER);var focusableNodes=queryAll(slide,options.focusableNodes||"");var destroyed;function mount(){if(!isClone){slide.id=root.id+"-slide"+pad(index+1);setAttribute(slide,ROLE,pagination?"tabpanel":"group");setAttribute(slide,ARIA_ROLEDESCRIPTION,i18n.slide);setAttribute(slide,ARIA_LABEL,label||format(i18n.slideLabel,[index+1,Splide2.length]));}listen();}function listen(){bind(slide,"click",apply(emit,EVENT_CLICK,self));bind(slide,"keydown",apply(emit,EVENT_SLIDE_KEYDOWN,self));on([EVENT_MOVED,EVENT_SHIFTED,EVENT_SCROLLED],update);on(EVENT_NAVIGATION_MOUNTED,initNavigation);if(updateOnMove){on(EVENT_MOVE,onMove);}}function destroy(){destroyed=true;event.destroy();removeClass(slide,STATUS_CLASSES);removeAttribute(slide,ALL_ATTRIBUTES);setAttribute(slide,"style",styles);setAttribute(slide,ARIA_LABEL,label||"");}function initNavigation(){var controls=Splide2.splides.map(function(target){var Slide2=target.splide.Components.Slides.getAt(index);return Slide2?Slide2.slide.id:"";}).join(" ");setAttribute(slide,ARIA_LABEL,format(i18n.slideX,(isClone?slideIndex:index)+1));setAttribute(slide,ARIA_CONTROLS,controls);setAttribute(slide,ROLE,slideFocus?"button":"");slideFocus&&removeAttribute(slide,ARIA_ROLEDESCRIPTION);}function onMove(){if(!destroyed){update();}}function update(){if(!destroyed){var curr=Splide2.index;updateActivity();updateVisibility();toggleClass(slide,CLASS_PREV,index===curr-1);toggleClass(slide,CLASS_NEXT,index===curr+1);}}function updateActivity(){var active=isActive();if(active!==hasClass(slide,CLASS_ACTIVE)){toggleClass(slide,CLASS_ACTIVE,active);setAttribute(slide,ARIA_CURRENT,isNavigation&&active||"");emit(active?EVENT_ACTIVE:EVENT_INACTIVE,self);}}function updateVisibility(){var visible=isVisible();var hidden=!visible&&(!isActive()||isClone);if(!Splide2.state.is([MOVING,SCROLLING])){setAttribute(slide,ARIA_HIDDEN,hidden||"");}setAttribute(focusableNodes,TAB_INDEX,hidden?-1:"");if(slideFocus){setAttribute(slide,TAB_INDEX,hidden?-1:0);}if(visible!==hasClass(slide,CLASS_VISIBLE)){toggleClass(slide,CLASS_VISIBLE,visible);emit(visible?EVENT_VISIBLE:EVENT_HIDDEN,self);}if(!visible&&document.activeElement===slide){var Slide2=Components.Slides.getAt(Splide2.index);Slide2&&focus(Slide2.slide);}}function style$1(prop,value,useContainer){style(useContainer&&container||slide,prop,value);}function isActive(){var curr=Splide2.index;return curr===index||options.cloneStatus&&curr===slideIndex;}function isVisible(){if(Splide2.is(FADE)){return isActive();}var trackRect=rect(Components.Elements.track);var slideRect=rect(slide);var left=resolve("left");var right=resolve("right");return floor(trackRect[left])<=ceil(slideRect[left])&&floor(slideRect[right])<=ceil(trackRect[right]);}function isWithin(from,distance){var diff=abs(from-index);if(!isClone&&(options.rewind||Splide2.is(LOOP))){diff=min(diff,Splide2.length-diff);}return diff<=distance;}var self={index:index,slideIndex:slideIndex,slide:slide,container:container,isClone:isClone,mount:mount,destroy:destroy,update:update,style:style$1,isWithin:isWithin};return self;}function Slides(Splide2,Components2,options){var _EventInterface2=EventInterface(Splide2),on=_EventInterface2.on,emit=_EventInterface2.emit,bind=_EventInterface2.bind;var _Components2$Elements=Components2.Elements,slides=_Components2$Elements.slides,list=_Components2$Elements.list;var Slides2=[];function mount(){init();on(EVENT_REFRESH,destroy);on(EVENT_REFRESH,init);on([EVENT_MOUNTED,EVENT_REFRESH],function(){Slides2.sort(function(Slide1,Slide2){return Slide1.index-Slide2.index;});});}function init(){slides.forEach(function(slide,index){register(slide,index,-1);});}function destroy(){forEach$1$1(function(Slide2){Slide2.destroy();});empty(Slides2);}function update(){forEach$1$1(function(Slide2){Slide2.update();});}function register(slide,index,slideIndex){var object=Slide$1(Splide2,index,slideIndex,slide);object.mount();Slides2.push(object);}function get(excludeClones){return excludeClones?filter(function(Slide2){return !Slide2.isClone;}):Slides2;}function getIn(page){var Controller=Components2.Controller;var index=Controller.toIndex(page);var max=Controller.hasFocus()?1:options.perPage;return filter(function(Slide2){return between(Slide2.index,index,index+max-1);});}function getAt(index){return filter(index)[0];}function add(items,index){forEach$1(items,function(slide){if(isString$1(slide)){slide=parseHtml(slide);}if(isHTMLElement(slide)){var ref=slides[index];ref?before(slide,ref):append(list,slide);addClass(slide,options.classes.slide);observeImages(slide,apply(emit,EVENT_RESIZE));}});emit(EVENT_REFRESH);}function remove$1(matcher){remove(filter(matcher).map(function(Slide2){return Slide2.slide;}));emit(EVENT_REFRESH);}function forEach$1$1(iteratee,excludeClones){get(excludeClones).forEach(iteratee);}function filter(matcher){return Slides2.filter(isFunction$1(matcher)?matcher:function(Slide2){return isString$1(matcher)?matches(Slide2.slide,matcher):includes(toArray$1(matcher),Slide2.index);});}function style(prop,value,useContainer){forEach$1$1(function(Slide2){Slide2.style(prop,value,useContainer);});}function observeImages(elm,callback){var images=queryAll(elm,"img");var length=images.length;if(length){images.forEach(function(img){bind(img,"load error",function(){if(! --length){callback();}});});}else {callback();}}function getLength(excludeClones){return excludeClones?slides.length:Slides2.length;}function isEnough(){return Slides2.length>options.perPage;}return {mount:mount,destroy:destroy,update:update,register:register,get:get,getIn:getIn,getAt:getAt,add:add,remove:remove$1,forEach:forEach$1$1,filter:filter,style:style,getLength:getLength,isEnough:isEnough};}function Layout(Splide2,Components2,options){var _EventInterface3=EventInterface(Splide2),on=_EventInterface3.on,bind=_EventInterface3.bind,emit=_EventInterface3.emit;var Slides=Components2.Slides;var resolve=Components2.Direction.resolve;var _Components2$Elements2=Components2.Elements,root=_Components2$Elements2.root,track=_Components2$Elements2.track,list=_Components2$Elements2.list;var getAt=Slides.getAt,styleSlides=Slides.style;var vertical;var rootRect;function mount(){init();bind(window,"resize load",Throttle(apply(emit,EVENT_RESIZE)));on([EVENT_UPDATED,EVENT_REFRESH],init);on(EVENT_RESIZE,resize);}function init(){rootRect=null;vertical=options.direction===TTB;style(root,"maxWidth",unit(options.width));style(track,resolve("paddingLeft"),cssPadding(false));style(track,resolve("paddingRight"),cssPadding(true));resize();}function resize(){var newRect=rect(root);if(!rootRect||rootRect.width!==newRect.width||rootRect.height!==newRect.height){style(track,"height",cssTrackHeight());styleSlides(resolve("marginRight"),unit(options.gap));styleSlides("width",cssSlideWidth());styleSlides("height",cssSlideHeight(),true);rootRect=newRect;emit(EVENT_RESIZED);}}function cssPadding(right){var padding=options.padding;var prop=resolve(right?"right":"left");return padding&&unit(padding[prop]||(isObject$4(padding)?0:padding))||"0px";}function cssTrackHeight(){var height="";if(vertical){height=cssHeight();assert(height,"height or heightRatio is missing.");height="calc("+height+" - "+cssPadding(false)+" - "+cssPadding(true)+")";}return height;}function cssHeight(){return unit(options.height||rect(list).width*options.heightRatio);}function cssSlideWidth(){return options.autoWidth?null:unit(options.fixedWidth)||(vertical?"":cssSlideSize());}function cssSlideHeight(){return unit(options.fixedHeight)||(vertical?options.autoHeight?null:cssSlideSize():cssHeight());}function cssSlideSize(){var gap=unit(options.gap);return "calc((100%"+(gap&&" + "+gap)+")/"+(options.perPage||1)+(gap&&" - "+gap)+")";}function listSize(){return rect(list)[resolve("width")];}function slideSize(index,withoutGap){var Slide=getAt(index||0);return Slide?rect(Slide.slide)[resolve("width")]+(withoutGap?0:getGap()):0;}function totalSize(index,withoutGap){var Slide=getAt(index);if(Slide){var right=rect(Slide.slide)[resolve("right")];var left=rect(list)[resolve("left")];return abs(right-left)+(withoutGap?0:getGap());}return 0;}function sliderSize(){return totalSize(Splide2.length-1,true)-totalSize(-1,true);}function getGap(){var Slide=getAt(0);return Slide&&parseFloat(style(Slide.slide,resolve("marginRight")))||0;}function getPadding(right){return parseFloat(style(track,resolve("padding"+(right?"Right":"Left"))))||0;}return {mount:mount,listSize:listSize,slideSize:slideSize,sliderSize:sliderSize,totalSize:totalSize,getPadding:getPadding};}var MULTIPLIER=2;function Clones(Splide2,Components2,options){var _EventInterface4=EventInterface(Splide2),on=_EventInterface4.on,emit=_EventInterface4.emit;var Elements=Components2.Elements,Slides=Components2.Slides;var resolve=Components2.Direction.resolve;var clones=[];var cloneCount;function mount(){init();on(EVENT_REFRESH,destroy);on(EVENT_REFRESH,init);on([EVENT_UPDATED,EVENT_RESIZE],observe);}function init(){if(cloneCount=computeCloneCount()){generate(cloneCount);emit(EVENT_RESIZE);}}function destroy(){remove(clones);empty(clones);}function observe(){if(cloneCount<computeCloneCount()){emit(EVENT_REFRESH);}}function generate(count){var slides=Slides.get().slice();var length=slides.length;if(length){while(slides.length<count){push(slides,slides);}push(slides.slice(-count),slides.slice(0,count)).forEach(function(Slide,index){var isHead=index<count;var clone=cloneDeep(Slide.slide,index);isHead?before(clone,slides[0].slide):append(Elements.list,clone);push(clones,clone);Slides.register(clone,index-count+(isHead?0:length),Slide.index);});}}function cloneDeep(elm,index){var clone=elm.cloneNode(true);addClass(clone,options.classes.clone);clone.id=Splide2.root.id+"-clone"+pad(index+1);return clone;}function computeCloneCount(){var clones2=options.clones;if(!Splide2.is(LOOP)){clones2=0;}else if(!clones2){var fixedSize=options[resolve("fixedWidth")]&&Components2.Layout.slideSize(0);var fixedCount=fixedSize&&ceil(rect(Elements.track)[resolve("width")]/fixedSize);clones2=fixedCount||options[resolve("autoWidth")]&&Splide2.length||options.perPage*MULTIPLIER;}return clones2;}return {mount:mount,destroy:destroy};}function Move(Splide2,Components2,options){var _EventInterface5=EventInterface(Splide2),on=_EventInterface5.on,emit=_EventInterface5.emit;var set=Splide2.state.set;var _Components2$Layout=Components2.Layout,slideSize=_Components2$Layout.slideSize,getPadding=_Components2$Layout.getPadding,totalSize=_Components2$Layout.totalSize,listSize=_Components2$Layout.listSize,sliderSize=_Components2$Layout.sliderSize;var _Components2$Directio=Components2.Direction,resolve=_Components2$Directio.resolve,orient=_Components2$Directio.orient;var _Components2$Elements3=Components2.Elements,list=_Components2$Elements3.list,track=_Components2$Elements3.track;var Transition;function mount(){Transition=Components2.Transition;on([EVENT_MOUNTED,EVENT_RESIZED,EVENT_UPDATED,EVENT_REFRESH],reposition);}function reposition(){if(!Components2.Controller.isBusy()){Components2.Scroll.cancel();jump(Splide2.index);Components2.Slides.update();}}function move(dest,index,prev,callback){if(dest!==index&&canShift(dest>prev)){cancel();translate(shift(getPosition(),dest>prev),true);}set(MOVING);emit(EVENT_MOVE,index,prev,dest);Transition.start(index,function(){set(IDLE);emit(EVENT_MOVED,index,prev,dest);callback&&callback();});}function jump(index){translate(toPosition(index,true));}function translate(position,preventLoop){if(!Splide2.is(FADE)){var destination=preventLoop?position:loop(position);style(list,"transform","translate"+resolve("X")+"("+destination+"px)");position!==destination&&emit(EVENT_SHIFTED);}}function loop(position){if(Splide2.is(LOOP)){var index=toIndex(position);var exceededMax=index>Components2.Controller.getEnd();var exceededMin=index<0;if(exceededMin||exceededMax){position=shift(position,exceededMax);}}return position;}function shift(position,backwards){var excess=position-getLimit(backwards);var size=sliderSize();position-=orient(size*(ceil(abs(excess)/size)||1))*(backwards?1:-1);return position;}function cancel(){translate(getPosition());Transition.cancel();}function toIndex(position){var Slides=Components2.Slides.get();var index=0;var minDistance=Infinity;for(var i=0;i<Slides.length;i++){var slideIndex=Slides[i].index;var distance=abs(toPosition(slideIndex,true)-position);if(distance<=minDistance){minDistance=distance;index=slideIndex;}else {break;}}return index;}function toPosition(index,trimming){var position=orient(totalSize(index-1)-offset(index));return trimming?trim(position):position;}function getPosition(){var left=resolve("left");return rect(list)[left]-rect(track)[left]+orient(getPadding(false));}function trim(position){if(options.trimSpace&&Splide2.is(SLIDE)){position=clamp(position,0,orient(sliderSize()-listSize()));}return position;}function offset(index){var focus=options.focus;return focus==="center"?(listSize()-slideSize(index,true))/2:+focus*slideSize(index)||0;}function getLimit(max){return toPosition(max?Components2.Controller.getEnd():0,!!options.trimSpace);}function canShift(backwards){var shifted=orient(shift(getPosition(),backwards));return backwards?shifted>=0:shifted<=list[resolve("scrollWidth")]-rect(track)[resolve("width")];}function exceededLimit(max,position){position=isUndefined$1(position)?getPosition():position;var exceededMin=max!==true&&orient(position)<orient(getLimit(false));var exceededMax=max!==false&&orient(position)>orient(getLimit(true));return exceededMin||exceededMax;}return {mount:mount,move:move,jump:jump,translate:translate,shift:shift,cancel:cancel,toIndex:toIndex,toPosition:toPosition,getPosition:getPosition,getLimit:getLimit,exceededLimit:exceededLimit,reposition:reposition};}function Controller(Splide2,Components2,options){var _EventInterface6=EventInterface(Splide2),on=_EventInterface6.on;var Move=Components2.Move;var getPosition=Move.getPosition,getLimit=Move.getLimit,toPosition=Move.toPosition;var _Components2$Slides=Components2.Slides,isEnough=_Components2$Slides.isEnough,getLength=_Components2$Slides.getLength;var isLoop=Splide2.is(LOOP);var isSlide=Splide2.is(SLIDE);var getNext=apply(getAdjacent,false);var getPrev=apply(getAdjacent,true);var currIndex=options.start||0;var prevIndex=currIndex;var slideCount;var perMove;var perPage;function mount(){init();on([EVENT_UPDATED,EVENT_REFRESH],init);}function init(){slideCount=getLength(true);perMove=options.perMove;perPage=options.perPage;var index=clamp(currIndex,0,slideCount-1);if(index!==currIndex){currIndex=index;Move.reposition();}}function go(control,allowSameIndex,callback){if(!isBusy()){var dest=parse(control);var index=loop(dest);if(index>-1&&(allowSameIndex||index!==currIndex)){setIndex(index);Move.move(dest,index,prevIndex,callback);}}}function scroll(destination,duration,snap,callback){Components2.Scroll.scroll(destination,duration,snap,function(){setIndex(loop(Move.toIndex(getPosition())));callback&&callback();});}function parse(control){var index=currIndex;if(isString$1(control)){var _ref=control.match(/([+\-<>])(\d+)?/)||[],indicator=_ref[1],number=_ref[2];if(indicator==="+"||indicator==="-"){index=computeDestIndex(currIndex+ +(""+indicator+(+number||1)),currIndex);}else if(indicator===">"){index=number?toIndex(+number):getNext(true);}else if(indicator==="<"){index=getPrev(true);}}else {index=isLoop?control:clamp(control,0,getEnd());}return index;}function getAdjacent(prev,destination){var number=perMove||(hasFocus()?1:perPage);var dest=computeDestIndex(currIndex+number*(prev?-1:1),currIndex,!(perMove||hasFocus()));if(dest===-1&&isSlide){if(!approximatelyEqual(getPosition(),getLimit(!prev),1)){return prev?0:getEnd();}}return destination?dest:loop(dest);}function computeDestIndex(dest,from,snapPage){if(isEnough()){var end=getEnd();var index=computeMovableDestIndex(dest);if(index!==dest){from=dest;dest=index;snapPage=false;}if(dest<0||dest>end){if(between(0,dest,from,true)||between(end,from,dest,true)){dest=toIndex(toPage(dest));}else {if(isLoop){dest=snapPage?dest<0?-(slideCount%perPage||perPage):slideCount:dest;}else if(options.rewind){dest=dest<0?end:0;}else {dest=-1;}}}else {if(snapPage&&dest!==from){dest=toIndex(toPage(from)+(dest<from?-1:1));}}}else {dest=-1;}return dest;}function computeMovableDestIndex(dest){if(isSlide&&options.trimSpace==="move"&&dest!==currIndex){var position=getPosition();while(position===toPosition(dest,true)&&between(dest,0,Splide2.length-1,!options.rewind)){dest<currIndex?--dest:++dest;}}return dest;}function loop(index){return isLoop?(index+slideCount)%slideCount||0:index;}function getEnd(){return max(slideCount-(hasFocus()||isLoop&&perMove?1:perPage),0);}function toIndex(page){return clamp(hasFocus()?page:perPage*page,0,getEnd());}function toPage(index){return hasFocus()?index:floor((index>=getEnd()?slideCount-1:index)/perPage);}function toDest(destination){var closest=Move.toIndex(destination);return isSlide?clamp(closest,0,getEnd()):closest;}function setIndex(index){if(index!==currIndex){prevIndex=currIndex;currIndex=index;}}function getIndex(prev){return prev?prevIndex:currIndex;}function hasFocus(){return !isUndefined$1(options.focus)||options.isNavigation;}function isBusy(){return Splide2.state.is([MOVING,SCROLLING])&&!!options.waitForTransition;}return {mount:mount,go:go,scroll:scroll,getNext:getNext,getPrev:getPrev,getAdjacent:getAdjacent,getEnd:getEnd,setIndex:setIndex,getIndex:getIndex,toIndex:toIndex,toPage:toPage,toDest:toDest,hasFocus:hasFocus,isBusy:isBusy};}var XML_NAME_SPACE="http://www.w3.org/2000/svg";var PATH="m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z";var SIZE=40;function Arrows(Splide2,Components2,options){var event=EventInterface(Splide2);var on=event.on,bind=event.bind,emit=event.emit;var classes=options.classes,i18n=options.i18n;var Elements=Components2.Elements,Controller=Components2.Controller;var userArrows=Elements.arrows,track=Elements.track;var wrapper=userArrows;var prev=Elements.prev;var next=Elements.next;var created;var wrapperClasses;var arrows={};function mount(){init();on(EVENT_UPDATED,remount);}function remount(){destroy();mount();}function init(){var enabled=options.arrows;if(enabled&&!(prev&&next)){createArrows();}if(prev&&next){assign(arrows,{prev:prev,next:next});display(wrapper,enabled?"":"none");addClass(wrapper,wrapperClasses=CLASS_ARROWS+"--"+options.direction);if(enabled){listen();update();setAttribute([prev,next],ARIA_CONTROLS,track.id);emit(EVENT_ARROWS_MOUNTED,prev,next);}}}function destroy(){event.destroy();removeClass(wrapper,wrapperClasses);if(created){remove(userArrows?[prev,next]:wrapper);prev=next=null;}else {removeAttribute([prev,next],ALL_ATTRIBUTES);}}function listen(){on([EVENT_MOVED,EVENT_REFRESH,EVENT_SCROLLED],update);bind(next,"click",apply(go,">"));bind(prev,"click",apply(go,"<"));}function go(control){Controller.go(control,true);}function createArrows(){wrapper=userArrows||create("div",classes.arrows);prev=createArrow(true);next=createArrow(false);created=true;append(wrapper,[prev,next]);!userArrows&&before(wrapper,track);}function createArrow(prev2){var arrow="<button class=\""+classes.arrow+" "+(prev2?classes.prev:classes.next)+"\" type=\"button\"><svg xmlns=\""+XML_NAME_SPACE+"\" viewBox=\"0 0 "+SIZE+" "+SIZE+"\" width=\""+SIZE+"\" height=\""+SIZE+"\" focusable=\"false\"><path d=\""+(options.arrowPath||PATH)+"\" />";return parseHtml(arrow);}function update(){var index=Splide2.index;var prevIndex=Controller.getPrev();var nextIndex=Controller.getNext();var prevLabel=prevIndex>-1&&index<prevIndex?i18n.last:i18n.prev;var nextLabel=nextIndex>-1&&index>nextIndex?i18n.first:i18n.next;prev.disabled=prevIndex<0;next.disabled=nextIndex<0;setAttribute(prev,ARIA_LABEL,prevLabel);setAttribute(next,ARIA_LABEL,nextLabel);emit(EVENT_ARROWS_UPDATED,prev,next,prevIndex,nextIndex);}return {arrows:arrows,mount:mount,destroy:destroy};}var INTERVAL_DATA_ATTRIBUTE=DATA_ATTRIBUTE+"-interval";function Autoplay(Splide2,Components2,options){var _EventInterface7=EventInterface(Splide2),on=_EventInterface7.on,bind=_EventInterface7.bind,emit=_EventInterface7.emit;var interval=RequestInterval(options.interval,Splide2.go.bind(Splide2,">"),onAnimationFrame);var isPaused=interval.isPaused;var Elements=Components2.Elements,_Components2$Elements4=Components2.Elements,root=_Components2$Elements4.root,toggle=_Components2$Elements4.toggle;var autoplay=options.autoplay;var hovered;var focused;var stopped=autoplay==="pause";function mount(){if(autoplay){listen();toggle&&setAttribute(toggle,ARIA_CONTROLS,Elements.track.id);stopped||play();update();}}function listen(){if(options.pauseOnHover){bind(root,"mouseenter mouseleave",function(e){hovered=e.type==="mouseenter";autoToggle();});}if(options.pauseOnFocus){bind(root,"focusin focusout",function(e){focused=e.type==="focusin";autoToggle();});}if(toggle){bind(toggle,"click",function(){stopped?play():pause(true);});}on([EVENT_MOVE,EVENT_SCROLL,EVENT_REFRESH],interval.rewind);on(EVENT_MOVE,onMove);}function play(){if(isPaused()&&Components2.Slides.isEnough()){interval.start(!options.resetProgress);focused=hovered=stopped=false;update();emit(EVENT_AUTOPLAY_PLAY);}}function pause(stop){if(stop===void 0){stop=true;}stopped=!!stop;update();if(!isPaused()){interval.pause();emit(EVENT_AUTOPLAY_PAUSE);}}function autoToggle(){if(!stopped){hovered||focused?pause(false):play();}}function update(){if(toggle){toggleClass(toggle,CLASS_ACTIVE,!stopped);setAttribute(toggle,ARIA_LABEL,options.i18n[stopped?"play":"pause"]);}}function onAnimationFrame(rate){var bar=Elements.bar;bar&&style(bar,"width",rate*100+"%");emit(EVENT_AUTOPLAY_PLAYING,rate);}function onMove(index){var Slide=Components2.Slides.getAt(index);interval.set(Slide&&+getAttribute(Slide.slide,INTERVAL_DATA_ATTRIBUTE)||options.interval);}return {mount:mount,destroy:interval.cancel,play:play,pause:pause,isPaused:isPaused};}function Cover(Splide2,Components2,options){var _EventInterface8=EventInterface(Splide2),on=_EventInterface8.on;function mount(){if(options.cover){on(EVENT_LAZYLOAD_LOADED,apply(toggle,true));on([EVENT_MOUNTED,EVENT_UPDATED,EVENT_REFRESH],apply(cover,true));}}function cover(cover2){Components2.Slides.forEach(function(Slide){var img=child(Slide.container||Slide.slide,"img");if(img&&img.src){toggle(cover2,img,Slide);}});}function toggle(cover2,img,Slide){Slide.style("background",cover2?"center/cover no-repeat url(\""+img.src+"\")":"",true);display(img,cover2?"none":"");}return {mount:mount,destroy:apply(cover,false)};}var BOUNCE_DIFF_THRESHOLD=10;var BOUNCE_DURATION=600;var FRICTION_FACTOR=0.6;var BASE_VELOCITY=1.5;var MIN_DURATION=800;function Scroll(Splide2,Components2,options){var _EventInterface9=EventInterface(Splide2),on=_EventInterface9.on,emit=_EventInterface9.emit;var set=Splide2.state.set;var Move=Components2.Move;var getPosition=Move.getPosition,getLimit=Move.getLimit,exceededLimit=Move.exceededLimit,translate=Move.translate;var interval;var callback;var friction=1;function mount(){on(EVENT_MOVE,clear);on([EVENT_UPDATED,EVENT_REFRESH],cancel);}function scroll(destination,duration,snap,onScrolled,noConstrain){var from=getPosition();clear();if(snap){var size=Components2.Layout.sliderSize();var offset=sign(destination)*size*floor(abs(destination)/size)||0;destination=Move.toPosition(Components2.Controller.toDest(destination%size))+offset;}var noDistance=approximatelyEqual(from,destination,1);friction=1;duration=noDistance?0:duration||max(abs(destination-from)/BASE_VELOCITY,MIN_DURATION);callback=onScrolled;interval=RequestInterval(duration,onEnd,apply(update,from,destination,noConstrain),1);set(SCROLLING);emit(EVENT_SCROLL);interval.start();}function onEnd(){set(IDLE);callback&&callback();emit(EVENT_SCROLLED);}function update(from,to,noConstrain,rate){var position=getPosition();var target=from+(to-from)*easing(rate);var diff=(target-position)*friction;translate(position+diff);if(Splide2.is(SLIDE)&&!noConstrain&&exceededLimit()){friction*=FRICTION_FACTOR;if(abs(diff)<BOUNCE_DIFF_THRESHOLD){scroll(getLimit(exceededLimit(true)),BOUNCE_DURATION,false,callback,true);}}}function clear(){if(interval){interval.cancel();}}function cancel(){if(interval&&!interval.isPaused()){clear();onEnd();}}function easing(t){var easingFunc=options.easingFunc;return easingFunc?easingFunc(t):1-Math.pow(1-t,4);}return {mount:mount,destroy:clear,scroll:scroll,cancel:cancel};}var SCROLL_LISTENER_OPTIONS={passive:false,capture:true};function Drag(Splide2,Components2,options){var _EventInterface10=EventInterface(Splide2),on=_EventInterface10.on,emit=_EventInterface10.emit,bind=_EventInterface10.bind,unbind=_EventInterface10.unbind;var state=Splide2.state;var Move=Components2.Move,Scroll=Components2.Scroll,Controller=Components2.Controller,track=Components2.Elements.track,reduce=Components2.Media.reduce;var _Components2$Directio2=Components2.Direction,resolve=_Components2$Directio2.resolve,orient=_Components2$Directio2.orient;var getPosition=Move.getPosition,exceededLimit=Move.exceededLimit;var basePosition;var baseEvent;var prevBaseEvent;var isFree;var dragging;var exceeded=false;var clickPrevented;var disabled;var target;function mount(){bind(track,POINTER_MOVE_EVENTS,noop,SCROLL_LISTENER_OPTIONS);bind(track,POINTER_UP_EVENTS,noop,SCROLL_LISTENER_OPTIONS);bind(track,POINTER_DOWN_EVENTS,onPointerDown,SCROLL_LISTENER_OPTIONS);bind(track,"click",onClick,{capture:true});bind(track,"dragstart",prevent);on([EVENT_MOUNTED,EVENT_UPDATED],init);}function init(){var drag=options.drag;disable(!drag);isFree=drag==="free";}function onPointerDown(e){clickPrevented=false;if(!disabled){var isTouch=isTouchEvent(e);if(isDraggable(e.target)&&(isTouch||!e.button)){if(!Controller.isBusy()){target=isTouch?track:window;dragging=state.is([MOVING,SCROLLING]);prevBaseEvent=null;bind(target,POINTER_MOVE_EVENTS,onPointerMove,SCROLL_LISTENER_OPTIONS);bind(target,POINTER_UP_EVENTS,onPointerUp,SCROLL_LISTENER_OPTIONS);Move.cancel();Scroll.cancel();save(e);}else {prevent(e,true);}}}}function onPointerMove(e){if(!state.is(DRAGGING)){state.set(DRAGGING);emit(EVENT_DRAG);}if(e.cancelable){if(dragging){Move.translate(basePosition+constrain(diffCoord(e)));var expired=diffTime(e)>LOG_INTERVAL;var hasExceeded=exceeded!==(exceeded=exceededLimit());if(expired||hasExceeded){save(e);}clickPrevented=true;emit(EVENT_DRAGGING);prevent(e);}else if(isSliderDirection(e)){dragging=shouldStart(e);prevent(e);}}}function onPointerUp(e){if(state.is(DRAGGING)){state.set(IDLE);emit(EVENT_DRAGGED);}if(dragging){move(e);prevent(e);}unbind(target,POINTER_MOVE_EVENTS,onPointerMove);unbind(target,POINTER_UP_EVENTS,onPointerUp);dragging=false;}function onClick(e){if(!disabled&&clickPrevented){prevent(e,true);}}function save(e){prevBaseEvent=baseEvent;baseEvent=e;basePosition=getPosition();}function move(e){var velocity=computeVelocity(e);var destination=computeDestination(velocity);var rewind=options.rewind&&options.rewindByDrag;reduce(false);if(isFree){Controller.scroll(destination,0,options.snap);}else if(Splide2.is(FADE)){Controller.go(orient(sign(velocity))<0?rewind?"<":"-":rewind?">":"+");}else if(Splide2.is(SLIDE)&&exceeded&&rewind){Controller.go(exceededLimit(true)?">":"<");}else {Controller.go(Controller.toDest(destination),true);}reduce(true);}function shouldStart(e){var thresholds=options.dragMinThreshold;var isObj=isObject$4(thresholds);var mouse=isObj&&thresholds.mouse||0;var touch=(isObj?thresholds.touch:+thresholds)||10;return abs(diffCoord(e))>(isTouchEvent(e)?touch:mouse);}function isSliderDirection(e){return abs(diffCoord(e))>abs(diffCoord(e,true));}function computeVelocity(e){if(Splide2.is(LOOP)||!exceeded){var time=diffTime(e);if(time&&time<LOG_INTERVAL){return diffCoord(e)/time;}}return 0;}function computeDestination(velocity){return getPosition()+sign(velocity)*min(abs(velocity)*(options.flickPower||600),isFree?Infinity:Components2.Layout.listSize()*(options.flickMaxPages||1));}function diffCoord(e,orthogonal){return coordOf(e,orthogonal)-coordOf(getBaseEvent(e),orthogonal);}function diffTime(e){return timeOf(e)-timeOf(getBaseEvent(e));}function getBaseEvent(e){return baseEvent===e&&prevBaseEvent||baseEvent;}function coordOf(e,orthogonal){return (isTouchEvent(e)?e.changedTouches[0]:e)["page"+resolve(orthogonal?"Y":"X")];}function constrain(diff){return diff/(exceeded&&Splide2.is(SLIDE)?FRICTION:1);}function isDraggable(target2){var noDrag=options.noDrag;return !matches(target2,"."+CLASS_PAGINATION_PAGE+", ."+CLASS_ARROW)&&(!noDrag||!matches(target2,noDrag));}function isTouchEvent(e){return typeof TouchEvent!=="undefined"&&e instanceof TouchEvent;}function isDragging(){return dragging;}function disable(value){disabled=value;}return {mount:mount,disable:disable,isDragging:isDragging};}var NORMALIZATION_MAP={Spacebar:" ",Right:ARROW_RIGHT,Left:ARROW_LEFT,Up:ARROW_UP,Down:ARROW_DOWN};function normalizeKey(key){key=isString$1(key)?key:key.key;return NORMALIZATION_MAP[key]||key;}var KEYBOARD_EVENT="keydown";function Keyboard(Splide2,Components2,options){var _EventInterface11=EventInterface(Splide2),on=_EventInterface11.on,bind=_EventInterface11.bind,unbind=_EventInterface11.unbind;var root=Splide2.root;var resolve=Components2.Direction.resolve;var target;var disabled;function mount(){init();on(EVENT_UPDATED,destroy);on(EVENT_UPDATED,init);on(EVENT_MOVE,onMove);}function init(){var keyboard=options.keyboard;if(keyboard){target=keyboard==="global"?window:root;bind(target,KEYBOARD_EVENT,onKeydown);}}function destroy(){unbind(target,KEYBOARD_EVENT);}function disable(value){disabled=value;}function onMove(){var _disabled=disabled;disabled=true;nextTick(function(){disabled=_disabled;});}function onKeydown(e){if(!disabled){var key=normalizeKey(e);if(key===resolve(ARROW_LEFT)){Splide2.go("<");}else if(key===resolve(ARROW_RIGHT)){Splide2.go(">");}}}return {mount:mount,destroy:destroy,disable:disable};}var SRC_DATA_ATTRIBUTE=DATA_ATTRIBUTE+"-lazy";var SRCSET_DATA_ATTRIBUTE=SRC_DATA_ATTRIBUTE+"-srcset";var IMAGE_SELECTOR="["+SRC_DATA_ATTRIBUTE+"], ["+SRCSET_DATA_ATTRIBUTE+"]";function LazyLoad(Splide2,Components2,options){var _EventInterface12=EventInterface(Splide2),on=_EventInterface12.on,off=_EventInterface12.off,bind=_EventInterface12.bind,emit=_EventInterface12.emit;var isSequential=options.lazyLoad==="sequential";var events=[EVENT_MOUNTED,EVENT_REFRESH,EVENT_MOVED,EVENT_SCROLLED];var entries=[];function mount(){if(options.lazyLoad){init();on(EVENT_REFRESH,init);isSequential||on(events,observe);}}function init(){empty(entries);Components2.Slides.forEach(function(Slide){queryAll(Slide.slide,IMAGE_SELECTOR).forEach(function(img){var src=getAttribute(img,SRC_DATA_ATTRIBUTE);var srcset=getAttribute(img,SRCSET_DATA_ATTRIBUTE);if(src!==img.src||srcset!==img.srcset){var className=options.classes.spinner;var parent=img.parentElement;var spinner=child(parent,"."+className)||create("span",className,parent);entries.push([img,Slide,spinner]);img.src||display(img,"none");}});});isSequential&&loadNext();}function observe(){entries=entries.filter(function(data){var distance=options.perPage*((options.preloadPages||1)+1)-1;return data[1].isWithin(Splide2.index,distance)?load(data):true;});entries.length||off(events);}function load(data){var img=data[0];addClass(data[1].slide,CLASS_LOADING);bind(img,"load error",apply(onLoad,data));setAttribute(img,"src",getAttribute(img,SRC_DATA_ATTRIBUTE));setAttribute(img,"srcset",getAttribute(img,SRCSET_DATA_ATTRIBUTE));removeAttribute(img,SRC_DATA_ATTRIBUTE);removeAttribute(img,SRCSET_DATA_ATTRIBUTE);}function onLoad(data,e){var img=data[0],Slide=data[1];removeClass(Slide.slide,CLASS_LOADING);if(e.type!=="error"){remove(data[2]);display(img,"");emit(EVENT_LAZYLOAD_LOADED,img,Slide);emit(EVENT_RESIZE);}isSequential&&loadNext();}function loadNext(){entries.length&&load(entries.shift());}return {mount:mount,destroy:apply(empty,entries)};}function Pagination(Splide2,Components2,options){var event=EventInterface(Splide2);var on=event.on,emit=event.emit,bind=event.bind;var Slides=Components2.Slides,Elements=Components2.Elements,Controller=Components2.Controller;var hasFocus=Controller.hasFocus,getIndex=Controller.getIndex,go=Controller.go;var resolve=Components2.Direction.resolve;var items=[];var list;var paginationClasses;function mount(){destroy();on([EVENT_UPDATED,EVENT_REFRESH],mount);if(options.pagination&&Slides.isEnough()){on([EVENT_MOVE,EVENT_SCROLL,EVENT_SCROLLED],update);createPagination();update();emit(EVENT_PAGINATION_MOUNTED,{list:list,items:items},getAt(Splide2.index));}}function destroy(){if(list){remove(Elements.pagination?slice(list.children):list);removeClass(list,paginationClasses);empty(items);list=null;}event.destroy();}function createPagination(){var length=Splide2.length;var classes=options.classes,i18n=options.i18n,perPage=options.perPage;var max=hasFocus()?length:ceil(length/perPage);list=Elements.pagination||create("ul",classes.pagination,Elements.track.parentElement);addClass(list,paginationClasses=CLASS_PAGINATION+"--"+getDirection());setAttribute(list,ROLE,"tablist");setAttribute(list,ARIA_LABEL,i18n.select);setAttribute(list,ARIA_ORIENTATION,getDirection()===TTB?"vertical":"");for(var i=0;i<max;i++){var li=create("li",null,list);var button=create("button",{class:classes.page,type:"button"},li);var controls=Slides.getIn(i).map(function(Slide){return Slide.slide.id;});var text=!hasFocus()&&perPage>1?i18n.pageX:i18n.slideX;bind(button,"click",apply(onClick,i));if(options.paginationKeyboard){bind(button,"keydown",apply(onKeydown,i));}setAttribute(li,ROLE,"presentation");setAttribute(button,ROLE,"tab");setAttribute(button,ARIA_CONTROLS,controls.join(" "));setAttribute(button,ARIA_LABEL,format(text,i+1));setAttribute(button,TAB_INDEX,-1);items.push({li:li,button:button,page:i});}}function onClick(page){go(">"+page,true);}function onKeydown(page,e){var length=items.length;var key=normalizeKey(e);var dir=getDirection();var nextPage=-1;if(key===resolve(ARROW_RIGHT,false,dir)){nextPage=++page%length;}else if(key===resolve(ARROW_LEFT,false,dir)){nextPage=(--page+length)%length;}else if(key==="Home"){nextPage=0;}else if(key==="End"){nextPage=length-1;}var item=items[nextPage];if(item){focus(item.button);go(">"+nextPage);prevent(e,true);}}function getDirection(){return options.paginationDirection||options.direction;}function getAt(index){return items[Controller.toPage(index)];}function update(){var prev=getAt(getIndex(true));var curr=getAt(getIndex());if(prev){var button=prev.button;removeClass(button,CLASS_ACTIVE);removeAttribute(button,ARIA_SELECTED);setAttribute(button,TAB_INDEX,-1);}if(curr){var _button=curr.button;addClass(_button,CLASS_ACTIVE);setAttribute(_button,ARIA_SELECTED,true);setAttribute(_button,TAB_INDEX,"");}emit(EVENT_PAGINATION_UPDATED,{list:list,items:items},prev,curr);}return {items:items,mount:mount,destroy:destroy,getAt:getAt,update:update};}var TRIGGER_KEYS=[" ","Enter"];function Sync(Splide2,Components2,options){var isNavigation=options.isNavigation,slideFocus=options.slideFocus;var events=[];function setup(){Splide2.options={slideFocus:isUndefined$1(slideFocus)?isNavigation:slideFocus};}function mount(){Splide2.splides.forEach(function(target){if(!target.isParent){sync(Splide2,target.splide);sync(target.splide,Splide2);}});if(isNavigation){navigate();}}function destroy(){events.forEach(function(event){event.destroy();});empty(events);}function remount(){destroy();mount();}function sync(splide,target){var event=EventInterface(splide);event.on(EVENT_MOVE,function(index,prev,dest){target.go(target.is(LOOP)?dest:index);});events.push(event);}function navigate(){var event=EventInterface(Splide2);var on=event.on;on(EVENT_CLICK,onClick);on(EVENT_SLIDE_KEYDOWN,onKeydown);on([EVENT_MOUNTED,EVENT_UPDATED],update);events.push(event);event.emit(EVENT_NAVIGATION_MOUNTED,Splide2.splides);}function update(){setAttribute(Components2.Elements.list,ARIA_ORIENTATION,options.direction===TTB?"vertical":"");}function onClick(Slide){Splide2.go(Slide.index);}function onKeydown(Slide,e){if(includes(TRIGGER_KEYS,normalizeKey(e))){onClick(Slide);prevent(e);}}return {setup:setup,mount:mount,destroy:destroy,remount:remount};}function Wheel(Splide2,Components2,options){var _EventInterface13=EventInterface(Splide2),bind=_EventInterface13.bind;var lastTime=0;function mount(){if(options.wheel){bind(Components2.Elements.track,"wheel",onWheel,SCROLL_LISTENER_OPTIONS);}}function onWheel(e){if(e.cancelable){var deltaY=e.deltaY;var backwards=deltaY<0;var timeStamp=timeOf(e);var _min=options.wheelMinThreshold||0;var sleep=options.wheelSleep||0;if(abs(deltaY)>_min&&timeStamp-lastTime>sleep){Splide2.go(backwards?"<":">");lastTime=timeStamp;}shouldPrevent(backwards)&&prevent(e);}}function shouldPrevent(backwards){return !options.releaseWheel||Splide2.state.is(MOVING)||Components2.Controller.getAdjacent(backwards)!==-1;}return {mount:mount};}var SR_REMOVAL_DELAY=90;function Live(Splide2,Components2,options){var _EventInterface14=EventInterface(Splide2),on=_EventInterface14.on;var track=Components2.Elements.track;var enabled=options.live&&!options.isNavigation;var sr=create("span",CLASS_SR);var interval=RequestInterval(SR_REMOVAL_DELAY,apply(toggle,false));function mount(){if(enabled){disable(!Components2.Autoplay.isPaused());setAttribute(track,ARIA_ATOMIC,true);sr.textContent="\u2026";on(EVENT_AUTOPLAY_PLAY,apply(disable,true));on(EVENT_AUTOPLAY_PAUSE,apply(disable,false));on([EVENT_MOVED,EVENT_SCROLLED],apply(toggle,true));}}function toggle(active){setAttribute(track,ARIA_BUSY,active);if(active){append(track,sr);interval.start();}else {remove(sr);}}function destroy(){removeAttribute(track,[ARIA_LIVE,ARIA_ATOMIC,ARIA_BUSY]);remove(sr);}function disable(disabled){if(enabled){setAttribute(track,ARIA_LIVE,disabled?"off":"polite");}}return {mount:mount,disable:disable,destroy:destroy};}var ComponentConstructors=/*#__PURE__*/Object.freeze({__proto__:null,Media:Media,Direction:Direction,Elements:Elements,Slides:Slides,Layout:Layout,Clones:Clones,Move:Move,Controller:Controller,Arrows:Arrows,Autoplay:Autoplay,Cover:Cover,Scroll:Scroll,Drag:Drag,Keyboard:Keyboard,LazyLoad:LazyLoad,Pagination:Pagination,Sync:Sync,Wheel:Wheel,Live:Live});var I18N={prev:"Previous slide",next:"Next slide",first:"Go to first slide",last:"Go to last slide",slideX:"Go to slide %s",pageX:"Go to page %s",play:"Start autoplay",pause:"Pause autoplay",carousel:"carousel",slide:"slide",select:"Select a slide to show",slideLabel:"%s of %s"};var DEFAULTS={type:"slide",role:"region",speed:400,perPage:1,cloneStatus:true,arrows:true,pagination:true,paginationKeyboard:true,interval:5e3,pauseOnHover:true,pauseOnFocus:true,resetProgress:true,easing:"cubic-bezier(0.25, 1, 0.5, 1)",drag:true,direction:"ltr",trimSpace:true,focusableNodes:"a, button, textarea, input, select, iframe",live:true,classes:CLASSES,i18n:I18N,reducedMotion:{speed:0,rewindSpeed:0,autoplay:"pause"}};function Fade(Splide2,Components2,options){var _EventInterface15=EventInterface(Splide2),on=_EventInterface15.on;function mount(){on([EVENT_MOUNTED,EVENT_REFRESH],function(){nextTick(function(){Components2.Slides.style("transition","opacity "+options.speed+"ms "+options.easing);});});}function start(index,done){var track=Components2.Elements.track;style(track,"height",unit(rect(track).height));nextTick(function(){done();style(track,"height","");});}return {mount:mount,start:start,cancel:noop};}function Slide(Splide2,Components2,options){var _EventInterface16=EventInterface(Splide2),bind=_EventInterface16.bind;var Move=Components2.Move,Controller=Components2.Controller,Scroll=Components2.Scroll;var list=Components2.Elements.list;var transition=apply(style,list,"transition");var endCallback;function mount(){bind(list,"transitionend",function(e){if(e.target===list&&endCallback){cancel();endCallback();}});}function start(index,done){var destination=Move.toPosition(index,true);var position=Move.getPosition();var speed=getSpeed(index);if(abs(destination-position)>=1&&speed>=1){if(options.useScroll){Scroll.scroll(destination,speed,false,done);}else {transition("transform "+speed+"ms "+options.easing);Move.translate(destination,true);endCallback=done;}}else {Move.jump(index);done();}}function cancel(){transition("");Scroll.cancel();}function getSpeed(index){var rewindSpeed=options.rewindSpeed;if(Splide2.is(SLIDE)&&rewindSpeed){var prev=Controller.getIndex(true);var end=Controller.getEnd();if(prev===0&&index>=end||prev>=end&&index===0){return rewindSpeed;}}return options.speed;}return {mount:mount,start:start,cancel:cancel};}var _Splide=/*#__PURE__*/function(){function _Splide(target,options){this.event=EventInterface();this.Components={};this.state=State(CREATED);this.splides=[];this._o={};this._E={};var root=isString$1(target)?query(document,target):target;assert(root,root+" is invalid.");this.root=root;options=merge$1({label:getAttribute(root,ARIA_LABEL)||"",labelledby:getAttribute(root,ARIA_LABELLEDBY)||""},DEFAULTS,_Splide.defaults,options||{});try{merge$1(options,JSON.parse(getAttribute(root,DATA_ATTRIBUTE)));}catch(e){assert(false,"Invalid JSON");}this._o=Object.create(merge$1({},options));}var _proto=_Splide.prototype;_proto.mount=function mount(Extensions,Transition){var _this=this;var state=this.state,Components2=this.Components;assert(state.is([CREATED,DESTROYED]),"Already mounted!");state.set(CREATED);this._C=Components2;this._T=Transition||this._T||(this.is(FADE)?Fade:Slide);this._E=Extensions||this._E;var Constructors=assign({},ComponentConstructors,this._E,{Transition:this._T});forOwn(Constructors,function(Component,key){var component=Component(_this,Components2,_this._o);Components2[key]=component;component.setup&&component.setup();});forOwn(Components2,function(component){component.mount&&component.mount();});this.emit(EVENT_MOUNTED);addClass(this.root,CLASS_INITIALIZED);state.set(IDLE);this.emit(EVENT_READY);return this;};_proto.sync=function sync(splide){this.splides.push({splide:splide});splide.splides.push({splide:this,isParent:true});if(this.state.is(IDLE)){this._C.Sync.remount();splide.Components.Sync.remount();}return this;};_proto.go=function go(control){this._C.Controller.go(control);return this;};_proto.on=function on(events,callback){this.event.on(events,callback);return this;};_proto.off=function off(events){this.event.off(events);return this;};_proto.emit=function emit(event){var _this$event;(_this$event=this.event).emit.apply(_this$event,[event].concat(slice(arguments,1)));return this;};_proto.add=function add(slides,index){this._C.Slides.add(slides,index);return this;};_proto.remove=function remove(matcher){this._C.Slides.remove(matcher);return this;};_proto.is=function is(type){return this._o.type===type;};_proto.refresh=function refresh(){this.emit(EVENT_REFRESH);return this;};_proto.destroy=function destroy(completely){if(completely===void 0){completely=true;}var event=this.event,state=this.state;if(state.is(CREATED)){EventInterface(this).on(EVENT_READY,this.destroy.bind(this,completely));}else {forOwn(this._C,function(component){component.destroy&&component.destroy(completely);},true);event.emit(EVENT_DESTROY);event.destroy();completely&&empty(this.splides);state.set(DESTROYED);}return this;};_createClass(_Splide,[{key:"options",get:function get(){return this._o;},set:function set(options){this._C.Media.set(options,true);}},{key:"length",get:function get(){return this._C.Slides.getLength(true);}},{key:"index",get:function get(){return this._C.Controller.getIndex();}}]);return _Splide;}();var Splide=_Splide;Splide.defaults={};Splide.STATES=STATES;

  var HomePage=function HomePage(){// === DOM & VARS ===
  var DOM={};DOM.slider=document.querySelector('.m-slider');// === INIT =========
  var init=function init(){new Splide(DOM.slider,{type:'loop'}).mount();console.log('home');};// === EVENTS / XHR =======
  // === FUNCTIONS ====
  init();};

  // Unique ID creation requires a high quality random # generator. In the browser we therefore
  // require the crypto API and do not support built-in fallback to lower quality random number
  // generators (like Math.random()).
  var getRandomValues;var rnds8=new Uint8Array(16);function rng(){// lazy load so that environments that need to polyfill have a chance to do so
  if(!getRandomValues){// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
  // find the complete implementation of crypto (msCrypto) on IE11.
  getRandomValues=typeof crypto!=='undefined'&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!=='undefined'&&typeof msCrypto.getRandomValues==='function'&&msCrypto.getRandomValues.bind(msCrypto);if(!getRandomValues){throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');}}return getRandomValues(rnds8);}

  var REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

  function validate(uuid){return typeof uuid==='string'&&REGEX.test(uuid);}

  /**
   * Convert array of 16 byte values to UUID string format of the form:
   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
   */var byteToHex=[];for(var i=0;i<256;++i){byteToHex.push((i+0x100).toString(16).substr(1));}function stringify(arr){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;// Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  var uuid=(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+'-'+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+'-'+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+'-'+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+'-'+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase();// Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields
  if(!validate(uuid)){throw TypeError('Stringified UUID is invalid');}return uuid;}

  function parse(uuid){if(!validate(uuid)){throw TypeError('Invalid UUID');}var v;var arr=new Uint8Array(16);// Parse ########-....-....-....-............
  arr[0]=(v=parseInt(uuid.slice(0,8),16))>>>24;arr[1]=v>>>16&0xff;arr[2]=v>>>8&0xff;arr[3]=v&0xff;// Parse ........-####-....-....-............
  arr[4]=(v=parseInt(uuid.slice(9,13),16))>>>8;arr[5]=v&0xff;// Parse ........-....-####-....-............
  arr[6]=(v=parseInt(uuid.slice(14,18),16))>>>8;arr[7]=v&0xff;// Parse ........-....-....-####-............
  arr[8]=(v=parseInt(uuid.slice(19,23),16))>>>8;arr[9]=v&0xff;// Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)
  arr[10]=(v=parseInt(uuid.slice(24,36),16))/0x10000000000&0xff;arr[11]=v/0x100000000&0xff;arr[12]=v>>>24&0xff;arr[13]=v>>>16&0xff;arr[14]=v>>>8&0xff;arr[15]=v&0xff;return arr;}

  function stringToBytes(str){str=unescape(encodeURIComponent(str));// UTF8 escape
  var bytes=[];for(var i=0;i<str.length;++i){bytes.push(str.charCodeAt(i));}return bytes;}var DNS='6ba7b810-9dad-11d1-80b4-00c04fd430c8';var URL='6ba7b811-9dad-11d1-80b4-00c04fd430c8';function v35(name,version,hashfunc){function generateUUID(value,namespace,buf,offset){if(typeof value==='string'){value=stringToBytes(value);}if(typeof namespace==='string'){namespace=parse(namespace);}if(namespace.length!==16){throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');}// Compute hash of namespace and value, Per 4.3
  // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
  // hashfunc([...namespace, ... value])`
  var bytes=new Uint8Array(16+value.length);bytes.set(namespace);bytes.set(value,namespace.length);bytes=hashfunc(bytes);bytes[6]=bytes[6]&0x0f|version;bytes[8]=bytes[8]&0x3f|0x80;if(buf){offset=offset||0;for(var i=0;i<16;++i){buf[offset+i]=bytes[i];}return buf;}return stringify(bytes);}// Function#name is not settable on some platforms (#270)
  try{generateUUID.name=name;// eslint-disable-next-line no-empty
  }catch(err){}// For CommonJS default export support
  generateUUID.DNS=DNS;generateUUID.URL=URL;return generateUUID;}

  /*
   * Browser-compatible JavaScript MD5
   *
   * Modification of JavaScript MD5
   * https://github.com/blueimp/JavaScript-MD5
   *
   * Copyright 2011, Sebastian Tschan
   * https://blueimp.net
   *
   * Licensed under the MIT license:
   * https://opensource.org/licenses/MIT
   *
   * Based on
   * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
   * Digest Algorithm, as defined in RFC 1321.
   * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
   * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
   * Distributed under the BSD License
   * See http://pajhome.org.uk/crypt/md5 for more info.
   */function md5(bytes){if(typeof bytes==='string'){var msg=unescape(encodeURIComponent(bytes));// UTF8 escape
  bytes=new Uint8Array(msg.length);for(var i=0;i<msg.length;++i){bytes[i]=msg.charCodeAt(i);}}return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes),bytes.length*8));}/*
   * Convert an array of little-endian words to an array of bytes
   */function md5ToHexEncodedArray(input){var output=[];var length32=input.length*32;var hexTab='0123456789abcdef';for(var i=0;i<length32;i+=8){var x=input[i>>5]>>>i%32&0xff;var hex=parseInt(hexTab.charAt(x>>>4&0x0f)+hexTab.charAt(x&0x0f),16);output.push(hex);}return output;}/**
   * Calculate output length with padding and bit length
   */function getOutputLength(inputLength8){return (inputLength8+64>>>9<<4)+14+1;}/*
   * Calculate the MD5 of an array of little-endian words, and a bit length.
   */function wordsToMd5(x,len){/* append padding */x[len>>5]|=0x80<<len%32;x[getOutputLength(len)-1]=len;var a=1732584193;var b=-271733879;var c=-1732584194;var d=271733878;for(var i=0;i<x.length;i+=16){var olda=a;var oldb=b;var oldc=c;var oldd=d;a=md5ff(a,b,c,d,x[i],7,-680876936);d=md5ff(d,a,b,c,x[i+1],12,-389564586);c=md5ff(c,d,a,b,x[i+2],17,606105819);b=md5ff(b,c,d,a,x[i+3],22,-1044525330);a=md5ff(a,b,c,d,x[i+4],7,-176418897);d=md5ff(d,a,b,c,x[i+5],12,1200080426);c=md5ff(c,d,a,b,x[i+6],17,-1473231341);b=md5ff(b,c,d,a,x[i+7],22,-45705983);a=md5ff(a,b,c,d,x[i+8],7,1770035416);d=md5ff(d,a,b,c,x[i+9],12,-1958414417);c=md5ff(c,d,a,b,x[i+10],17,-42063);b=md5ff(b,c,d,a,x[i+11],22,-1990404162);a=md5ff(a,b,c,d,x[i+12],7,1804603682);d=md5ff(d,a,b,c,x[i+13],12,-40341101);c=md5ff(c,d,a,b,x[i+14],17,-1502002290);b=md5ff(b,c,d,a,x[i+15],22,1236535329);a=md5gg(a,b,c,d,x[i+1],5,-165796510);d=md5gg(d,a,b,c,x[i+6],9,-1069501632);c=md5gg(c,d,a,b,x[i+11],14,643717713);b=md5gg(b,c,d,a,x[i],20,-373897302);a=md5gg(a,b,c,d,x[i+5],5,-701558691);d=md5gg(d,a,b,c,x[i+10],9,38016083);c=md5gg(c,d,a,b,x[i+15],14,-660478335);b=md5gg(b,c,d,a,x[i+4],20,-405537848);a=md5gg(a,b,c,d,x[i+9],5,568446438);d=md5gg(d,a,b,c,x[i+14],9,-1019803690);c=md5gg(c,d,a,b,x[i+3],14,-187363961);b=md5gg(b,c,d,a,x[i+8],20,1163531501);a=md5gg(a,b,c,d,x[i+13],5,-1444681467);d=md5gg(d,a,b,c,x[i+2],9,-51403784);c=md5gg(c,d,a,b,x[i+7],14,1735328473);b=md5gg(b,c,d,a,x[i+12],20,-1926607734);a=md5hh(a,b,c,d,x[i+5],4,-378558);d=md5hh(d,a,b,c,x[i+8],11,-2022574463);c=md5hh(c,d,a,b,x[i+11],16,1839030562);b=md5hh(b,c,d,a,x[i+14],23,-35309556);a=md5hh(a,b,c,d,x[i+1],4,-1530992060);d=md5hh(d,a,b,c,x[i+4],11,1272893353);c=md5hh(c,d,a,b,x[i+7],16,-155497632);b=md5hh(b,c,d,a,x[i+10],23,-1094730640);a=md5hh(a,b,c,d,x[i+13],4,681279174);d=md5hh(d,a,b,c,x[i],11,-358537222);c=md5hh(c,d,a,b,x[i+3],16,-722521979);b=md5hh(b,c,d,a,x[i+6],23,76029189);a=md5hh(a,b,c,d,x[i+9],4,-640364487);d=md5hh(d,a,b,c,x[i+12],11,-421815835);c=md5hh(c,d,a,b,x[i+15],16,530742520);b=md5hh(b,c,d,a,x[i+2],23,-995338651);a=md5ii(a,b,c,d,x[i],6,-198630844);d=md5ii(d,a,b,c,x[i+7],10,1126891415);c=md5ii(c,d,a,b,x[i+14],15,-1416354905);b=md5ii(b,c,d,a,x[i+5],21,-57434055);a=md5ii(a,b,c,d,x[i+12],6,1700485571);d=md5ii(d,a,b,c,x[i+3],10,-1894986606);c=md5ii(c,d,a,b,x[i+10],15,-1051523);b=md5ii(b,c,d,a,x[i+1],21,-2054922799);a=md5ii(a,b,c,d,x[i+8],6,1873313359);d=md5ii(d,a,b,c,x[i+15],10,-30611744);c=md5ii(c,d,a,b,x[i+6],15,-1560198380);b=md5ii(b,c,d,a,x[i+13],21,1309151649);a=md5ii(a,b,c,d,x[i+4],6,-145523070);d=md5ii(d,a,b,c,x[i+11],10,-1120210379);c=md5ii(c,d,a,b,x[i+2],15,718787259);b=md5ii(b,c,d,a,x[i+9],21,-343485551);a=safeAdd(a,olda);b=safeAdd(b,oldb);c=safeAdd(c,oldc);d=safeAdd(d,oldd);}return [a,b,c,d];}/*
   * Convert an array bytes to an array of little-endian words
   * Characters >255 have their high-byte silently ignored.
   */function bytesToWords(input){if(input.length===0){return [];}var length8=input.length*8;var output=new Uint32Array(getOutputLength(length8));for(var i=0;i<length8;i+=8){output[i>>5]|=(input[i/8]&0xff)<<i%32;}return output;}/*
   * Add integers, wrapping at 2^32. This uses 16-bit operations internally
   * to work around bugs in some JS interpreters.
   */function safeAdd(x,y){var lsw=(x&0xffff)+(y&0xffff);var msw=(x>>16)+(y>>16)+(lsw>>16);return msw<<16|lsw&0xffff;}/*
   * Bitwise rotate a 32-bit number to the left.
   */function bitRotateLeft(num,cnt){return num<<cnt|num>>>32-cnt;}/*
   * These functions implement the four basic operations the algorithm uses.
   */function md5cmn(q,a,b,x,s,t){return safeAdd(bitRotateLeft(safeAdd(safeAdd(a,q),safeAdd(x,t)),s),b);}function md5ff(a,b,c,d,x,s,t){return md5cmn(b&c|~b&d,a,b,x,s,t);}function md5gg(a,b,c,d,x,s,t){return md5cmn(b&d|c&~d,a,b,x,s,t);}function md5hh(a,b,c,d,x,s,t){return md5cmn(b^c^d,a,b,x,s,t);}function md5ii(a,b,c,d,x,s,t){return md5cmn(c^(b|~d),a,b,x,s,t);}

  v35('v3',0x30,md5);

  function v4(options,buf,offset){options=options||{};var rnds=options.random||(options.rng||rng)();// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
  rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;// Copy bytes to buffer, if provided
  if(buf){offset=offset||0;for(var i=0;i<16;++i){buf[offset+i]=rnds[i];}return buf;}return stringify(rnds);}

  // Adapted from Chris Veness' SHA1 code at
  // http://www.movable-type.co.uk/scripts/sha1.html
  function f(s,x,y,z){switch(s){case 0:return x&y^~x&z;case 1:return x^y^z;case 2:return x&y^x&z^y&z;case 3:return x^y^z;}}function ROTL(x,n){return x<<n|x>>>32-n;}function sha1(bytes){var K=[0x5a827999,0x6ed9eba1,0x8f1bbcdc,0xca62c1d6];var H=[0x67452301,0xefcdab89,0x98badcfe,0x10325476,0xc3d2e1f0];if(typeof bytes==='string'){var msg=unescape(encodeURIComponent(bytes));// UTF8 escape
  bytes=[];for(var i=0;i<msg.length;++i){bytes.push(msg.charCodeAt(i));}}else if(!Array.isArray(bytes)){// Convert Array-like to Array
  bytes=Array.prototype.slice.call(bytes);}bytes.push(0x80);var l=bytes.length/4+2;var N=Math.ceil(l/16);var M=new Array(N);for(var _i=0;_i<N;++_i){var arr=new Uint32Array(16);for(var j=0;j<16;++j){arr[j]=bytes[_i*64+j*4]<<24|bytes[_i*64+j*4+1]<<16|bytes[_i*64+j*4+2]<<8|bytes[_i*64+j*4+3];}M[_i]=arr;}M[N-1][14]=(bytes.length-1)*8/Math.pow(2,32);M[N-1][14]=Math.floor(M[N-1][14]);M[N-1][15]=(bytes.length-1)*8&0xffffffff;for(var _i2=0;_i2<N;++_i2){var W=new Uint32Array(80);for(var t=0;t<16;++t){W[t]=M[_i2][t];}for(var _t=16;_t<80;++_t){W[_t]=ROTL(W[_t-3]^W[_t-8]^W[_t-14]^W[_t-16],1);}var a=H[0];var b=H[1];var c=H[2];var d=H[3];var e=H[4];for(var _t2=0;_t2<80;++_t2){var s=Math.floor(_t2/20);var T=ROTL(a,5)+f(s,b,c,d)+e+K[s]+W[_t2]>>>0;e=d;d=c;c=ROTL(b,30)>>>0;b=a;a=T;}H[0]=H[0]+a>>>0;H[1]=H[1]+b>>>0;H[2]=H[2]+c>>>0;H[3]=H[3]+d>>>0;H[4]=H[4]+e>>>0;}return [H[0]>>24&0xff,H[0]>>16&0xff,H[0]>>8&0xff,H[0]&0xff,H[1]>>24&0xff,H[1]>>16&0xff,H[1]>>8&0xff,H[1]&0xff,H[2]>>24&0xff,H[2]>>16&0xff,H[2]>>8&0xff,H[2]&0xff,H[3]>>24&0xff,H[3]>>16&0xff,H[3]>>8&0xff,H[3]&0xff,H[4]>>24&0xff,H[4]>>16&0xff,H[4]>>8&0xff,H[4]&0xff];}

  v35('v5',0x50,sha1);

  var lodash = {exports: {}};

  (function(module,exports){(function(){/** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined$1;/** Used as the semantic version number. */var VERSION='4.17.21';/** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200;/** Error message constants. */var CORE_ERROR_TEXT='Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',FUNC_ERROR_TEXT='Expected a function',INVALID_TEMPL_VAR_ERROR_TEXT='Invalid `variable` option passed into `_.template`';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as the maximum memoize cache size. */var MAX_MEMOIZE_SIZE=500;/** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__';/** Used to compose bitmasks for cloning. */var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;/** Used to compose bitmasks for value comparisons. */var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;/** Used to compose bitmasks for function metadata. */var WRAP_BIND_FLAG=1,WRAP_BIND_KEY_FLAG=2,WRAP_CURRY_BOUND_FLAG=4,WRAP_CURRY_FLAG=8,WRAP_CURRY_RIGHT_FLAG=16,WRAP_PARTIAL_FLAG=32,WRAP_PARTIAL_RIGHT_FLAG=64,WRAP_ARY_FLAG=128,WRAP_REARG_FLAG=256,WRAP_FLIP_FLAG=512;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=800,HOT_SPAN=16;/** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0;/** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;/** Used to associate wrap methods with their bit flags. */var wrapFlags=[['ary',WRAP_ARY_FLAG],['bind',WRAP_BIND_FLAG],['bindKey',WRAP_BIND_KEY_FLAG],['curry',WRAP_CURRY_FLAG],['curryRight',WRAP_CURRY_RIGHT_FLAG],['flip',WRAP_FLIP_FLAG],['partial',WRAP_PARTIAL_FLAG],['partialRight',WRAP_PARTIAL_RIGHT_FLAG],['rearg',WRAP_REARG_FLAG]];/** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',asyncTag='[object AsyncFunction]',boolTag='[object Boolean]',dateTag='[object Date]',domExcTag='[object DOMException]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',nullTag='[object Null]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',undefinedTag='[object Undefined]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';/** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;/** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);/** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;/** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;/**
  	   * Used to match `RegExp`
  	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
  	   */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);/** Used to match leading whitespace. */var reTrimStart=/^\s+/;/** Used to match a single whitespace character. */var reWhitespace=/\s/;/** Used to match wrap detail comments. */var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;/** Used to match words composed of alphanumeric characters. */var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;/**
  	   * Used to validate the `validate` option in `_.template` variable.
  	   *
  	   * Forbids characters which could potentially change the meaning of the function argument definition:
  	   * - "()," (modification of function parameters)
  	   * - "=" (default value)
  	   * - "[]{}" (destructuring of function parameters)
  	   * - "/" (beginning of a comment)
  	   * - whitespace
  	   */var reForbiddenIdentifierChars=/[()=,{}\[\]\/\s]/;/** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g;/**
  	   * Used to match
  	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
  	   */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/;/** Used to match Latin Unicode letters (excluding mathematical operators). */var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;/** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/;/** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g;/** Used to compose unicode character classes. */var rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f",reComboHalfMarksRange="\\ufe20-\\ufe2f",rsComboSymbolsRange="\\u20d0-\\u20ff",rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsDingbatRange="\\u2700-\\u27bf",rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange="\\u2000-\\u206f",rsSpaceRange=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange="\\ufe0e\\ufe0f",rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;/** Used to compose unicode capture groups. */var rsApos="['\u2019]",rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz="\\ud83c[\\udffb-\\udfff]",rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",rsUpper='['+rsUpperRange+']',rsZWJ="\\u200d";/** Used to compose unicode regexes. */var rsMiscLower='(?:'+rsLower+'|'+rsMisc+')',rsMiscUpper='(?:'+rsUpper+'|'+rsMisc+')',rsOptContrLower='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptContrUpper='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsOrdLower='\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',rsOrdUpper='\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match apostrophes. */var reApos=RegExp(rsApos,'g');/**
  	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
  	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
  	   */var reComboMark=RegExp(rsCombo,'g');/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/** Used to match complex or compound words. */var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptContrLower+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsMiscUpper+'+'+rsOptContrUpper+'(?='+[rsBreak,rsUpper+rsMiscLower,'$'].join('|')+')',rsUpper+'?'+rsMiscLower+'+'+rsOptContrLower,rsUpper+'+'+rsOptContrUpper,rsOrdUpper,rsOrdLower,rsDigits,rsEmoji].join('|'),'g');/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+']');/** Used to detect strings that need a more robust regexp to match words. */var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;/** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];/** Used to make template sourceURLs easier to identify. */var templateCounter=-1;/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;/** Used to map Latin Unicode letters to basic Latin letters. */var deburredLetters={// Latin-1 Supplement block.
  '\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',// Latin Extended-A block.
  "\u0100":'A',"\u0102":'A',"\u0104":'A',"\u0101":'a',"\u0103":'a',"\u0105":'a',"\u0106":'C',"\u0108":'C',"\u010A":'C',"\u010C":'C',"\u0107":'c',"\u0109":'c',"\u010B":'c',"\u010D":'c',"\u010E":'D',"\u0110":'D',"\u010F":'d',"\u0111":'d',"\u0112":'E',"\u0114":'E',"\u0116":'E',"\u0118":'E',"\u011A":'E',"\u0113":'e',"\u0115":'e',"\u0117":'e',"\u0119":'e',"\u011B":'e',"\u011C":'G',"\u011E":'G',"\u0120":'G',"\u0122":'G',"\u011D":'g',"\u011F":'g',"\u0121":'g',"\u0123":'g',"\u0124":'H',"\u0126":'H',"\u0125":'h',"\u0127":'h',"\u0128":'I',"\u012A":'I',"\u012C":'I',"\u012E":'I',"\u0130":'I',"\u0129":'i',"\u012B":'i',"\u012D":'i',"\u012F":'i',"\u0131":'i',"\u0134":'J',"\u0135":'j',"\u0136":'K',"\u0137":'k',"\u0138":'k',"\u0139":'L',"\u013B":'L',"\u013D":'L',"\u013F":'L',"\u0141":'L',"\u013A":'l',"\u013C":'l',"\u013E":'l',"\u0140":'l',"\u0142":'l',"\u0143":'N',"\u0145":'N',"\u0147":'N',"\u014A":'N',"\u0144":'n',"\u0146":'n',"\u0148":'n',"\u014B":'n',"\u014C":'O',"\u014E":'O',"\u0150":'O',"\u014D":'o',"\u014F":'o',"\u0151":'o',"\u0154":'R',"\u0156":'R',"\u0158":'R',"\u0155":'r',"\u0157":'r',"\u0159":'r',"\u015A":'S',"\u015C":'S',"\u015E":'S',"\u0160":'S',"\u015B":'s',"\u015D":'s',"\u015F":'s',"\u0161":'s',"\u0162":'T',"\u0164":'T',"\u0166":'T',"\u0163":'t',"\u0165":'t',"\u0167":'t',"\u0168":'U',"\u016A":'U',"\u016C":'U',"\u016E":'U',"\u0170":'U',"\u0172":'U',"\u0169":'u',"\u016B":'u',"\u016D":'u',"\u016F":'u',"\u0171":'u',"\u0173":'u',"\u0174":'W',"\u0175":'w',"\u0176":'Y',"\u0177":'y',"\u0178":'Y',"\u0179":'Z',"\u017B":'Z',"\u017D":'Z',"\u017A":'z',"\u017C":'z',"\u017E":'z',"\u0132":'IJ',"\u0133":'ij',"\u0152":'Oe',"\u0153":'oe',"\u0149":"'n","\u017F":'s'};/** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};/** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};/** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r',"\u2028":'u2028',"\u2029":'u2029'};/** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt;/** Detect free variable `global` from Node.js. */var freeGlobal=_typeof(commonjsGlobal)=='object'&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal;/** Detect free variable `self`. */var freeSelf=(typeof self==="undefined"?"undefined":_typeof(self))=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Detect free variable `exports`. */var freeExports=exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&'object'=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
  var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
  return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/*--------------------------------------------------------------------------*/ /**
  	   * A faster alternative to `Function#apply`, this function invokes `func`
  	   * with the `this` binding of `thisArg` and the arguments of `args`.
  	   *
  	   * @private
  	   * @param {Function} func The function to invoke.
  	   * @param {*} thisArg The `this` binding of `func`.
  	   * @param {Array} args The arguments to invoke `func` with.
  	   * @returns {*} Returns the result of `func`.
  	   */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/**
  	   * A specialized version of `baseAggregator` for arrays.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} setter The function to set `accumulator` values.
  	   * @param {Function} iteratee The iteratee to transform keys.
  	   * @param {Object} accumulator The initial aggregated object.
  	   * @returns {Function} Returns `accumulator`.
  	   */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array==null?0:array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}/**
  	   * A specialized version of `_.forEach` for arrays without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @returns {Array} Returns `array`.
  	   */function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**
  	   * A specialized version of `_.forEachRight` for arrays without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @returns {Array} Returns `array`.
  	   */function arrayEachRight(array,iteratee){var length=array==null?0:array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}/**
  	   * A specialized version of `_.every` for arrays without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} predicate The function invoked per iteration.
  	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
  	   *  else `false`.
  	   */function arrayEvery(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}/**
  	   * A specialized version of `_.filter` for arrays without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} predicate The function invoked per iteration.
  	   * @returns {Array} Returns the new filtered array.
  	   */function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}/**
  	   * A specialized version of `_.includes` for arrays without support for
  	   * specifying an index to search from.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to inspect.
  	   * @param {*} target The value to search for.
  	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
  	   */function arrayIncludes(array,value){var length=array==null?0:array.length;return !!length&&baseIndexOf(array,value,0)>-1;}/**
  	   * This function is like `arrayIncludes` except that it accepts a comparator.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to inspect.
  	   * @param {*} target The value to search for.
  	   * @param {Function} comparator The comparator invoked per element.
  	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
  	   */function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}/**
  	   * A specialized version of `_.map` for arrays without support for iteratee
  	   * shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @returns {Array} Returns the new mapped array.
  	   */function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}/**
  	   * Appends the elements of `values` to `array`.
  	   *
  	   * @private
  	   * @param {Array} array The array to modify.
  	   * @param {Array} values The values to append.
  	   * @returns {Array} Returns `array`.
  	   */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}/**
  	   * A specialized version of `_.reduce` for arrays without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @param {*} [accumulator] The initial value.
  	   * @param {boolean} [initAccum] Specify using the first element of `array` as
  	   *  the initial value.
  	   * @returns {*} Returns the accumulated value.
  	   */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array==null?0:array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}/**
  	   * A specialized version of `_.reduceRight` for arrays without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @param {*} [accumulator] The initial value.
  	   * @param {boolean} [initAccum] Specify using the last element of `array` as
  	   *  the initial value.
  	   * @returns {*} Returns the accumulated value.
  	   */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array==null?0:array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}/**
  	   * A specialized version of `_.some` for arrays without support for iteratee
  	   * shorthands.
  	   *
  	   * @private
  	   * @param {Array} [array] The array to iterate over.
  	   * @param {Function} predicate The function invoked per iteration.
  	   * @returns {boolean} Returns `true` if any element passes the predicate check,
  	   *  else `false`.
  	   */function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}/**
  	   * Gets the size of an ASCII `string`.
  	   *
  	   * @private
  	   * @param {string} string The string inspect.
  	   * @returns {number} Returns the string size.
  	   */var asciiSize=baseProperty('length');/**
  	   * Converts an ASCII `string` to an array.
  	   *
  	   * @private
  	   * @param {string} string The string to convert.
  	   * @returns {Array} Returns the converted array.
  	   */function asciiToArray(string){return string.split('');}/**
  	   * Splits an ASCII `string` into an array of its words.
  	   *
  	   * @private
  	   * @param {string} The string to inspect.
  	   * @returns {Array} Returns the words of `string`.
  	   */function asciiWords(string){return string.match(reAsciiWord)||[];}/**
  	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
  	   * without support for iteratee shorthands, which iterates over `collection`
  	   * using `eachFunc`.
  	   *
  	   * @private
  	   * @param {Array|Object} collection The collection to inspect.
  	   * @param {Function} predicate The function invoked per iteration.
  	   * @param {Function} eachFunc The function to iterate over `collection`.
  	   * @returns {*} Returns the found element or its key, else `undefined`.
  	   */function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}/**
  	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
  	   * support for iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} array The array to inspect.
  	   * @param {Function} predicate The function invoked per iteration.
  	   * @param {number} fromIndex The index to search from.
  	   * @param {boolean} [fromRight] Specify iterating from right to left.
  	   * @returns {number} Returns the index of the matched value, else `-1`.
  	   */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return -1;}/**
  	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
  	   *
  	   * @private
  	   * @param {Array} array The array to inspect.
  	   * @param {*} value The value to search for.
  	   * @param {number} fromIndex The index to search from.
  	   * @returns {number} Returns the index of the matched value, else `-1`.
  	   */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**
  	   * This function is like `baseIndexOf` except that it accepts a comparator.
  	   *
  	   * @private
  	   * @param {Array} array The array to inspect.
  	   * @param {*} value The value to search for.
  	   * @param {number} fromIndex The index to search from.
  	   * @param {Function} comparator The comparator invoked per element.
  	   * @returns {number} Returns the index of the matched value, else `-1`.
  	   */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return -1;}/**
  	   * The base implementation of `_.isNaN` without support for number objects.
  	   *
  	   * @private
  	   * @param {*} value The value to check.
  	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
  	   */function baseIsNaN(value){return value!==value;}/**
  	   * The base implementation of `_.mean` and `_.meanBy` without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} array The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @returns {number} Returns the mean.
  	   */function baseMean(array,iteratee){var length=array==null?0:array.length;return length?baseSum(array,iteratee)/length:NAN;}/**
  	   * The base implementation of `_.property` without support for deep paths.
  	   *
  	   * @private
  	   * @param {string} key The key of the property to get.
  	   * @returns {Function} Returns the new accessor function.
  	   */function baseProperty(key){return function(object){return object==null?undefined$1:object[key];};}/**
  	   * The base implementation of `_.propertyOf` without support for deep paths.
  	   *
  	   * @private
  	   * @param {Object} object The object to query.
  	   * @returns {Function} Returns the new accessor function.
  	   */function basePropertyOf(object){return function(key){return object==null?undefined$1:object[key];};}/**
  	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
  	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
  	   *
  	   * @private
  	   * @param {Array|Object} collection The collection to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @param {*} accumulator The initial value.
  	   * @param {boolean} initAccum Specify using the first or last element of
  	   *  `collection` as the initial value.
  	   * @param {Function} eachFunc The function to iterate over `collection`.
  	   * @returns {*} Returns the accumulated value.
  	   */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}/**
  	   * The base implementation of `_.sortBy` which uses `comparer` to define the
  	   * sort order of `array` and replaces criteria objects with their corresponding
  	   * values.
  	   *
  	   * @private
  	   * @param {Array} array The array to sort.
  	   * @param {Function} comparer The function to define sort order.
  	   * @returns {Array} Returns `array`.
  	   */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}/**
  	   * The base implementation of `_.sum` and `_.sumBy` without support for
  	   * iteratee shorthands.
  	   *
  	   * @private
  	   * @param {Array} array The array to iterate over.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @returns {number} Returns the sum.
  	   */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined$1){result=result===undefined$1?current:result+current;}}return result;}/**
  	   * The base implementation of `_.times` without support for iteratee shorthands
  	   * or max array length checks.
  	   *
  	   * @private
  	   * @param {number} n The number of times to invoke `iteratee`.
  	   * @param {Function} iteratee The function invoked per iteration.
  	   * @returns {Array} Returns the array of results.
  	   */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**
  	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
  	   * of key-value pairs for `object` corresponding to the property names of `props`.
  	   *
  	   * @private
  	   * @param {Object} object The object to query.
  	   * @param {Array} props The property names to get values for.
  	   * @returns {Object} Returns the key-value pairs.
  	   */function baseToPairs(object,props){return arrayMap(props,function(key){return [key,object[key]];});}/**
  	   * The base implementation of `_.trim`.
  	   *
  	   * @private
  	   * @param {string} string The string to trim.
  	   * @returns {string} Returns the trimmed string.
  	   */function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,''):string;}/**
  	   * The base implementation of `_.unary` without support for storing metadata.
  	   *
  	   * @private
  	   * @param {Function} func The function to cap arguments for.
  	   * @returns {Function} Returns the new capped function.
  	   */function baseUnary(func){return function(value){return func(value);};}/**
  	   * The base implementation of `_.values` and `_.valuesIn` which creates an
  	   * array of `object` property values corresponding to the property names
  	   * of `props`.
  	   *
  	   * @private
  	   * @param {Object} object The object to query.
  	   * @param {Array} props The property names to get values for.
  	   * @returns {Object} Returns the array of property values.
  	   */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}/**
  	   * Checks if a `cache` value for `key` exists.
  	   *
  	   * @private
  	   * @param {Object} cache The cache to query.
  	   * @param {string} key The key of the entry to check.
  	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
  	   */function cacheHas(cache,key){return cache.has(key);}/**
  	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
  	   * that is not found in the character symbols.
  	   *
  	   * @private
  	   * @param {Array} strSymbols The string symbols to inspect.
  	   * @param {Array} chrSymbols The character symbols to find.
  	   * @returns {number} Returns the index of the first unmatched string symbol.
  	   */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
  	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
  	   * that is not found in the character symbols.
  	   *
  	   * @private
  	   * @param {Array} strSymbols The string symbols to inspect.
  	   * @param {Array} chrSymbols The character symbols to find.
  	   * @returns {number} Returns the index of the last unmatched string symbol.
  	   */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}/**
  	   * Gets the number of `placeholder` occurrences in `array`.
  	   *
  	   * @private
  	   * @param {Array} array The array to inspect.
  	   * @param {*} placeholder The placeholder to search for.
  	   * @returns {number} Returns the placeholder count.
  	   */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}/**
  	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
  	   * letters to basic Latin letters.
  	   *
  	   * @private
  	   * @param {string} letter The matched letter to deburr.
  	   * @returns {string} Returns the deburred letter.
  	   */var deburrLetter=basePropertyOf(deburredLetters);/**
  	   * Used by `_.escape` to convert characters to HTML entities.
  	   *
  	   * @private
  	   * @param {string} chr The matched character to escape.
  	   * @returns {string} Returns the escaped character.
  	   */var escapeHtmlChar=basePropertyOf(htmlEscapes);/**
  	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
  	   *
  	   * @private
  	   * @param {string} chr The matched character to escape.
  	   * @returns {string} Returns the escaped character.
  	   */function escapeStringChar(chr){return '\\'+stringEscapes[chr];}/**
  	   * Gets the value at `key` of `object`.
  	   *
  	   * @private
  	   * @param {Object} [object] The object to query.
  	   * @param {string} key The key of the property to get.
  	   * @returns {*} Returns the property value.
  	   */function getValue(object,key){return object==null?undefined$1:object[key];}/**
  	   * Checks if `string` contains Unicode symbols.
  	   *
  	   * @private
  	   * @param {string} string The string to inspect.
  	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
  	   */function hasUnicode(string){return reHasUnicode.test(string);}/**
  	   * Checks if `string` contains a word composed of Unicode symbols.
  	   *
  	   * @private
  	   * @param {string} string The string to inspect.
  	   * @returns {boolean} Returns `true` if a word is found, else `false`.
  	   */function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}/**
  	   * Converts `iterator` to an array.
  	   *
  	   * @private
  	   * @param {Object} iterator The iterator to convert.
  	   * @returns {Array} Returns the converted array.
  	   */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}/**
  	   * Converts `map` to its key-value pairs.
  	   *
  	   * @private
  	   * @param {Object} map The map to convert.
  	   * @returns {Array} Returns the key-value pairs.
  	   */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}/**
  	   * Creates a unary function that invokes `func` with its argument transformed.
  	   *
  	   * @private
  	   * @param {Function} func The function to wrap.
  	   * @param {Function} transform The argument transform.
  	   * @returns {Function} Returns the new function.
  	   */function overArg(func,transform){return function(arg){return func(transform(arg));};}/**
  	   * Replaces all `placeholder` elements in `array` with an internal placeholder
  	   * and returns an array of their indexes.
  	   *
  	   * @private
  	   * @param {Array} array The array to modify.
  	   * @param {*} placeholder The placeholder to replace.
  	   * @returns {Array} Returns the new array of placeholder indexes.
  	   */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}/**
  	   * Converts `set` to an array of its values.
  	   *
  	   * @private
  	   * @param {Object} set The set to convert.
  	   * @returns {Array} Returns the values.
  	   */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}/**
  	   * Converts `set` to its value-value pairs.
  	   *
  	   * @private
  	   * @param {Object} set The set to convert.
  	   * @returns {Array} Returns the value-value pairs.
  	   */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}/**
  	   * A specialized version of `_.indexOf` which performs strict equality
  	   * comparisons of values, i.e. `===`.
  	   *
  	   * @private
  	   * @param {Array} array The array to inspect.
  	   * @param {*} value The value to search for.
  	   * @param {number} fromIndex The index to search from.
  	   * @returns {number} Returns the index of the matched value, else `-1`.
  	   */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return -1;}/**
  	   * A specialized version of `_.lastIndexOf` which performs strict equality
  	   * comparisons of values, i.e. `===`.
  	   *
  	   * @private
  	   * @param {Array} array The array to inspect.
  	   * @param {*} value The value to search for.
  	   * @param {number} fromIndex The index to search from.
  	   * @returns {number} Returns the index of the matched value, else `-1`.
  	   */function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}/**
  	   * Gets the number of symbols in `string`.
  	   *
  	   * @private
  	   * @param {string} string The string to inspect.
  	   * @returns {number} Returns the string size.
  	   */function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}/**
  	   * Converts `string` to an array.
  	   *
  	   * @private
  	   * @param {string} string The string to convert.
  	   * @returns {Array} Returns the converted array.
  	   */function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}/**
  	   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
  	   * character of `string`.
  	   *
  	   * @private
  	   * @param {string} string The string to inspect.
  	   * @returns {number} Returns the index of the last non-whitespace character.
  	   */function trimmedEndIndex(string){var index=string.length;while(index--&&reWhitespace.test(string.charAt(index))){}return index;}/**
  	   * Used by `_.unescape` to convert HTML entities to characters.
  	   *
  	   * @private
  	   * @param {string} chr The matched character to unescape.
  	   * @returns {string} Returns the unescaped character.
  	   */var unescapeHtmlChar=basePropertyOf(htmlUnescapes);/**
  	   * Gets the size of a Unicode `string`.
  	   *
  	   * @private
  	   * @param {string} string The string inspect.
  	   * @returns {number} Returns the string size.
  	   */function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}/**
  	   * Converts a Unicode `string` to an array.
  	   *
  	   * @private
  	   * @param {string} string The string to convert.
  	   * @returns {Array} Returns the converted array.
  	   */function unicodeToArray(string){return string.match(reUnicode)||[];}/**
  	   * Splits a Unicode `string` into an array of its words.
  	   *
  	   * @private
  	   * @param {string} The string to inspect.
  	   * @returns {Array} Returns the words of `string`.
  	   */function unicodeWords(string){return string.match(reUnicodeWord)||[];}/*--------------------------------------------------------------------------*/ /**
  	   * Create a new pristine `lodash` function using the `context` object.
  	   *
  	   * @static
  	   * @memberOf _
  	   * @since 1.1.0
  	   * @category Util
  	   * @param {Object} [context=root] The context object.
  	   * @returns {Function} Returns a new `lodash` function.
  	   * @example
  	   *
  	   * _.mixin({ 'foo': _.constant('foo') });
  	   *
  	   * var lodash = _.runInContext();
  	   * lodash.mixin({ 'bar': lodash.constant('bar') });
  	   *
  	   * _.isFunction(_.foo);
  	   * // => true
  	   * _.isFunction(_.bar);
  	   * // => false
  	   *
  	   * lodash.isFunction(lodash.foo);
  	   * // => false
  	   * lodash.isFunction(lodash.bar);
  	   * // => true
  	   *
  	   * // Create a suped-up `defer` in Node.js.
  	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
  	   */var runInContext=function runInContext(context){context=context==null?root:_.defaults(root.Object(),context,_.pick(root,contextProps));/** Built-in constructor references. */var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=context['__core-js_shared__'];/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/** Used to generate unique IDs. */var idCounter=0;/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/**
  	     * Used to resolve the
  	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
  	     * of values.
  	     */var nativeObjectToString=objectProto.toString;/** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object);/** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined$1,_Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined$1,getPrototype=overArg(Object.getPrototypeOf,Object),objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=_Symbol?_Symbol.isConcatSpreadable:undefined$1,symIterator=_Symbol?_Symbol.iterator:undefined$1,symToStringTag=_Symbol?_Symbol.toStringTag:undefined$1;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();/** Mocked built-ins. */var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined$1,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;/* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');/** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap();/** Used to lookup unminified function names. */var realNames={};/** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);/** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol?_Symbol.prototype:undefined$1,symbolValueOf=symbolProto?symbolProto.valueOf:undefined$1,symbolToString=symbolProto?symbolProto.toString:undefined$1;/*------------------------------------------------------------------------*/ /**
  	     * Creates a `lodash` object which wraps `value` to enable implicit method
  	     * chain sequences. Methods that operate on and return arrays, collections,
  	     * and functions can be chained together. Methods that retrieve a single value
  	     * or may return a primitive value will automatically end the chain sequence
  	     * and return the unwrapped value. Otherwise, the value must be unwrapped
  	     * with `_#value`.
  	     *
  	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
  	     * enabled using `_.chain`.
  	     *
  	     * The execution of chained methods is lazy, that is, it's deferred until
  	     * `_#value` is implicitly or explicitly called.
  	     *
  	     * Lazy evaluation allows several methods to support shortcut fusion.
  	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
  	     * the creation of intermediate arrays and can greatly reduce the number of
  	     * iteratee executions. Sections of a chain sequence qualify for shortcut
  	     * fusion if the section is applied to an array and iteratees accept only
  	     * one argument. The heuristic for whether a section qualifies for shortcut
  	     * fusion is subject to change.
  	     *
  	     * Chaining is supported in custom builds as long as the `_#value` method is
  	     * directly or indirectly included in the build.
  	     *
  	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
  	     *
  	     * The wrapper `Array` methods are:
  	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
  	     *
  	     * The wrapper `String` methods are:
  	     * `replace` and `split`
  	     *
  	     * The wrapper methods that support shortcut fusion are:
  	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
  	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
  	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
  	     *
  	     * The chainable wrapper methods are:
  	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
  	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
  	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
  	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
  	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
  	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
  	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
  	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
  	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
  	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
  	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
  	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
  	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
  	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
  	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
  	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
  	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
  	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
  	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
  	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
  	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
  	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
  	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
  	     * `zipObject`, `zipObjectDeep`, and `zipWith`
  	     *
  	     * The wrapper methods that are **not** chainable by default are:
  	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
  	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
  	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
  	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
  	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
  	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
  	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
  	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
  	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
  	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
  	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
  	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
  	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
  	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
  	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
  	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
  	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
  	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
  	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
  	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
  	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
  	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
  	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
  	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
  	     * `upperFirst`, `value`, and `words`
  	     *
  	     * @name _
  	     * @constructor
  	     * @category Seq
  	     * @param {*} value The value to wrap in a `lodash` instance.
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * function square(n) {
  	     *   return n * n;
  	     * }
  	     *
  	     * var wrapped = _([1, 2, 3]);
  	     *
  	     * // Returns an unwrapped value.
  	     * wrapped.reduce(_.add);
  	     * // => 6
  	     *
  	     * // Returns a wrapped value.
  	     * var squares = wrapped.map(square);
  	     *
  	     * _.isArray(squares);
  	     * // => false
  	     *
  	     * _.isArray(squares.value());
  	     * // => true
  	     */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}/**
  	     * The base implementation of `_.create` without support for assigning
  	     * properties to the created object.
  	     *
  	     * @private
  	     * @param {Object} proto The object to inherit from.
  	     * @returns {Object} Returns the new object.
  	     */var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return {};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined$1;return result;};}();/**
  	     * The function whose prototype chain sequence wrappers inherit from.
  	     *
  	     * @private
  	     */function baseLodash(){// No operation performed.
  }/**
  	     * The base constructor for creating `lodash` wrapper objects.
  	     *
  	     * @private
  	     * @param {*} value The value to wrap.
  	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
  	     */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined$1;}/**
  	     * By default, the template delimiters used by lodash are like those in
  	     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
  	     * following template settings to use alternative delimiters.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @type {Object}
  	     */lodash.templateSettings={/**
  	       * Used to detect `data` property values to be HTML-escaped.
  	       *
  	       * @memberOf _.templateSettings
  	       * @type {RegExp}
  	       */'escape':reEscape,/**
  	       * Used to detect code to be evaluated.
  	       *
  	       * @memberOf _.templateSettings
  	       * @type {RegExp}
  	       */'evaluate':reEvaluate,/**
  	       * Used to detect `data` property values to inject.
  	       *
  	       * @memberOf _.templateSettings
  	       * @type {RegExp}
  	       */'interpolate':reInterpolate,/**
  	       * Used to reference the data object in the template text.
  	       *
  	       * @memberOf _.templateSettings
  	       * @type {string}
  	       */'variable':'',/**
  	       * Used to import variables into the compiled template.
  	       *
  	       * @memberOf _.templateSettings
  	       * @type {Object}
  	       */'imports':{/**
  	         * A reference to the `lodash` function.
  	         *
  	         * @memberOf _.templateSettings.imports
  	         * @type {Function}
  	         */'_':lodash}};// Ensure wrappers are instances of `baseLodash`.
  lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;/*------------------------------------------------------------------------*/ /**
  	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
  	     *
  	     * @private
  	     * @constructor
  	     * @param {*} value The value to wrap.
  	     */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}/**
  	     * Creates a clone of the lazy wrapper object.
  	     *
  	     * @private
  	     * @name clone
  	     * @memberOf LazyWrapper
  	     * @returns {Object} Returns the cloned `LazyWrapper` object.
  	     */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}/**
  	     * Reverses the direction of lazy iteration.
  	     *
  	     * @private
  	     * @name reverse
  	     * @memberOf LazyWrapper
  	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
  	     */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else {result=this.clone();result.__dir__*=-1;}return result;}/**
  	     * Extracts the unwrapped value from its lazy wrapper.
  	     *
  	     * @private
  	     * @name value
  	     * @memberOf LazyWrapper
  	     * @returns {*} Returns the unwrapped value.
  	     */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||!isRight&&arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else {break outer;}}}result[resIndex++]=value;}return result;}// Ensure `LazyWrapper` is an instance of `baseLodash`.
  LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;/*------------------------------------------------------------------------*/ /**
  	     * Creates a hash object.
  	     *
  	     * @private
  	     * @constructor
  	     * @param {Array} [entries] The key-value pairs to cache.
  	     */function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
  	     * Removes all key-value entries from the hash.
  	     *
  	     * @private
  	     * @name clear
  	     * @memberOf Hash
  	     */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}/**
  	     * Removes `key` and its value from the hash.
  	     *
  	     * @private
  	     * @name delete
  	     * @memberOf Hash
  	     * @param {Object} hash The hash to modify.
  	     * @param {string} key The key of the value to remove.
  	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
  	     */function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}/**
  	     * Gets the hash value for `key`.
  	     *
  	     * @private
  	     * @name get
  	     * @memberOf Hash
  	     * @param {string} key The key of the value to get.
  	     * @returns {*} Returns the entry value.
  	     */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined$1:result;}return hasOwnProperty.call(data,key)?data[key]:undefined$1;}/**
  	     * Checks if a hash value for `key` exists.
  	     *
  	     * @private
  	     * @name has
  	     * @memberOf Hash
  	     * @param {string} key The key of the entry to check.
  	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
  	     */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined$1:hasOwnProperty.call(data,key);}/**
  	     * Sets the hash `key` to `value`.
  	     *
  	     * @private
  	     * @name set
  	     * @memberOf Hash
  	     * @param {string} key The key of the value to set.
  	     * @param {*} value The value to set.
  	     * @returns {Object} Returns the hash instance.
  	     */function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined$1?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.
  Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/*------------------------------------------------------------------------*/ /**
  	     * Creates an list cache object.
  	     *
  	     * @private
  	     * @constructor
  	     * @param {Array} [entries] The key-value pairs to cache.
  	     */function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
  	     * Removes all key-value entries from the list cache.
  	     *
  	     * @private
  	     * @name clear
  	     * @memberOf ListCache
  	     */function listCacheClear(){this.__data__=[];this.size=0;}/**
  	     * Removes `key` and its value from the list cache.
  	     *
  	     * @private
  	     * @name delete
  	     * @memberOf ListCache
  	     * @param {string} key The key of the value to remove.
  	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
  	     */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else {splice.call(data,index,1);}--this.size;return true;}/**
  	     * Gets the list cache value for `key`.
  	     *
  	     * @private
  	     * @name get
  	     * @memberOf ListCache
  	     * @param {string} key The key of the value to get.
  	     * @returns {*} Returns the entry value.
  	     */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined$1:data[index][1];}/**
  	     * Checks if a list cache value for `key` exists.
  	     *
  	     * @private
  	     * @name has
  	     * @memberOf ListCache
  	     * @param {string} key The key of the entry to check.
  	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
  	     */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**
  	     * Sets the list cache `key` to `value`.
  	     *
  	     * @private
  	     * @name set
  	     * @memberOf ListCache
  	     * @param {string} key The key of the value to set.
  	     * @param {*} value The value to set.
  	     * @returns {Object} Returns the list cache instance.
  	     */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else {data[index][1]=value;}return this;}// Add methods to `ListCache`.
  ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/*------------------------------------------------------------------------*/ /**
  	     * Creates a map cache object to store key-value pairs.
  	     *
  	     * @private
  	     * @constructor
  	     * @param {Array} [entries] The key-value pairs to cache.
  	     */function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**
  	     * Removes all key-value entries from the map.
  	     *
  	     * @private
  	     * @name clear
  	     * @memberOf MapCache
  	     */function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}/**
  	     * Removes `key` and its value from the map.
  	     *
  	     * @private
  	     * @name delete
  	     * @memberOf MapCache
  	     * @param {string} key The key of the value to remove.
  	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
  	     */function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}/**
  	     * Gets the map value for `key`.
  	     *
  	     * @private
  	     * @name get
  	     * @memberOf MapCache
  	     * @param {string} key The key of the value to get.
  	     * @returns {*} Returns the entry value.
  	     */function mapCacheGet(key){return getMapData(this,key).get(key);}/**
  	     * Checks if a map value for `key` exists.
  	     *
  	     * @private
  	     * @name has
  	     * @memberOf MapCache
  	     * @param {string} key The key of the entry to check.
  	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
  	     */function mapCacheHas(key){return getMapData(this,key).has(key);}/**
  	     * Sets the map `key` to `value`.
  	     *
  	     * @private
  	     * @name set
  	     * @memberOf MapCache
  	     * @param {string} key The key of the value to set.
  	     * @param {*} value The value to set.
  	     * @returns {Object} Returns the map cache instance.
  	     */function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}// Add methods to `MapCache`.
  MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/*------------------------------------------------------------------------*/ /**
  	     *
  	     * Creates an array cache object to store unique values.
  	     *
  	     * @private
  	     * @constructor
  	     * @param {Array} [values] The values to cache.
  	     */function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}/**
  	     * Adds `value` to the array cache.
  	     *
  	     * @private
  	     * @name add
  	     * @memberOf SetCache
  	     * @alias push
  	     * @param {*} value The value to cache.
  	     * @returns {Object} Returns the cache instance.
  	     */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}/**
  	     * Checks if `value` is in the array cache.
  	     *
  	     * @private
  	     * @name has
  	     * @memberOf SetCache
  	     * @param {*} value The value to search for.
  	     * @returns {number} Returns `true` if `value` is found, else `false`.
  	     */function setCacheHas(value){return this.__data__.has(value);}// Add methods to `SetCache`.
  SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;/*------------------------------------------------------------------------*/ /**
  	     * Creates a stack cache object to store key-value pairs.
  	     *
  	     * @private
  	     * @constructor
  	     * @param {Array} [entries] The key-value pairs to cache.
  	     */function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}/**
  	     * Removes all key-value entries from the stack.
  	     *
  	     * @private
  	     * @name clear
  	     * @memberOf Stack
  	     */function stackClear(){this.__data__=new ListCache();this.size=0;}/**
  	     * Removes `key` and its value from the stack.
  	     *
  	     * @private
  	     * @name delete
  	     * @memberOf Stack
  	     * @param {string} key The key of the value to remove.
  	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
  	     */function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}/**
  	     * Gets the stack value for `key`.
  	     *
  	     * @private
  	     * @name get
  	     * @memberOf Stack
  	     * @param {string} key The key of the value to get.
  	     * @returns {*} Returns the entry value.
  	     */function stackGet(key){return this.__data__.get(key);}/**
  	     * Checks if a stack value for `key` exists.
  	     *
  	     * @private
  	     * @name has
  	     * @memberOf Stack
  	     * @param {string} key The key of the entry to check.
  	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
  	     */function stackHas(key){return this.__data__.has(key);}/**
  	     * Sets the stack `key` to `value`.
  	     *
  	     * @private
  	     * @name set
  	     * @memberOf Stack
  	     * @param {string} key The key of the value to set.
  	     * @param {*} value The value to set.
  	     * @returns {Object} Returns the stack cache instance.
  	     */function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}// Add methods to `Stack`.
  Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;/*------------------------------------------------------------------------*/ /**
  	     * Creates an array of the enumerable property names of the array-like `value`.
  	     *
  	     * @private
  	     * @param {*} value The value to query.
  	     * @param {boolean} inherited Specify returning inherited property names.
  	     * @returns {Array} Returns the array of property names.
  	     */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.
  key=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.
  isBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.
  isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.
  isIndex(key,length)))){result.push(key);}}return result;}/**
  	     * A specialized version of `_.sample` for arrays.
  	     *
  	     * @private
  	     * @param {Array} array The array to sample.
  	     * @returns {*} Returns the random element.
  	     */function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined$1;}/**
  	     * A specialized version of `_.sampleSize` for arrays.
  	     *
  	     * @private
  	     * @param {Array} array The array to sample.
  	     * @param {number} n The number of elements to sample.
  	     * @returns {Array} Returns the random elements.
  	     */function arraySampleSize(array,n){return shuffleSelf(copyArray(array),baseClamp(n,0,array.length));}/**
  	     * A specialized version of `_.shuffle` for arrays.
  	     *
  	     * @private
  	     * @param {Array} array The array to shuffle.
  	     * @returns {Array} Returns the new shuffled array.
  	     */function arrayShuffle(array){return shuffleSelf(copyArray(array));}/**
  	     * This function is like `assignValue` except that it doesn't assign
  	     * `undefined` values.
  	     *
  	     * @private
  	     * @param {Object} object The object to modify.
  	     * @param {string} key The key of the property to assign.
  	     * @param {*} value The value to assign.
  	     */function assignMergeValue(object,key,value){if(value!==undefined$1&&!eq(object[key],value)||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}/**
  	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
  	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons.
  	     *
  	     * @private
  	     * @param {Object} object The object to modify.
  	     * @param {string} key The key of the property to assign.
  	     * @param {*} value The value to assign.
  	     */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}/**
  	     * Gets the index at which the `key` is found in `array` of key-value pairs.
  	     *
  	     * @private
  	     * @param {Array} array The array to inspect.
  	     * @param {*} key The key to search for.
  	     * @returns {number} Returns the index of the matched value, else `-1`.
  	     */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return -1;}/**
  	     * Aggregates elements of `collection` on `accumulator` with keys transformed
  	     * by `iteratee` and values set by `setter`.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} setter The function to set `accumulator` values.
  	     * @param {Function} iteratee The iteratee to transform keys.
  	     * @param {Object} accumulator The initial aggregated object.
  	     * @returns {Function} Returns `accumulator`.
  	     */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}/**
  	     * The base implementation of `_.assign` without support for multiple sources
  	     * or `customizer` functions.
  	     *
  	     * @private
  	     * @param {Object} object The destination object.
  	     * @param {Object} source The source object.
  	     * @returns {Object} Returns `object`.
  	     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}/**
  	     * The base implementation of `_.assignIn` without support for multiple sources
  	     * or `customizer` functions.
  	     *
  	     * @private
  	     * @param {Object} object The destination object.
  	     * @param {Object} source The source object.
  	     * @returns {Object} Returns `object`.
  	     */function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}/**
  	     * The base implementation of `assignValue` and `assignMergeValue` without
  	     * value checks.
  	     *
  	     * @private
  	     * @param {Object} object The object to modify.
  	     * @param {string} key The key of the property to assign.
  	     * @param {*} value The value to assign.
  	     */function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{'configurable':true,'enumerable':true,'value':value,'writable':true});}else {object[key]=value;}}/**
  	     * The base implementation of `_.at` without support for individual paths.
  	     *
  	     * @private
  	     * @param {Object} object The object to iterate over.
  	     * @param {string[]} paths The property paths to pick.
  	     * @returns {Array} Returns the picked elements.
  	     */function baseAt(object,paths){var index=-1,length=paths.length,result=Array(length),skip=object==null;while(++index<length){result[index]=skip?undefined$1:get(object,paths[index]);}return result;}/**
  	     * The base implementation of `_.clamp` which doesn't coerce arguments.
  	     *
  	     * @private
  	     * @param {number} number The number to clamp.
  	     * @param {number} [lower] The lower bound.
  	     * @param {number} upper The upper bound.
  	     * @returns {number} Returns the clamped number.
  	     */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined$1){number=number<=upper?number:upper;}if(lower!==undefined$1){number=number>=lower?number:lower;}}return number;}/**
  	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
  	     * traversed objects.
  	     *
  	     * @private
  	     * @param {*} value The value to clone.
  	     * @param {boolean} bitmask The bitmask flags.
  	     *  1 - Deep clone
  	     *  2 - Flatten inherited properties
  	     *  4 - Clone symbols
  	     * @param {Function} [customizer] The function to customize cloning.
  	     * @param {string} [key] The key of `value`.
  	     * @param {Object} [object] The parent object of `value`.
  	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
  	     * @returns {*} Returns the cloned value.
  	     */function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined$1){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else {var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else {if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,isDeep);}}// Check for circular references and return its corresponding clone.
  stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});}else if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack));});}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined$1:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}// Recursively populate clone (susceptible to call stack limits).
  assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}/**
  	     * The base implementation of `_.conforms` which doesn't clone `source`.
  	     *
  	     * @private
  	     * @param {Object} source The object of property predicates to conform to.
  	     * @returns {Function} Returns the new spec function.
  	     */function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}/**
  	     * The base implementation of `_.conformsTo` which accepts `props` to check.
  	     *
  	     * @private
  	     * @param {Object} object The object to inspect.
  	     * @param {Object} source The object of property predicates to conform to.
  	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
  	     */function baseConformsTo(object,source,props){var length=props.length;if(object==null){return !length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined$1&&!(key in object)||!predicate(value)){return false;}}return true;}/**
  	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
  	     * to provide to `func`.
  	     *
  	     * @private
  	     * @param {Function} func The function to delay.
  	     * @param {number} wait The number of milliseconds to delay invocation.
  	     * @param {Array} args The arguments to provide to `func`.
  	     * @returns {number|Object} Returns the timer id or timeout object.
  	     */function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined$1,args);},wait);}/**
  	     * The base implementation of methods like `_.difference` without support
  	     * for excluding multiple arrays or iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array} array The array to inspect.
  	     * @param {Array} values The values to exclude.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of filtered values.
  	     */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee==null?value:iteratee(value);value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}/**
  	     * The base implementation of `_.forEach` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @returns {Array|Object} Returns `collection`.
  	     */var baseEach=createBaseEach(baseForOwn);/**
  	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @returns {Array|Object} Returns `collection`.
  	     */var baseEachRight=createBaseEach(baseForOwnRight,true);/**
  	     * The base implementation of `_.every` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} predicate The function invoked per iteration.
  	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
  	     *  else `false`
  	     */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}/**
  	     * The base implementation of methods like `_.max` and `_.min` which accepts a
  	     * `comparator` to determine the extremum value.
  	     *
  	     * @private
  	     * @param {Array} array The array to iterate over.
  	     * @param {Function} iteratee The iteratee invoked per iteration.
  	     * @param {Function} comparator The comparator used to compare values.
  	     * @returns {*} Returns the extremum value.
  	     */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined$1?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}/**
  	     * The base implementation of `_.fill` without an iteratee call guard.
  	     *
  	     * @private
  	     * @param {Array} array The array to fill.
  	     * @param {*} value The value to fill `array` with.
  	     * @param {number} [start=0] The start position.
  	     * @param {number} [end=array.length] The end position.
  	     * @returns {Array} Returns `array`.
  	     */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined$1||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}/**
  	     * The base implementation of `_.filter` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} predicate The function invoked per iteration.
  	     * @returns {Array} Returns the new filtered array.
  	     */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}/**
  	     * The base implementation of `_.flatten` with support for restricting flattening.
  	     *
  	     * @private
  	     * @param {Array} array The array to flatten.
  	     * @param {number} depth The maximum recursion depth.
  	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
  	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
  	     * @param {Array} [result=[]] The initial result value.
  	     * @returns {Array} Returns the new flattened array.
  	     */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){// Recursively flatten arrays (susceptible to call stack limits).
  baseFlatten(value,depth-1,predicate,isStrict,result);}else {arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}/**
  	     * The base implementation of `baseForOwn` which iterates over `object`
  	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
  	     * Iteratee functions may exit iteration early by explicitly returning `false`.
  	     *
  	     * @private
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @param {Function} keysFunc The function to get the keys of `object`.
  	     * @returns {Object} Returns `object`.
  	     */var baseFor=createBaseFor();/**
  	     * This function is like `baseFor` except that it iterates over properties
  	     * in the opposite order.
  	     *
  	     * @private
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @param {Function} keysFunc The function to get the keys of `object`.
  	     * @returns {Object} Returns `object`.
  	     */var baseForRight=createBaseFor(true);/**
  	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @returns {Object} Returns `object`.
  	     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**
  	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @returns {Object} Returns `object`.
  	     */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}/**
  	     * The base implementation of `_.functions` which creates an array of
  	     * `object` function property names filtered from `props`.
  	     *
  	     * @private
  	     * @param {Object} object The object to inspect.
  	     * @param {Array} props The property names to filter.
  	     * @returns {Array} Returns the function names.
  	     */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}/**
  	     * The base implementation of `_.get` without support for default values.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path of the property to get.
  	     * @returns {*} Returns the resolved value.
  	     */function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined$1;}/**
  	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
  	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
  	     * symbols of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {Function} keysFunc The function to get the keys of `object`.
  	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
  	     * @returns {Array} Returns the array of property names and symbols.
  	     */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}/**
  	     * The base implementation of `getTag` without fallbacks for buggy environments.
  	     *
  	     * @private
  	     * @param {*} value The value to query.
  	     * @returns {string} Returns the `toStringTag`.
  	     */function baseGetTag(value){if(value==null){return value===undefined$1?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}/**
  	     * The base implementation of `_.gt` which doesn't coerce arguments.
  	     *
  	     * @private
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
  	     *  else `false`.
  	     */function baseGt(value,other){return value>other;}/**
  	     * The base implementation of `_.has` without support for deep paths.
  	     *
  	     * @private
  	     * @param {Object} [object] The object to query.
  	     * @param {Array|string} key The key to check.
  	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
  	     */function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}/**
  	     * The base implementation of `_.hasIn` without support for deep paths.
  	     *
  	     * @private
  	     * @param {Object} [object] The object to query.
  	     * @param {Array|string} key The key to check.
  	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
  	     */function baseHasIn(object,key){return object!=null&&key in Object(object);}/**
  	     * The base implementation of `_.inRange` which doesn't coerce arguments.
  	     *
  	     * @private
  	     * @param {number} number The number to check.
  	     * @param {number} start The start of the range.
  	     * @param {number} end The end of the range.
  	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
  	     */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}/**
  	     * The base implementation of methods like `_.intersection`, without support
  	     * for iteratee shorthands, that accepts an array of arrays to inspect.
  	     *
  	     * @private
  	     * @param {Array} arrays The arrays to inspect.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of shared values.
  	     */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined$1;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}/**
  	     * The base implementation of `_.invert` and `_.invertBy` which inverts
  	     * `object` with values transformed by `iteratee` and set by `setter`.
  	     *
  	     * @private
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} setter The function to set `accumulator` values.
  	     * @param {Function} iteratee The iteratee to transform values.
  	     * @param {Object} accumulator The initial inverted object.
  	     * @returns {Function} Returns `accumulator`.
  	     */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}/**
  	     * The base implementation of `_.invoke` without support for individual
  	     * method arguments.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path of the method to invoke.
  	     * @param {Array} args The arguments to invoke the method with.
  	     * @returns {*} Returns the result of the invoked method.
  	     */function baseInvoke(object,path,args){path=castPath(path,object);object=parent(object,path);var func=object==null?object:object[toKey(last(path))];return func==null?undefined$1:apply(func,object,args);}/**
  	     * The base implementation of `_.isArguments`.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
  	     */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}/**
  	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
  	     */function baseIsArrayBuffer(value){return isObjectLike(value)&&baseGetTag(value)==arrayBufferTag;}/**
  	     * The base implementation of `_.isDate` without Node.js optimizations.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
  	     */function baseIsDate(value){return isObjectLike(value)&&baseGetTag(value)==dateTag;}/**
  	     * The base implementation of `_.isEqual` which supports partial comparisons
  	     * and tracks traversed objects.
  	     *
  	     * @private
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @param {boolean} bitmask The bitmask flags.
  	     *  1 - Unordered comparison
  	     *  2 - Partial comparison
  	     * @param {Function} [customizer] The function to customize comparisons.
  	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
  	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
  	     */function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}/**
  	     * A specialized version of `baseIsEqual` for arrays and objects which performs
  	     * deep comparisons and tracks traversed objects enabling objects with circular
  	     * references to be compared.
  	     *
  	     * @private
  	     * @param {Object} object The object to compare.
  	     * @param {Object} other The other object to compare.
  	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
  	     * @param {Function} customizer The function to customize comparisons.
  	     * @param {Function} equalFunc The function to determine equivalents of values.
  	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
  	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
  	     */function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}/**
  	     * The base implementation of `_.isMap` without Node.js optimizations.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
  	     */function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}/**
  	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Object} object The object to inspect.
  	     * @param {Object} source The object of property values to match.
  	     * @param {Array} matchData The property names, values, and compare flags to match.
  	     * @param {Function} [customizer] The function to customize comparisons.
  	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
  	     */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return !length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined$1&&!(key in object)){return false;}}else {var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined$1?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}/**
  	     * The base implementation of `_.isNative` without bad shim checks.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a native function,
  	     *  else `false`.
  	     */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**
  	     * The base implementation of `_.isRegExp` without Node.js optimizations.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
  	     */function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}/**
  	     * The base implementation of `_.isSet` without Node.js optimizations.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
  	     */function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}/**
  	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
  	     */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}/**
  	     * The base implementation of `_.iteratee`.
  	     *
  	     * @private
  	     * @param {*} [value=_.identity] The value to convert to an iteratee.
  	     * @returns {Function} Returns the iteratee.
  	     */function baseIteratee(value){// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if(typeof value=='function'){return value;}if(value==null){return identity;}if(_typeof(value)=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}/**
  	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names.
  	     */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**
  	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names.
  	     */function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}/**
  	     * The base implementation of `_.lt` which doesn't coerce arguments.
  	     *
  	     * @private
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if `value` is less than `other`,
  	     *  else `false`.
  	     */function baseLt(value,other){return value<other;}/**
  	     * The base implementation of `_.map` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} iteratee The function invoked per iteration.
  	     * @returns {Array} Returns the new mapped array.
  	     */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}/**
  	     * The base implementation of `_.matches` which doesn't clone `source`.
  	     *
  	     * @private
  	     * @param {Object} source The object of property values to match.
  	     * @returns {Function} Returns the new spec function.
  	     */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}/**
  	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
  	     *
  	     * @private
  	     * @param {string} path The path of the property to get.
  	     * @param {*} srcValue The value to match.
  	     * @returns {Function} Returns the new spec function.
  	     */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined$1&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}/**
  	     * The base implementation of `_.merge` without support for multiple sources.
  	     *
  	     * @private
  	     * @param {Object} object The destination object.
  	     * @param {Object} source The source object.
  	     * @param {number} srcIndex The index of `source`.
  	     * @param {Function} [customizer] The function to customize merged values.
  	     * @param {Object} [stack] Tracks traversed source values and their merged
  	     *  counterparts.
  	     */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}baseFor(source,function(srcValue,key){stack||(stack=new Stack());if(isObject(srcValue)){baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else {var newValue=customizer?customizer(safeGet(object,key),srcValue,key+'',object,source,stack):undefined$1;if(newValue===undefined$1){newValue=srcValue;}assignMergeValue(object,key,newValue);}},keysIn);}/**
  	     * A specialized version of `baseMerge` for arrays and objects which performs
  	     * deep merges and tracks traversed objects enabling objects with circular
  	     * references to be merged.
  	     *
  	     * @private
  	     * @param {Object} object The destination object.
  	     * @param {Object} source The source object.
  	     * @param {string} key The key of the value to merge.
  	     * @param {number} srcIndex The index of `source`.
  	     * @param {Function} mergeFunc The function to merge values.
  	     * @param {Function} [customizer] The function to customize assigned values.
  	     * @param {Object} [stack] Tracks traversed source values and their merged
  	     *  counterparts.
  	     */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined$1;var isCommon=newValue===undefined$1;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else {newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||isFunction(objValue)){newValue=initCloneObject(srcValue);}}else {isCommon=false;}}if(isCommon){// Recursively merge objects and arrays (susceptible to call stack limits).
  stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}/**
  	     * The base implementation of `_.nth` which doesn't coerce arguments.
  	     *
  	     * @private
  	     * @param {Array} array The array to query.
  	     * @param {number} n The index of the element to return.
  	     * @returns {*} Returns the nth element of `array`.
  	     */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined$1;}/**
  	     * The base implementation of `_.orderBy` without param guards.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
  	     * @param {string[]} orders The sort orders of `iteratees`.
  	     * @returns {Array} Returns the new sorted array.
  	     */function baseOrderBy(collection,iteratees,orders){if(iteratees.length){iteratees=arrayMap(iteratees,function(iteratee){if(isArray(iteratee)){return function(value){return baseGet(value,iteratee.length===1?iteratee[0]:iteratee);};}return iteratee;});}else {iteratees=[identity];}var index=-1;iteratees=arrayMap(iteratees,baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return {'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}/**
  	     * The base implementation of `_.pick` without support for individual
  	     * property identifiers.
  	     *
  	     * @private
  	     * @param {Object} object The source object.
  	     * @param {string[]} paths The property paths to pick.
  	     * @returns {Object} Returns the new object.
  	     */function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path);});}/**
  	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Object} object The source object.
  	     * @param {string[]} paths The property paths to pick.
  	     * @param {Function} predicate The function invoked per property.
  	     * @returns {Object} Returns the new object.
  	     */function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value);}}return result;}/**
  	     * A specialized version of `baseProperty` which supports deep paths.
  	     *
  	     * @private
  	     * @param {Array|string} path The path of the property to get.
  	     * @returns {Function} Returns the new accessor function.
  	     */function basePropertyDeep(path){return function(object){return baseGet(object,path);};}/**
  	     * The base implementation of `_.pullAllBy` without support for iteratee
  	     * shorthands.
  	     *
  	     * @private
  	     * @param {Array} array The array to modify.
  	     * @param {Array} values The values to remove.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns `array`.
  	     */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}/**
  	     * The base implementation of `_.pullAt` without support for individual
  	     * indexes or capturing the removed elements.
  	     *
  	     * @private
  	     * @param {Array} array The array to modify.
  	     * @param {number[]} indexes The indexes of elements to remove.
  	     * @returns {Array} Returns `array`.
  	     */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else {baseUnset(array,index);}}}return array;}/**
  	     * The base implementation of `_.random` without support for returning
  	     * floating-point numbers.
  	     *
  	     * @private
  	     * @param {number} lower The lower bound.
  	     * @param {number} upper The upper bound.
  	     * @returns {number} Returns the random number.
  	     */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}/**
  	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
  	     * coerce arguments.
  	     *
  	     * @private
  	     * @param {number} start The start of the range.
  	     * @param {number} end The end of the range.
  	     * @param {number} step The value to increment or decrement by.
  	     * @param {boolean} [fromRight] Specify iterating from right to left.
  	     * @returns {Array} Returns the range of numbers.
  	     */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}/**
  	     * The base implementation of `_.repeat` which doesn't coerce arguments.
  	     *
  	     * @private
  	     * @param {string} string The string to repeat.
  	     * @param {number} n The number of times to repeat the string.
  	     * @returns {string} Returns the repeated string.
  	     */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}// Leverage the exponentiation by squaring algorithm for a faster repeat.
  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
  do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}/**
  	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
  	     *
  	     * @private
  	     * @param {Function} func The function to apply a rest parameter to.
  	     * @param {number} [start=func.length-1] The start position of the rest parameter.
  	     * @returns {Function} Returns the new function.
  	     */function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}/**
  	     * The base implementation of `_.sample`.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to sample.
  	     * @returns {*} Returns the random element.
  	     */function baseSample(collection){return arraySample(values(collection));}/**
  	     * The base implementation of `_.sampleSize` without param guards.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to sample.
  	     * @param {number} n The number of elements to sample.
  	     * @returns {Array} Returns the random elements.
  	     */function baseSampleSize(collection,n){var array=values(collection);return shuffleSelf(array,baseClamp(n,0,array.length));}/**
  	     * The base implementation of `_.set`.
  	     *
  	     * @private
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to set.
  	     * @param {*} value The value to set.
  	     * @param {Function} [customizer] The function to customize path creation.
  	     * @returns {Object} Returns `object`.
  	     */function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(key==='__proto__'||key==='constructor'||key==='prototype'){return object;}if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined$1;if(newValue===undefined$1){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}/**
  	     * The base implementation of `setData` without support for hot loop shorting.
  	     *
  	     * @private
  	     * @param {Function} func The function to associate metadata with.
  	     * @param {*} data The metadata.
  	     * @returns {Function} Returns `func`.
  	     */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};/**
  	     * The base implementation of `setToString` without support for hot loop shorting.
  	     *
  	     * @private
  	     * @param {Function} func The function to modify.
  	     * @param {Function} string The `toString` result.
  	     * @returns {Function} Returns `func`.
  	     */var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};/**
  	     * The base implementation of `_.shuffle`.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to shuffle.
  	     * @returns {Array} Returns the new shuffled array.
  	     */function baseShuffle(collection){return shuffleSelf(values(collection));}/**
  	     * The base implementation of `_.slice` without an iteratee call guard.
  	     *
  	     * @private
  	     * @param {Array} array The array to slice.
  	     * @param {number} [start=0] The start position.
  	     * @param {number} [end=array.length] The end position.
  	     * @returns {Array} Returns the slice of `array`.
  	     */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}/**
  	     * The base implementation of `_.some` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} predicate The function invoked per iteration.
  	     * @returns {boolean} Returns `true` if any element passes the predicate check,
  	     *  else `false`.
  	     */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return !result;});return !!result;}/**
  	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
  	     * performs a binary search of `array` to determine the index at which `value`
  	     * should be inserted into `array` in order to maintain its sort order.
  	     *
  	     * @private
  	     * @param {Array} array The sorted array to inspect.
  	     * @param {*} value The value to evaluate.
  	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
  	     * @returns {number} Returns the index at which `value` should be inserted
  	     *  into `array`.
  	     */function baseSortedIndex(array,value,retHighest){var low=0,high=array==null?low:array.length;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else {high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}/**
  	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
  	     * which invokes `iteratee` for `value` and each element of `array` to compute
  	     * their sort ranking. The iteratee is invoked with one argument; (value).
  	     *
  	     * @private
  	     * @param {Array} array The sorted array to inspect.
  	     * @param {*} value The value to evaluate.
  	     * @param {Function} iteratee The iteratee invoked per element.
  	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
  	     * @returns {number} Returns the index at which `value` should be inserted
  	     *  into `array`.
  	     */function baseSortedIndexBy(array,value,iteratee,retHighest){var low=0,high=array==null?0:array.length;if(high===0){return 0;}value=iteratee(value);var valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined$1;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined$1,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else {setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else {high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}/**
  	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
  	     * support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @returns {Array} Returns the new duplicate free array.
  	     */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}/**
  	     * The base implementation of `_.toNumber` which doesn't ensure correct
  	     * conversions of binary, hexadecimal, or octal string values.
  	     *
  	     * @private
  	     * @param {*} value The value to process.
  	     * @returns {number} Returns the number.
  	     */function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return +value;}/**
  	     * The base implementation of `_.toString` which doesn't convert nullish
  	     * values to empty strings.
  	     *
  	     * @private
  	     * @param {*} value The value to process.
  	     * @returns {string} Returns the string.
  	     */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.
  if(typeof value=='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
  return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
  	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new duplicate free array.
  	     */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else {seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}/**
  	     * The base implementation of `_.unset`.
  	     *
  	     * @private
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The property path to unset.
  	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
  	     */function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))];}/**
  	     * The base implementation of `_.update`.
  	     *
  	     * @private
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to update.
  	     * @param {Function} updater The function to produce the updated value.
  	     * @param {Function} [customizer] The function to customize path creation.
  	     * @returns {Object} Returns `object`.
  	     */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}/**
  	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
  	     * without support for iteratee shorthands.
  	     *
  	     * @private
  	     * @param {Array} array The array to query.
  	     * @param {Function} predicate The function invoked per iteration.
  	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
  	     * @param {boolean} [fromRight] Specify iterating from right to left.
  	     * @returns {Array} Returns the slice of `array`.
  	     */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}/**
  	     * The base implementation of `wrapperValue` which returns the result of
  	     * performing a sequence of actions on the unwrapped `value`, where each
  	     * successive action is supplied the return value of the previous.
  	     *
  	     * @private
  	     * @param {*} value The unwrapped value.
  	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
  	     * @returns {*} Returns the resolved value.
  	     */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}/**
  	     * The base implementation of methods like `_.xor`, without support for
  	     * iteratee shorthands, that accepts an array of arrays to inspect.
  	     *
  	     * @private
  	     * @param {Array} arrays The arrays to inspect.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of values.
  	     */function baseXor(arrays,iteratee,comparator){var length=arrays.length;if(length<2){return length?baseUniq(arrays[0]):[];}var index=-1,result=Array(length);while(++index<length){var array=arrays[index],othIndex=-1;while(++othIndex<length){if(othIndex!=index){result[index]=baseDifference(result[index]||array,arrays[othIndex],iteratee,comparator);}}}return baseUniq(baseFlatten(result,1),iteratee,comparator);}/**
  	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
  	     *
  	     * @private
  	     * @param {Array} props The property identifiers.
  	     * @param {Array} values The property values.
  	     * @param {Function} assignFunc The function to assign values.
  	     * @returns {Object} Returns the new object.
  	     */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined$1;assignFunc(result,props[index],value);}return result;}/**
  	     * Casts `value` to an empty array if it's not an array like object.
  	     *
  	     * @private
  	     * @param {*} value The value to inspect.
  	     * @returns {Array|Object} Returns the cast array-like object.
  	     */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}/**
  	     * Casts `value` to `identity` if it's not a function.
  	     *
  	     * @private
  	     * @param {*} value The value to inspect.
  	     * @returns {Function} Returns cast function.
  	     */function castFunction(value){return typeof value=='function'?value:identity;}/**
  	     * Casts `value` to a path array if it's not one.
  	     *
  	     * @private
  	     * @param {*} value The value to inspect.
  	     * @param {Object} [object] The object to query keys on.
  	     * @returns {Array} Returns the cast property path array.
  	     */function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}/**
  	     * A `baseRest` alias which can be replaced with `identity` by module
  	     * replacement plugins.
  	     *
  	     * @private
  	     * @type {Function}
  	     * @param {Function} func The function to apply a rest parameter to.
  	     * @returns {Function} Returns the new function.
  	     */var castRest=baseRest;/**
  	     * Casts `array` to a slice if it's needed.
  	     *
  	     * @private
  	     * @param {Array} array The array to inspect.
  	     * @param {number} start The start position.
  	     * @param {number} [end=array.length] The end position.
  	     * @returns {Array} Returns the cast slice.
  	     */function castSlice(array,start,end){var length=array.length;end=end===undefined$1?length:end;return !start&&end>=length?array:baseSlice(array,start,end);}/**
  	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
  	     *
  	     * @private
  	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
  	     */var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};/**
  	     * Creates a clone of  `buffer`.
  	     *
  	     * @private
  	     * @param {Buffer} buffer The buffer to clone.
  	     * @param {boolean} [isDeep] Specify a deep clone.
  	     * @returns {Buffer} Returns the cloned buffer.
  	     */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}/**
  	     * Creates a clone of `arrayBuffer`.
  	     *
  	     * @private
  	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
  	     * @returns {ArrayBuffer} Returns the cloned array buffer.
  	     */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}/**
  	     * Creates a clone of `dataView`.
  	     *
  	     * @private
  	     * @param {Object} dataView The data view to clone.
  	     * @param {boolean} [isDeep] Specify a deep clone.
  	     * @returns {Object} Returns the cloned data view.
  	     */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}/**
  	     * Creates a clone of `regexp`.
  	     *
  	     * @private
  	     * @param {Object} regexp The regexp to clone.
  	     * @returns {Object} Returns the cloned regexp.
  	     */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}/**
  	     * Creates a clone of the `symbol` object.
  	     *
  	     * @private
  	     * @param {Object} symbol The symbol object to clone.
  	     * @returns {Object} Returns the cloned symbol object.
  	     */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}/**
  	     * Creates a clone of `typedArray`.
  	     *
  	     * @private
  	     * @param {Object} typedArray The typed array to clone.
  	     * @param {boolean} [isDeep] Specify a deep clone.
  	     * @returns {Object} Returns the cloned typed array.
  	     */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}/**
  	     * Compares values to sort them in ascending order.
  	     *
  	     * @private
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {number} Returns the sort order indicator for `value`.
  	     */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined$1,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined$1,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return -1;}}return 0;}/**
  	     * Used by `_.orderBy` to compare multiple properties of a value to another
  	     * and stable sort them.
  	     *
  	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
  	     * specify an order of "desc" for descending or "asc" for ascending sort order
  	     * of corresponding values.
  	     *
  	     * @private
  	     * @param {Object} object The object to compare.
  	     * @param {Object} other The other object to compare.
  	     * @param {boolean[]|string[]} orders The order to sort by for each property.
  	     * @returns {number} Returns the sort order indicator for `object`.
  	     */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index-other.index;}/**
  	     * Creates an array that is the composition of partially applied arguments,
  	     * placeholders, and provided arguments into a single array of arguments.
  	     *
  	     * @private
  	     * @param {Array} args The provided arguments.
  	     * @param {Array} partials The arguments to prepend to those provided.
  	     * @param {Array} holders The `partials` placeholder indexes.
  	     * @params {boolean} [isCurried] Specify composing for a curried function.
  	     * @returns {Array} Returns the new array of composed arguments.
  	     */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}/**
  	     * This function is like `composeArgs` except that the arguments composition
  	     * is tailored for `_.partialRight`.
  	     *
  	     * @private
  	     * @param {Array} args The provided arguments.
  	     * @param {Array} partials The arguments to append to those provided.
  	     * @param {Array} holders The `partials` placeholder indexes.
  	     * @params {boolean} [isCurried] Specify composing for a curried function.
  	     * @returns {Array} Returns the new array of composed arguments.
  	     */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}/**
  	     * Copies the values of `source` to `array`.
  	     *
  	     * @private
  	     * @param {Array} source The array to copy values from.
  	     * @param {Array} [array=[]] The array to copy values to.
  	     * @returns {Array} Returns `array`.
  	     */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}/**
  	     * Copies properties of `source` to `object`.
  	     *
  	     * @private
  	     * @param {Object} source The object to copy properties from.
  	     * @param {Array} props The property identifiers to copy.
  	     * @param {Object} [object={}] The object to copy properties to.
  	     * @param {Function} [customizer] The function to customize copied values.
  	     * @returns {Object} Returns `object`.
  	     */function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined$1;if(newValue===undefined$1){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else {assignValue(object,key,newValue);}}return object;}/**
  	     * Copies own symbols of `source` to `object`.
  	     *
  	     * @private
  	     * @param {Object} source The object to copy symbols from.
  	     * @param {Object} [object={}] The object to copy symbols to.
  	     * @returns {Object} Returns `object`.
  	     */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}/**
  	     * Copies own and inherited symbols of `source` to `object`.
  	     *
  	     * @private
  	     * @param {Object} source The object to copy symbols from.
  	     * @param {Object} [object={}] The object to copy symbols to.
  	     * @returns {Object} Returns `object`.
  	     */function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object);}/**
  	     * Creates a function like `_.groupBy`.
  	     *
  	     * @private
  	     * @param {Function} setter The function to set accumulator values.
  	     * @param {Function} [initializer] The accumulator object initializer.
  	     * @returns {Function} Returns the new aggregator function.
  	     */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}/**
  	     * Creates a function like `_.assign`.
  	     *
  	     * @private
  	     * @param {Function} assigner The function to assign values.
  	     * @returns {Function} Returns the new assigner function.
  	     */function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined$1,guard=length>2?sources[2]:undefined$1;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined$1:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}/**
  	     * Creates a `baseEach` or `baseEachRight` function.
  	     *
  	     * @private
  	     * @param {Function} eachFunc The function to iterate over a collection.
  	     * @param {boolean} [fromRight] Specify iterating from right to left.
  	     * @returns {Function} Returns the new base function.
  	     */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}/**
  	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
  	     *
  	     * @private
  	     * @param {boolean} [fromRight] Specify iterating from right to left.
  	     * @returns {Function} Returns the new base function.
  	     */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**
  	     * Creates a function that wraps `func` to invoke it with the optional `this`
  	     * binding of `thisArg`.
  	     *
  	     * @private
  	     * @param {Function} func The function to wrap.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @param {*} [thisArg] The `this` binding of `func`.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createBind(func,bitmask,thisArg){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}/**
  	     * Creates a function like `_.lowerFirst`.
  	     *
  	     * @private
  	     * @param {string} methodName The name of the `String` case method to use.
  	     * @returns {Function} Returns the new case function.
  	     */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined$1;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}/**
  	     * Creates a function like `_.camelCase`.
  	     *
  	     * @private
  	     * @param {Function} callback The function to combine each word.
  	     * @returns {Function} Returns the new compounder function.
  	     */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}/**
  	     * Creates a function that produces an instance of `Ctor` regardless of
  	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
  	     *
  	     * @private
  	     * @param {Function} Ctor The constructor to wrap.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createCtor(Ctor){return function(){// Use a `switch` statement to work with class constructors. See
  // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
  // for more details.
  var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);// Mimic the constructor's `return` behavior.
  // See https://es5.github.io/#x13.2.2 for more details.
  return isObject(result)?result:thisBinding;};}/**
  	     * Creates a function that wraps `func` to enable currying.
  	     *
  	     * @private
  	     * @param {Function} func The function to wrap.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @param {number} arity The arity of `func`.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined$1,args,holders,undefined$1,undefined$1,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}/**
  	     * Creates a `_.find` or `_.findLast` function.
  	     *
  	     * @private
  	     * @param {Function} findIndexFunc The function to find the collection index.
  	     * @returns {Function} Returns the new find function.
  	     */function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function predicate(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined$1;};}/**
  	     * Creates a `_.flow` or `_.flowRight` function.
  	     *
  	     * @private
  	     * @param {boolean} [fromRight] Specify iterating from right to left.
  	     * @returns {Function} Returns the new flow function.
  	     */function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined$1;if(data&&isLaziable(data[0])&&data[1]==(WRAP_ARY_FLAG|WRAP_CURRY_FLAG|WRAP_PARTIAL_FLAG|WRAP_REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else {wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}/**
  	     * Creates a function that wraps `func` to invoke it with optional `this`
  	     * binding of `thisArg`, partial application, and currying.
  	     *
  	     * @private
  	     * @param {Function|string} func The function or method name to wrap.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @param {*} [thisArg] The `this` binding of `func`.
  	     * @param {Array} [partials] The arguments to prepend to those provided to
  	     *  the new function.
  	     * @param {Array} [holders] The `partials` placeholder indexes.
  	     * @param {Array} [partialsRight] The arguments to append to those provided
  	     *  to the new function.
  	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
  	     * @param {Array} [argPos] The argument positions of the new function.
  	     * @param {number} [ary] The arity cap of `func`.
  	     * @param {number} [arity] The arity of `func`.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&WRAP_ARY_FLAG,isBind=bitmask&WRAP_BIND_FLAG,isBindKey=bitmask&WRAP_BIND_KEY_FLAG,isCurried=bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG),isFlip=bitmask&WRAP_FLIP_FLAG,Ctor=isBindKey?undefined$1:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}/**
  	     * Creates a function like `_.invertBy`.
  	     *
  	     * @private
  	     * @param {Function} setter The function to set accumulator values.
  	     * @param {Function} toIteratee The function to resolve iteratees.
  	     * @returns {Function} Returns the new inverter function.
  	     */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}/**
  	     * Creates a function that performs a mathematical operation on two values.
  	     *
  	     * @private
  	     * @param {Function} operator The function to perform the operation.
  	     * @param {number} [defaultValue] The value used for `undefined` arguments.
  	     * @returns {Function} Returns the new mathematical operation function.
  	     */function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined$1&&other===undefined$1){return defaultValue;}if(value!==undefined$1){result=value;}if(other!==undefined$1){if(result===undefined$1){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else {value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}/**
  	     * Creates a function like `_.over`.
  	     *
  	     * @private
  	     * @param {Function} arrayFunc The function to iterate over iteratees.
  	     * @returns {Function} Returns the new over function.
  	     */function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}/**
  	     * Creates the padding for `string` based on `length`. The `chars` string
  	     * is truncated if the number of characters exceeds `length`.
  	     *
  	     * @private
  	     * @param {number} length The padding length.
  	     * @param {string} [chars=' '] The string used as padding.
  	     * @returns {string} Returns the padding for `string`.
  	     */function createPadding(length,chars){chars=chars===undefined$1?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}/**
  	     * Creates a function that wraps `func` to invoke it with the `this` binding
  	     * of `thisArg` and `partials` prepended to the arguments it receives.
  	     *
  	     * @private
  	     * @param {Function} func The function to wrap.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @param {*} thisArg The `this` binding of `func`.
  	     * @param {Array} partials The arguments to prepend to those provided to
  	     *  the new function.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}/**
  	     * Creates a `_.range` or `_.rangeRight` function.
  	     *
  	     * @private
  	     * @param {boolean} [fromRight] Specify iterating from right to left.
  	     * @returns {Function} Returns the new range function.
  	     */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined$1;}// Ensure the sign of `-0` is preserved.
  start=toFinite(start);if(end===undefined$1){end=start;start=0;}else {end=toFinite(end);}step=step===undefined$1?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}/**
  	     * Creates a function that performs a relational operation on two values.
  	     *
  	     * @private
  	     * @param {Function} operator The function to perform the operation.
  	     * @returns {Function} Returns the new relational operation function.
  	     */function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}/**
  	     * Creates a function that wraps `func` to continue currying.
  	     *
  	     * @private
  	     * @param {Function} func The function to wrap.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @param {Function} wrapFunc The function to create the `func` wrapper.
  	     * @param {*} placeholder The placeholder value.
  	     * @param {*} [thisArg] The `this` binding of `func`.
  	     * @param {Array} [partials] The arguments to prepend to those provided to
  	     *  the new function.
  	     * @param {Array} [holders] The `partials` placeholder indexes.
  	     * @param {Array} [argPos] The argument positions of the new function.
  	     * @param {number} [ary] The arity cap of `func`.
  	     * @param {number} [arity] The arity of `func`.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&WRAP_CURRY_FLAG,newHolders=isCurry?holders:undefined$1,newHoldersRight=isCurry?undefined$1:holders,newPartials=isCurry?partials:undefined$1,newPartialsRight=isCurry?undefined$1:partials;bitmask|=isCurry?WRAP_PARTIAL_FLAG:WRAP_PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?WRAP_PARTIAL_RIGHT_FLAG:WRAP_PARTIAL_FLAG);if(!(bitmask&WRAP_CURRY_BOUND_FLAG)){bitmask&=~(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined$1,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}/**
  	     * Creates a function like `_.round`.
  	     *
  	     * @private
  	     * @param {string} methodName The name of the `Math` method to use when rounding.
  	     * @returns {Function} Returns the new round function.
  	     */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=precision==null?0:nativeMin(toInteger(precision),292);if(precision&&nativeIsFinite(number)){// Shift with exponential notation to avoid floating-point issues.
  // See [MDN](https://mdn.io/round#Examples) for more details.
  var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return +(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}/**
  	     * Creates a set object of `values`.
  	     *
  	     * @private
  	     * @param {Array} values The values to add to the set.
  	     * @returns {Object} Returns the new set.
  	     */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};/**
  	     * Creates a `_.toPairs` or `_.toPairsIn` function.
  	     *
  	     * @private
  	     * @param {Function} keysFunc The function to get the keys of a given object.
  	     * @returns {Function} Returns the new pairs function.
  	     */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}/**
  	     * Creates a function that either curries or invokes `func` with optional
  	     * `this` binding and partially applied arguments.
  	     *
  	     * @private
  	     * @param {Function|string} func The function or method name to wrap.
  	     * @param {number} bitmask The bitmask flags.
  	     *    1 - `_.bind`
  	     *    2 - `_.bindKey`
  	     *    4 - `_.curry` or `_.curryRight` of a bound function
  	     *    8 - `_.curry`
  	     *   16 - `_.curryRight`
  	     *   32 - `_.partial`
  	     *   64 - `_.partialRight`
  	     *  128 - `_.rearg`
  	     *  256 - `_.ary`
  	     *  512 - `_.flip`
  	     * @param {*} [thisArg] The `this` binding of `func`.
  	     * @param {Array} [partials] The arguments to be partially applied.
  	     * @param {Array} [holders] The `partials` placeholder indexes.
  	     * @param {Array} [argPos] The argument positions of the new function.
  	     * @param {number} [ary] The arity cap of `func`.
  	     * @param {number} [arity] The arity of `func`.
  	     * @returns {Function} Returns the new wrapped function.
  	     */function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&WRAP_BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(WRAP_PARTIAL_FLAG|WRAP_PARTIAL_RIGHT_FLAG);partials=holders=undefined$1;}ary=ary===undefined$1?ary:nativeMax(toInteger(ary),0);arity=arity===undefined$1?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&WRAP_PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined$1;}var data=isBindKey?undefined$1:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]===undefined$1?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG)){bitmask&=~(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==WRAP_BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==WRAP_CURRY_FLAG||bitmask==WRAP_CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==WRAP_PARTIAL_FLAG||bitmask==(WRAP_BIND_FLAG|WRAP_PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else {result=createHybrid.apply(undefined$1,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}/**
  	     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
  	     * of source objects to the destination object for all destination properties
  	     * that resolve to `undefined`.
  	     *
  	     * @private
  	     * @param {*} objValue The destination value.
  	     * @param {*} srcValue The source value.
  	     * @param {string} key The key of the property to assign.
  	     * @param {Object} object The parent object of `objValue`.
  	     * @returns {*} Returns the value to assign.
  	     */function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined$1||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}/**
  	     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
  	     * objects into destination objects that are passed thru.
  	     *
  	     * @private
  	     * @param {*} objValue The destination value.
  	     * @param {*} srcValue The source value.
  	     * @param {string} key The key of the property to merge.
  	     * @param {Object} object The parent object of `objValue`.
  	     * @param {Object} source The parent object of `srcValue`.
  	     * @param {Object} [stack] Tracks traversed source values and their merged
  	     *  counterparts.
  	     * @returns {*} Returns the value to assign.
  	     */function customDefaultsMerge(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){// Recursively merge objects and arrays (susceptible to call stack limits).
  stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined$1,customDefaultsMerge,stack);stack['delete'](srcValue);}return objValue;}/**
  	     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
  	     * objects.
  	     *
  	     * @private
  	     * @param {*} value The value to inspect.
  	     * @param {string} key The key of the property to inspect.
  	     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
  	     */function customOmitClone(value){return isPlainObject(value)?undefined$1:value;}/**
  	     * A specialized version of `baseIsEqualDeep` for arrays with support for
  	     * partial deep comparisons.
  	     *
  	     * @private
  	     * @param {Array} array The array to compare.
  	     * @param {Array} other The other array to compare.
  	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
  	     * @param {Function} customizer The function to customize comparisons.
  	     * @param {Function} equalFunc The function to determine equivalents of values.
  	     * @param {Object} stack Tracks traversed `array` and `other` objects.
  	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
  	     */function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}// Check that cyclic values are equal.
  var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined$1;stack.set(array,other);stack.set(other,array);// Ignore non-index properties.
  while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined$1){if(compared){continue;}result=false;break;}// Recursively compare arrays (susceptible to call stack limits).
  if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}/**
  	     * A specialized version of `baseIsEqualDeep` for comparing objects of
  	     * the same `toStringTag`.
  	     *
  	     * **Note:** This function only supports comparing values with tags of
  	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
  	     *
  	     * @private
  	     * @param {Object} object The object to compare.
  	     * @param {Object} other The other object to compare.
  	     * @param {string} tag The `toStringTag` of the objects to compare.
  	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
  	     * @param {Function} customizer The function to customize comparisons.
  	     * @param {Function} equalFunc The function to determine equivalents of values.
  	     * @param {Object} stack Tracks traversed `object` and `other` objects.
  	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
  	     */function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:// Coerce booleans to `1` or `0` and dates to milliseconds.
  // Invalid dates are coerced to `NaN`.
  return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:// Coerce regexes to strings and treat strings, primitives and objects,
  // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
  // for more details.
  return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}// Assume cyclic values are equal.
  var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;// Recursively compare objects (susceptible to call stack limits).
  stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}/**
  	     * A specialized version of `baseIsEqualDeep` for objects with support for
  	     * partial deep comparisons.
  	     *
  	     * @private
  	     * @param {Object} object The object to compare.
  	     * @param {Object} other The other object to compare.
  	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
  	     * @param {Function} customizer The function to customize comparisons.
  	     * @param {Function} equalFunc The function to determine equivalents of values.
  	     * @param {Object} stack Tracks traversed `object` and `other` objects.
  	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
  	     */function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}// Check that cyclic values are equal.
  var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}// Recursively compare objects (susceptible to call stack limits).
  if(!(compared===undefined$1?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;// Non `Object` object instances with different constructors are not equal.
  if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}/**
  	     * A specialized version of `baseRest` which flattens the rest array.
  	     *
  	     * @private
  	     * @param {Function} func The function to apply a rest parameter to.
  	     * @returns {Function} Returns the new function.
  	     */function flatRest(func){return setToString(overRest(func,undefined$1,flatten),func+'');}/**
  	     * Creates an array of own enumerable property names and symbols of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names and symbols.
  	     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}/**
  	     * Creates an array of own and inherited enumerable property names and
  	     * symbols of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names and symbols.
  	     */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}/**
  	     * Gets metadata for `func`.
  	     *
  	     * @private
  	     * @param {Function} func The function to query.
  	     * @returns {*} Returns the metadata for `func`.
  	     */var getData=!metaMap?noop:function(func){return metaMap.get(func);};/**
  	     * Gets the name of `func`.
  	     *
  	     * @private
  	     * @param {Function} func The function to query.
  	     * @returns {string} Returns the function name.
  	     */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}/**
  	     * Gets the argument placeholder value for `func`.
  	     *
  	     * @private
  	     * @param {Function} func The function to inspect.
  	     * @returns {*} Returns the placeholder value.
  	     */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}/**
  	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
  	     * this function returns the custom method, otherwise it returns `baseIteratee`.
  	     * If arguments are provided, the chosen function is invoked with them and
  	     * its result is returned.
  	     *
  	     * @private
  	     * @param {*} [value] The value to convert to an iteratee.
  	     * @param {number} [arity] The arity of the created iteratee.
  	     * @returns {Function} Returns the chosen function or its result.
  	     */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}/**
  	     * Gets the data for `map`.
  	     *
  	     * @private
  	     * @param {Object} map The map to query.
  	     * @param {string} key The reference key.
  	     * @returns {*} Returns the map data.
  	     */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}/**
  	     * Gets the property names, values, and compare flags of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the match data of `object`.
  	     */function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}/**
  	     * Gets the native function at `key` of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {string} key The key of the method to get.
  	     * @returns {*} Returns the function if it's native, else `undefined`.
  	     */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined$1;}/**
  	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
  	     *
  	     * @private
  	     * @param {*} value The value to query.
  	     * @returns {string} Returns the raw `toStringTag`.
  	     */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined$1;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else {delete value[symToStringTag];}}return result;}/**
  	     * Creates an array of the own enumerable symbols of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of symbols.
  	     */var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return [];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};/**
  	     * Creates an array of the own and inherited enumerable symbols of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of symbols.
  	     */var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};/**
  	     * Gets the `toStringTag` of `value`.
  	     *
  	     * @private
  	     * @param {*} value The value to query.
  	     * @returns {string} Returns the `toStringTag`.
  	     */var getTag=baseGetTag;// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined$1,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}/**
  	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
  	     *
  	     * @private
  	     * @param {number} start The start of the view.
  	     * @param {number} end The end of the view.
  	     * @param {Array} transforms The transformations to apply to the view.
  	     * @returns {Object} Returns an object containing the `start` and `end`
  	     *  positions of the view.
  	     */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return {'start':start,'end':end};}/**
  	     * Extracts wrapper details from the `source` body comment.
  	     *
  	     * @private
  	     * @param {string} source The source to inspect.
  	     * @returns {Array} Returns the wrapper details.
  	     */function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}/**
  	     * Checks if `path` exists on `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path to check.
  	     * @param {Function} hasFunc The function to check properties.
  	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
  	     */function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return !!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}/**
  	     * Initializes an array clone.
  	     *
  	     * @private
  	     * @param {Array} array The array to clone.
  	     * @returns {Array} Returns the initialized clone.
  	     */function initCloneArray(array){var length=array.length,result=new array.constructor(length);// Add properties assigned by `RegExp#exec`.
  if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}/**
  	     * Initializes an object clone.
  	     *
  	     * @private
  	     * @param {Object} object The object to clone.
  	     * @returns {Object} Returns the initialized clone.
  	     */function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}/**
  	     * Initializes an object clone based on its `toStringTag`.
  	     *
  	     * **Note:** This function only supports cloning values with tags of
  	     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
  	     *
  	     * @private
  	     * @param {Object} object The object to clone.
  	     * @param {string} tag The `toStringTag` of the object to clone.
  	     * @param {boolean} [isDeep] Specify a deep clone.
  	     * @returns {Object} Returns the initialized clone.
  	     */function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor();case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor();case symbolTag:return cloneSymbol(object);}}/**
  	     * Inserts wrapper `details` in a comment at the top of the `source` body.
  	     *
  	     * @private
  	     * @param {string} source The source to modify.
  	     * @returns {Array} details The details to insert.
  	     * @returns {string} Returns the modified source.
  	     */function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}/**
  	     * Checks if `value` is a flattenable `arguments` object or array.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
  	     */function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}/**
  	     * Checks if `value` is a valid array-like index.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
  	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
  	     */function isIndex(value,length){var type=_typeof(value);length=length==null?MAX_SAFE_INTEGER:length;return !!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/**
  	     * Checks if the given arguments are from an iteratee call.
  	     *
  	     * @private
  	     * @param {*} value The potential iteratee value argument.
  	     * @param {*} index The potential iteratee index or key argument.
  	     * @param {*} object The potential iteratee object argument.
  	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
  	     *  else `false`.
  	     */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=_typeof(index);if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}/**
  	     * Checks if `value` is a property name and not a property path.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @param {Object} [object] The object to query keys on.
  	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
  	     */function isKey(value,object){if(isArray(value)){return false;}var type=_typeof(value);if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**
  	     * Checks if `value` is suitable for use as unique object key.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
  	     */function isKeyable(value){var type=_typeof(value);return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**
  	     * Checks if `func` has a lazy counterpart.
  	     *
  	     * @private
  	     * @param {Function} func The function to check.
  	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
  	     *  else `false`.
  	     */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return !!data&&func===data[0];}/**
  	     * Checks if `func` has its source masked.
  	     *
  	     * @private
  	     * @param {Function} func The function to check.
  	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
  	     */function isMasked(func){return !!maskSrcKey&&maskSrcKey in func;}/**
  	     * Checks if `func` is capable of being masked.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
  	     */var isMaskable=coreJsData?isFunction:stubFalse;/**
  	     * Checks if `value` is likely a prototype object.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
  	     */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}/**
  	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
  	     *
  	     * @private
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` if suitable for strict
  	     *  equality comparisons, else `false`.
  	     */function isStrictComparable(value){return value===value&&!isObject(value);}/**
  	     * A specialized version of `matchesProperty` for source values suitable
  	     * for strict equality comparisons, i.e. `===`.
  	     *
  	     * @private
  	     * @param {string} key The key of the property to get.
  	     * @param {*} srcValue The value to match.
  	     * @returns {Function} Returns the new spec function.
  	     */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined$1||key in Object(object));};}/**
  	     * A specialized version of `_.memoize` which clears the memoized function's
  	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
  	     *
  	     * @private
  	     * @param {Function} func The function to have its output memoized.
  	     * @returns {Function} Returns the new memoized function.
  	     */function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}/**
  	     * Merges the function metadata of `source` into `data`.
  	     *
  	     * Merging metadata reduces the number of wrappers used to invoke a function.
  	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
  	     * may be applied regardless of execution order. Methods like `_.ary` and
  	     * `_.rearg` modify function arguments, making the order in which they are
  	     * executed important, preventing the merging of metadata. However, we make
  	     * an exception for a safe combined case where curried functions have `_.ary`
  	     * and or `_.rearg` applied.
  	     *
  	     * @private
  	     * @param {Array} data The destination metadata.
  	     * @param {Array} source The source metadata.
  	     * @returns {Array} Returns `data`.
  	     */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG|WRAP_ARY_FLAG);var isCombo=srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_CURRY_FLAG||srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(WRAP_ARY_FLAG|WRAP_REARG_FLAG)&&source[7].length<=source[8]&&bitmask==WRAP_CURRY_FLAG;// Exit early if metadata can't be merged.
  if(!(isCommon||isCombo)){return data;}// Use source `thisArg` if available.
  if(srcBitmask&WRAP_BIND_FLAG){data[2]=source[2];// Set when currying a bound function.
  newBitmask|=bitmask&WRAP_BIND_FLAG?0:WRAP_CURRY_BOUND_FLAG;}// Compose partial arguments.
  var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}// Compose partial right arguments.
  value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}// Use source `argPos` if available.
  value=source[7];if(value){data[7]=value;}// Use source `ary` if it's smaller.
  if(srcBitmask&WRAP_ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}// Use source `arity` if one is not provided.
  if(data[9]==null){data[9]=source[9];}// Use source `func` and merge bitmasks.
  data[0]=source[0];data[1]=newBitmask;return data;}/**
  	     * This function is like
  	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
  	     * except that it includes inherited enumerable properties.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names.
  	     */function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}/**
  	     * Converts `value` to a string using `Object.prototype.toString`.
  	     *
  	     * @private
  	     * @param {*} value The value to convert.
  	     * @returns {string} Returns the converted string.
  	     */function objectToString(value){return nativeObjectToString.call(value);}/**
  	     * A specialized version of `baseRest` which transforms the rest array.
  	     *
  	     * @private
  	     * @param {Function} func The function to apply a rest parameter to.
  	     * @param {number} [start=func.length-1] The start position of the rest parameter.
  	     * @param {Function} transform The rest array transform.
  	     * @returns {Function} Returns the new function.
  	     */function overRest(func,start,transform){start=nativeMax(start===undefined$1?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**
  	     * Gets the parent value at `path` of `object`.
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {Array} path The path to get the parent value of.
  	     * @returns {*} Returns the parent value.
  	     */function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1));}/**
  	     * Reorder `array` according to the specified indexes where the element at
  	     * the first index is assigned as the first element, the element at
  	     * the second index is assigned as the second element, and so on.
  	     *
  	     * @private
  	     * @param {Array} array The array to reorder.
  	     * @param {Array} indexes The arranged array indexes.
  	     * @returns {Array} Returns `array`.
  	     */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined$1;}return array;}/**
  	     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
  	     *
  	     * @private
  	     * @param {Object} object The object to query.
  	     * @param {string} key The key of the property to get.
  	     * @returns {*} Returns the property value.
  	     */function safeGet(object,key){if(key==='constructor'&&typeof object[key]==='function'){return;}if(key=='__proto__'){return;}return object[key];}/**
  	     * Sets metadata for `func`.
  	     *
  	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
  	     * period of time, it will trip its breaker and transition to an identity
  	     * function to avoid garbage collection pauses in V8. See
  	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
  	     * for more details.
  	     *
  	     * @private
  	     * @param {Function} func The function to associate metadata with.
  	     * @param {*} data The metadata.
  	     * @returns {Function} Returns `func`.
  	     */var setData=shortOut(baseSetData);/**
  	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
  	     *
  	     * @private
  	     * @param {Function} func The function to delay.
  	     * @param {number} wait The number of milliseconds to delay invocation.
  	     * @returns {number|Object} Returns the timer id or timeout object.
  	     */var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};/**
  	     * Sets the `toString` method of `func` to return `string`.
  	     *
  	     * @private
  	     * @param {Function} func The function to modify.
  	     * @param {Function} string The `toString` result.
  	     * @returns {Function} Returns `func`.
  	     */var setToString=shortOut(baseSetToString);/**
  	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
  	     * with wrapper details in a comment at the top of the source body.
  	     *
  	     * @private
  	     * @param {Function} wrapper The function to modify.
  	     * @param {Function} reference The reference function.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @returns {Function} Returns `wrapper`.
  	     */function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}/**
  	     * Creates a function that'll short out and invoke `identity` instead
  	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
  	     * milliseconds.
  	     *
  	     * @private
  	     * @param {Function} func The function to restrict.
  	     * @returns {Function} Returns the new shortable function.
  	     */function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else {count=0;}return func.apply(undefined$1,arguments);};}/**
  	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
  	     *
  	     * @private
  	     * @param {Array} array The array to shuffle.
  	     * @param {number} [size=array.length] The size of `array`.
  	     * @returns {Array} Returns `array`.
  	     */function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined$1?length:size;while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}/**
  	     * Converts `string` to a property path array.
  	     *
  	     * @private
  	     * @param {string} string The string to convert.
  	     * @returns {Array} Returns the property path array.
  	     */var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46/* . */){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});/**
  	     * Converts `value` to a string key if it's not a string or symbol.
  	     *
  	     * @private
  	     * @param {*} value The value to inspect.
  	     * @returns {string|symbol} Returns the key.
  	     */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**
  	     * Converts `func` to its source code.
  	     *
  	     * @private
  	     * @param {Function} func The function to convert.
  	     * @returns {string} Returns the source code.
  	     */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return '';}/**
  	     * Updates wrapper `details` based on `bitmask` flags.
  	     *
  	     * @private
  	     * @returns {Array} details The details to modify.
  	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
  	     * @returns {Array} Returns `details`.
  	     */function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}/**
  	     * Creates a clone of `wrapper`.
  	     *
  	     * @private
  	     * @param {Object} wrapper The wrapper to clone.
  	     * @returns {Object} Returns the cloned wrapper.
  	     */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}/*------------------------------------------------------------------------*/ /**
  	     * Creates an array of elements split into groups the length of `size`.
  	     * If `array` can't be split evenly, the final chunk will be the remaining
  	     * elements.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to process.
  	     * @param {number} [size=1] The length of each chunk
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the new array of chunks.
  	     * @example
  	     *
  	     * _.chunk(['a', 'b', 'c', 'd'], 2);
  	     * // => [['a', 'b'], ['c', 'd']]
  	     *
  	     * _.chunk(['a', 'b', 'c', 'd'], 3);
  	     * // => [['a', 'b', 'c'], ['d']]
  	     */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined$1){size=1;}else {size=nativeMax(toInteger(size),0);}var length=array==null?0:array.length;if(!length||size<1){return [];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}/**
  	     * Creates an array with all falsey values removed. The values `false`, `null`,
  	     * `0`, `""`, `undefined`, and `NaN` are falsey.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to compact.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @example
  	     *
  	     * _.compact([0, 1, false, 2, '', 3]);
  	     * // => [1, 2, 3]
  	     */function compact(array){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}/**
  	     * Creates a new array concatenating `array` with any additional arrays
  	     * and/or values.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to concatenate.
  	     * @param {...*} [values] The values to concatenate.
  	     * @returns {Array} Returns the new concatenated array.
  	     * @example
  	     *
  	     * var array = [1];
  	     * var other = _.concat(array, 2, [3], [[4]]);
  	     *
  	     * console.log(other);
  	     * // => [1, 2, 3, [4]]
  	     *
  	     * console.log(array);
  	     * // => [1]
  	     */function concat(){var length=arguments.length;if(!length){return [];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}/**
  	     * Creates an array of `array` values not included in the other given arrays
  	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons. The order and references of result values are
  	     * determined by the first array.
  	     *
  	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {...Array} [values] The values to exclude.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @see _.without, _.xor
  	     * @example
  	     *
  	     * _.difference([2, 1], [2, 3]);
  	     * // => [1]
  	     */var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});/**
  	     * This method is like `_.difference` except that it accepts `iteratee` which
  	     * is invoked for each element of `array` and `values` to generate the criterion
  	     * by which they're compared. The order and references of result values are
  	     * determined by the first array. The iteratee is invoked with one argument:
  	     * (value).
  	     *
  	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {...Array} [values] The values to exclude.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @example
  	     *
  	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
  	     * // => [1.2]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
  	     * // => [{ 'x': 2 }]
  	     */var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});/**
  	     * This method is like `_.difference` except that it accepts `comparator`
  	     * which is invoked to compare elements of `array` to `values`. The order and
  	     * references of result values are determined by the first array. The comparator
  	     * is invoked with two arguments: (arrVal, othVal).
  	     *
  	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {...Array} [values] The values to exclude.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
  	     *
  	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
  	     * // => [{ 'x': 2, 'y': 1 }]
  	     */var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined$1,comparator):[];});/**
  	     * Creates a slice of `array` with `n` elements dropped from the beginning.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.5.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {number} [n=1] The number of elements to drop.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * _.drop([1, 2, 3]);
  	     * // => [2, 3]
  	     *
  	     * _.drop([1, 2, 3], 2);
  	     * // => [3]
  	     *
  	     * _.drop([1, 2, 3], 5);
  	     * // => []
  	     *
  	     * _.drop([1, 2, 3], 0);
  	     * // => [1, 2, 3]
  	     */function drop(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}/**
  	     * Creates a slice of `array` with `n` elements dropped from the end.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {number} [n=1] The number of elements to drop.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * _.dropRight([1, 2, 3]);
  	     * // => [1, 2]
  	     *
  	     * _.dropRight([1, 2, 3], 2);
  	     * // => [1]
  	     *
  	     * _.dropRight([1, 2, 3], 5);
  	     * // => []
  	     *
  	     * _.dropRight([1, 2, 3], 0);
  	     * // => [1, 2, 3]
  	     */function dropRight(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}/**
  	     * Creates a slice of `array` excluding elements dropped from the end.
  	     * Elements are dropped until `predicate` returns falsey. The predicate is
  	     * invoked with three arguments: (value, index, array).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'active': true },
  	     *   { 'user': 'fred',    'active': false },
  	     *   { 'user': 'pebbles', 'active': false }
  	     * ];
  	     *
  	     * _.dropRightWhile(users, function(o) { return !o.active; });
  	     * // => objects for ['barney']
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
  	     * // => objects for ['barney', 'fred']
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.dropRightWhile(users, ['active', false]);
  	     * // => objects for ['barney']
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.dropRightWhile(users, 'active');
  	     * // => objects for ['barney', 'fred', 'pebbles']
  	     */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}/**
  	     * Creates a slice of `array` excluding elements dropped from the beginning.
  	     * Elements are dropped until `predicate` returns falsey. The predicate is
  	     * invoked with three arguments: (value, index, array).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'active': false },
  	     *   { 'user': 'fred',    'active': false },
  	     *   { 'user': 'pebbles', 'active': true }
  	     * ];
  	     *
  	     * _.dropWhile(users, function(o) { return !o.active; });
  	     * // => objects for ['pebbles']
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
  	     * // => objects for ['fred', 'pebbles']
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.dropWhile(users, ['active', false]);
  	     * // => objects for ['pebbles']
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.dropWhile(users, 'active');
  	     * // => objects for ['barney', 'fred', 'pebbles']
  	     */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}/**
  	     * Fills elements of `array` with `value` from `start` up to, but not
  	     * including, `end`.
  	     *
  	     * **Note:** This method mutates `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.2.0
  	     * @category Array
  	     * @param {Array} array The array to fill.
  	     * @param {*} value The value to fill `array` with.
  	     * @param {number} [start=0] The start position.
  	     * @param {number} [end=array.length] The end position.
  	     * @returns {Array} Returns `array`.
  	     * @example
  	     *
  	     * var array = [1, 2, 3];
  	     *
  	     * _.fill(array, 'a');
  	     * console.log(array);
  	     * // => ['a', 'a', 'a']
  	     *
  	     * _.fill(Array(3), 2);
  	     * // => [2, 2, 2]
  	     *
  	     * _.fill([4, 6, 8, 10], '*', 1, 3);
  	     * // => [4, '*', '*', 10]
  	     */function fill(array,value,start,end){var length=array==null?0:array.length;if(!length){return [];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}/**
  	     * This method is like `_.find` except that it returns the index of the first
  	     * element `predicate` returns truthy for instead of the element itself.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.1.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @param {number} [fromIndex=0] The index to search from.
  	     * @returns {number} Returns the index of the found element, else `-1`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'active': false },
  	     *   { 'user': 'fred',    'active': false },
  	     *   { 'user': 'pebbles', 'active': true }
  	     * ];
  	     *
  	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
  	     * // => 0
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.findIndex(users, { 'user': 'fred', 'active': false });
  	     * // => 1
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.findIndex(users, ['active', false]);
  	     * // => 0
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.findIndex(users, 'active');
  	     * // => 2
  	     */function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}/**
  	     * This method is like `_.findIndex` except that it iterates over elements
  	     * of `collection` from right to left.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @param {number} [fromIndex=array.length-1] The index to search from.
  	     * @returns {number} Returns the index of the found element, else `-1`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'active': true },
  	     *   { 'user': 'fred',    'active': false },
  	     *   { 'user': 'pebbles', 'active': false }
  	     * ];
  	     *
  	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
  	     * // => 2
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
  	     * // => 0
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.findLastIndex(users, ['active', false]);
  	     * // => 2
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.findLastIndex(users, 'active');
  	     * // => 0
  	     */function findLastIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=length-1;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}/**
  	     * Flattens `array` a single level deep.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to flatten.
  	     * @returns {Array} Returns the new flattened array.
  	     * @example
  	     *
  	     * _.flatten([1, [2, [3, [4]], 5]]);
  	     * // => [1, 2, [3, [4]], 5]
  	     */function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[];}/**
  	     * Recursively flattens `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to flatten.
  	     * @returns {Array} Returns the new flattened array.
  	     * @example
  	     *
  	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
  	     * // => [1, 2, 3, 4, 5]
  	     */function flattenDeep(array){var length=array==null?0:array.length;return length?baseFlatten(array,INFINITY):[];}/**
  	     * Recursively flatten `array` up to `depth` times.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.4.0
  	     * @category Array
  	     * @param {Array} array The array to flatten.
  	     * @param {number} [depth=1] The maximum recursion depth.
  	     * @returns {Array} Returns the new flattened array.
  	     * @example
  	     *
  	     * var array = [1, [2, [3, [4]], 5]];
  	     *
  	     * _.flattenDepth(array, 1);
  	     * // => [1, 2, [3, [4]], 5]
  	     *
  	     * _.flattenDepth(array, 2);
  	     * // => [1, 2, 3, [4], 5]
  	     */function flattenDepth(array,depth){var length=array==null?0:array.length;if(!length){return [];}depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(array,depth);}/**
  	     * The inverse of `_.toPairs`; this method returns an object composed
  	     * from key-value `pairs`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} pairs The key-value pairs.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * _.fromPairs([['a', 1], ['b', 2]]);
  	     * // => { 'a': 1, 'b': 2 }
  	     */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}/**
  	     * Gets the first element of `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @alias first
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @returns {*} Returns the first element of `array`.
  	     * @example
  	     *
  	     * _.head([1, 2, 3]);
  	     * // => 1
  	     *
  	     * _.head([]);
  	     * // => undefined
  	     */function head(array){return array&&array.length?array[0]:undefined$1;}/**
  	     * Gets the index at which the first occurrence of `value` is found in `array`
  	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons. If `fromIndex` is negative, it's used as the
  	     * offset from the end of `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {*} value The value to search for.
  	     * @param {number} [fromIndex=0] The index to search from.
  	     * @returns {number} Returns the index of the matched value, else `-1`.
  	     * @example
  	     *
  	     * _.indexOf([1, 2, 1, 2], 2);
  	     * // => 1
  	     *
  	     * // Search from the `fromIndex`.
  	     * _.indexOf([1, 2, 1, 2], 2, 2);
  	     * // => 3
  	     */function indexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}/**
  	     * Gets all but the last element of `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * _.initial([1, 2, 3]);
  	     * // => [1, 2]
  	     */function initial(array){var length=array==null?0:array.length;return length?baseSlice(array,0,-1):[];}/**
  	     * Creates an array of unique values that are included in all given arrays
  	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons. The order and references of result values are
  	     * determined by the first array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @returns {Array} Returns the new array of intersecting values.
  	     * @example
  	     *
  	     * _.intersection([2, 1], [2, 3]);
  	     * // => [2]
  	     */var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});/**
  	     * This method is like `_.intersection` except that it accepts `iteratee`
  	     * which is invoked for each element of each `arrays` to generate the criterion
  	     * by which they're compared. The order and references of result values are
  	     * determined by the first array. The iteratee is invoked with one argument:
  	     * (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Array} Returns the new array of intersecting values.
  	     * @example
  	     *
  	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
  	     * // => [2.1]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
  	     * // => [{ 'x': 1 }]
  	     */var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined$1;}else {mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});/**
  	     * This method is like `_.intersection` except that it accepts `comparator`
  	     * which is invoked to compare elements of `arrays`. The order and references
  	     * of result values are determined by the first array. The comparator is
  	     * invoked with two arguments: (arrVal, othVal).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of intersecting values.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
  	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
  	     *
  	     * _.intersectionWith(objects, others, _.isEqual);
  	     * // => [{ 'x': 1, 'y': 2 }]
  	     */var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);comparator=typeof comparator=='function'?comparator:undefined$1;if(comparator){mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined$1,comparator):[];});/**
  	     * Converts all elements in `array` into a string separated by `separator`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to convert.
  	     * @param {string} [separator=','] The element separator.
  	     * @returns {string} Returns the joined string.
  	     * @example
  	     *
  	     * _.join(['a', 'b', 'c'], '~');
  	     * // => 'a~b~c'
  	     */function join(array,separator){return array==null?'':nativeJoin.call(array,separator);}/**
  	     * Gets the last element of `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @returns {*} Returns the last element of `array`.
  	     * @example
  	     *
  	     * _.last([1, 2, 3]);
  	     * // => 3
  	     */function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined$1;}/**
  	     * This method is like `_.indexOf` except that it iterates over elements of
  	     * `array` from right to left.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {*} value The value to search for.
  	     * @param {number} [fromIndex=array.length-1] The index to search from.
  	     * @returns {number} Returns the index of the matched value, else `-1`.
  	     * @example
  	     *
  	     * _.lastIndexOf([1, 2, 1, 2], 2);
  	     * // => 3
  	     *
  	     * // Search from the `fromIndex`.
  	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
  	     * // => 1
  	     */function lastIndexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=length;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}/**
  	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
  	     * element from the end is returned.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.11.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {number} [n=0] The index of the element to return.
  	     * @returns {*} Returns the nth element of `array`.
  	     * @example
  	     *
  	     * var array = ['a', 'b', 'c', 'd'];
  	     *
  	     * _.nth(array, 1);
  	     * // => 'b'
  	     *
  	     * _.nth(array, -2);
  	     * // => 'c';
  	     */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined$1;}/**
  	     * Removes all given values from `array` using
  	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons.
  	     *
  	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
  	     * to remove elements from an array by predicate.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @param {...*} [values] The values to remove.
  	     * @returns {Array} Returns `array`.
  	     * @example
  	     *
  	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
  	     *
  	     * _.pull(array, 'a', 'c');
  	     * console.log(array);
  	     * // => ['b', 'b']
  	     */var pull=baseRest(pullAll);/**
  	     * This method is like `_.pull` except that it accepts an array of values to remove.
  	     *
  	     * **Note:** Unlike `_.difference`, this method mutates `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @param {Array} values The values to remove.
  	     * @returns {Array} Returns `array`.
  	     * @example
  	     *
  	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
  	     *
  	     * _.pullAll(array, ['a', 'c']);
  	     * console.log(array);
  	     * // => ['b', 'b']
  	     */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}/**
  	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
  	     * invoked for each element of `array` and `values` to generate the criterion
  	     * by which they're compared. The iteratee is invoked with one argument: (value).
  	     *
  	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @param {Array} values The values to remove.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Array} Returns `array`.
  	     * @example
  	     *
  	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
  	     *
  	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
  	     * console.log(array);
  	     * // => [{ 'x': 2 }]
  	     */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}/**
  	     * This method is like `_.pullAll` except that it accepts `comparator` which
  	     * is invoked to compare elements of `array` to `values`. The comparator is
  	     * invoked with two arguments: (arrVal, othVal).
  	     *
  	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.6.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @param {Array} values The values to remove.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns `array`.
  	     * @example
  	     *
  	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
  	     *
  	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
  	     * console.log(array);
  	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
  	     */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined$1,comparator):array;}/**
  	     * Removes elements from `array` corresponding to `indexes` and returns an
  	     * array of removed elements.
  	     *
  	     * **Note:** Unlike `_.at`, this method mutates `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
  	     * @returns {Array} Returns the new array of removed elements.
  	     * @example
  	     *
  	     * var array = ['a', 'b', 'c', 'd'];
  	     * var pulled = _.pullAt(array, [1, 3]);
  	     *
  	     * console.log(array);
  	     * // => ['a', 'c']
  	     *
  	     * console.log(pulled);
  	     * // => ['b', 'd']
  	     */var pullAt=flatRest(function(array,indexes){var length=array==null?0:array.length,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});/**
  	     * Removes all elements from `array` that `predicate` returns truthy for
  	     * and returns an array of the removed elements. The predicate is invoked
  	     * with three arguments: (value, index, array).
  	     *
  	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
  	     * to pull elements from an array by value.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the new array of removed elements.
  	     * @example
  	     *
  	     * var array = [1, 2, 3, 4];
  	     * var evens = _.remove(array, function(n) {
  	     *   return n % 2 == 0;
  	     * });
  	     *
  	     * console.log(array);
  	     * // => [1, 3]
  	     *
  	     * console.log(evens);
  	     * // => [2, 4]
  	     */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}/**
  	     * Reverses `array` so that the first element becomes the last, the second
  	     * element becomes the second to last, and so on.
  	     *
  	     * **Note:** This method mutates `array` and is based on
  	     * [`Array#reverse`](https://mdn.io/Array/reverse).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to modify.
  	     * @returns {Array} Returns `array`.
  	     * @example
  	     *
  	     * var array = [1, 2, 3];
  	     *
  	     * _.reverse(array);
  	     * // => [3, 2, 1]
  	     *
  	     * console.log(array);
  	     * // => [3, 2, 1]
  	     */function reverse(array){return array==null?array:nativeReverse.call(array);}/**
  	     * Creates a slice of `array` from `start` up to, but not including, `end`.
  	     *
  	     * **Note:** This method is used instead of
  	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
  	     * returned.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to slice.
  	     * @param {number} [start=0] The start position.
  	     * @param {number} [end=array.length] The end position.
  	     * @returns {Array} Returns the slice of `array`.
  	     */function slice(array,start,end){var length=array==null?0:array.length;if(!length){return [];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else {start=start==null?0:toInteger(start);end=end===undefined$1?length:toInteger(end);}return baseSlice(array,start,end);}/**
  	     * Uses a binary search to determine the lowest index at which `value`
  	     * should be inserted into `array` in order to maintain its sort order.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The sorted array to inspect.
  	     * @param {*} value The value to evaluate.
  	     * @returns {number} Returns the index at which `value` should be inserted
  	     *  into `array`.
  	     * @example
  	     *
  	     * _.sortedIndex([30, 50], 40);
  	     * // => 1
  	     */function sortedIndex(array,value){return baseSortedIndex(array,value);}/**
  	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
  	     * which is invoked for `value` and each element of `array` to compute their
  	     * sort ranking. The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The sorted array to inspect.
  	     * @param {*} value The value to evaluate.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {number} Returns the index at which `value` should be inserted
  	     *  into `array`.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
  	     *
  	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
  	     * // => 0
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
  	     * // => 0
  	     */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}/**
  	     * This method is like `_.indexOf` except that it performs a binary
  	     * search on a sorted `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {*} value The value to search for.
  	     * @returns {number} Returns the index of the matched value, else `-1`.
  	     * @example
  	     *
  	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
  	     * // => 1
  	     */function sortedIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return -1;}/**
  	     * This method is like `_.sortedIndex` except that it returns the highest
  	     * index at which `value` should be inserted into `array` in order to
  	     * maintain its sort order.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The sorted array to inspect.
  	     * @param {*} value The value to evaluate.
  	     * @returns {number} Returns the index at which `value` should be inserted
  	     *  into `array`.
  	     * @example
  	     *
  	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
  	     * // => 4
  	     */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}/**
  	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
  	     * which is invoked for `value` and each element of `array` to compute their
  	     * sort ranking. The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The sorted array to inspect.
  	     * @param {*} value The value to evaluate.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {number} Returns the index at which `value` should be inserted
  	     *  into `array`.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
  	     *
  	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
  	     * // => 1
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
  	     * // => 1
  	     */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}/**
  	     * This method is like `_.lastIndexOf` except that it performs a binary
  	     * search on a sorted `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {*} value The value to search for.
  	     * @returns {number} Returns the index of the matched value, else `-1`.
  	     * @example
  	     *
  	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
  	     * // => 3
  	     */function sortedLastIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return -1;}/**
  	     * This method is like `_.uniq` except that it's designed and optimized
  	     * for sorted arrays.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @returns {Array} Returns the new duplicate free array.
  	     * @example
  	     *
  	     * _.sortedUniq([1, 1, 2]);
  	     * // => [1, 2]
  	     */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}/**
  	     * This method is like `_.uniqBy` except that it's designed and optimized
  	     * for sorted arrays.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [iteratee] The iteratee invoked per element.
  	     * @returns {Array} Returns the new duplicate free array.
  	     * @example
  	     *
  	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
  	     * // => [1.1, 2.3]
  	     */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}/**
  	     * Gets all but the first element of `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * _.tail([1, 2, 3]);
  	     * // => [2, 3]
  	     */function tail(array){var length=array==null?0:array.length;return length?baseSlice(array,1,length):[];}/**
  	     * Creates a slice of `array` with `n` elements taken from the beginning.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {number} [n=1] The number of elements to take.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * _.take([1, 2, 3]);
  	     * // => [1]
  	     *
  	     * _.take([1, 2, 3], 2);
  	     * // => [1, 2]
  	     *
  	     * _.take([1, 2, 3], 5);
  	     * // => [1, 2, 3]
  	     *
  	     * _.take([1, 2, 3], 0);
  	     * // => []
  	     */function take(array,n,guard){if(!(array&&array.length)){return [];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}/**
  	     * Creates a slice of `array` with `n` elements taken from the end.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {number} [n=1] The number of elements to take.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * _.takeRight([1, 2, 3]);
  	     * // => [3]
  	     *
  	     * _.takeRight([1, 2, 3], 2);
  	     * // => [2, 3]
  	     *
  	     * _.takeRight([1, 2, 3], 5);
  	     * // => [1, 2, 3]
  	     *
  	     * _.takeRight([1, 2, 3], 0);
  	     * // => []
  	     */function takeRight(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}/**
  	     * Creates a slice of `array` with elements taken from the end. Elements are
  	     * taken until `predicate` returns falsey. The predicate is invoked with
  	     * three arguments: (value, index, array).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'active': true },
  	     *   { 'user': 'fred',    'active': false },
  	     *   { 'user': 'pebbles', 'active': false }
  	     * ];
  	     *
  	     * _.takeRightWhile(users, function(o) { return !o.active; });
  	     * // => objects for ['fred', 'pebbles']
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
  	     * // => objects for ['pebbles']
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.takeRightWhile(users, ['active', false]);
  	     * // => objects for ['fred', 'pebbles']
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.takeRightWhile(users, 'active');
  	     * // => []
  	     */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}/**
  	     * Creates a slice of `array` with elements taken from the beginning. Elements
  	     * are taken until `predicate` returns falsey. The predicate is invoked with
  	     * three arguments: (value, index, array).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Array
  	     * @param {Array} array The array to query.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the slice of `array`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'active': false },
  	     *   { 'user': 'fred',    'active': false },
  	     *   { 'user': 'pebbles', 'active': true }
  	     * ];
  	     *
  	     * _.takeWhile(users, function(o) { return !o.active; });
  	     * // => objects for ['barney', 'fred']
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
  	     * // => objects for ['barney']
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.takeWhile(users, ['active', false]);
  	     * // => objects for ['barney', 'fred']
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.takeWhile(users, 'active');
  	     * // => []
  	     */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}/**
  	     * Creates an array of unique values, in order, from all given arrays using
  	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @returns {Array} Returns the new array of combined values.
  	     * @example
  	     *
  	     * _.union([2], [1, 2]);
  	     * // => [2, 1]
  	     */var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});/**
  	     * This method is like `_.union` except that it accepts `iteratee` which is
  	     * invoked for each element of each `arrays` to generate the criterion by
  	     * which uniqueness is computed. Result values are chosen from the first
  	     * array in which the value occurs. The iteratee is invoked with one argument:
  	     * (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Array} Returns the new array of combined values.
  	     * @example
  	     *
  	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
  	     * // => [2.1, 1.2]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
  	     * // => [{ 'x': 1 }, { 'x': 2 }]
  	     */var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});/**
  	     * This method is like `_.union` except that it accepts `comparator` which
  	     * is invoked to compare elements of `arrays`. Result values are chosen from
  	     * the first array in which the value occurs. The comparator is invoked
  	     * with two arguments: (arrVal, othVal).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of combined values.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
  	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
  	     *
  	     * _.unionWith(objects, others, _.isEqual);
  	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
  	     */var unionWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined$1;return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined$1,comparator);});/**
  	     * Creates a duplicate-free version of an array, using
  	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons, in which only the first occurrence of each element
  	     * is kept. The order of result values is determined by the order they occur
  	     * in the array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @returns {Array} Returns the new duplicate free array.
  	     * @example
  	     *
  	     * _.uniq([2, 1, 2]);
  	     * // => [2, 1]
  	     */function uniq(array){return array&&array.length?baseUniq(array):[];}/**
  	     * This method is like `_.uniq` except that it accepts `iteratee` which is
  	     * invoked for each element in `array` to generate the criterion by which
  	     * uniqueness is computed. The order of result values is determined by the
  	     * order they occur in the array. The iteratee is invoked with one argument:
  	     * (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Array} Returns the new duplicate free array.
  	     * @example
  	     *
  	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
  	     * // => [2.1, 1.2]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
  	     * // => [{ 'x': 1 }, { 'x': 2 }]
  	     */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}/**
  	     * This method is like `_.uniq` except that it accepts `comparator` which
  	     * is invoked to compare elements of `array`. The order of result values is
  	     * determined by the order they occur in the array.The comparator is invoked
  	     * with two arguments: (arrVal, othVal).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new duplicate free array.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
  	     *
  	     * _.uniqWith(objects, _.isEqual);
  	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
  	     */function uniqWith(array,comparator){comparator=typeof comparator=='function'?comparator:undefined$1;return array&&array.length?baseUniq(array,undefined$1,comparator):[];}/**
  	     * This method is like `_.zip` except that it accepts an array of grouped
  	     * elements and creates an array regrouping the elements to their pre-zip
  	     * configuration.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.2.0
  	     * @category Array
  	     * @param {Array} array The array of grouped elements to process.
  	     * @returns {Array} Returns the new array of regrouped elements.
  	     * @example
  	     *
  	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
  	     * // => [['a', 1, true], ['b', 2, false]]
  	     *
  	     * _.unzip(zipped);
  	     * // => [['a', 'b'], [1, 2], [true, false]]
  	     */function unzip(array){if(!(array&&array.length)){return [];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}/**
  	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
  	     * how regrouped values should be combined. The iteratee is invoked with the
  	     * elements of each group: (...group).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.8.0
  	     * @category Array
  	     * @param {Array} array The array of grouped elements to process.
  	     * @param {Function} [iteratee=_.identity] The function to combine
  	     *  regrouped values.
  	     * @returns {Array} Returns the new array of regrouped elements.
  	     * @example
  	     *
  	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
  	     * // => [[1, 10, 100], [2, 20, 200]]
  	     *
  	     * _.unzipWith(zipped, _.add);
  	     * // => [3, 30, 300]
  	     */function unzipWith(array,iteratee){if(!(array&&array.length)){return [];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined$1,group);});}/**
  	     * Creates an array excluding all given values using
  	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * for equality comparisons.
  	     *
  	     * **Note:** Unlike `_.pull`, this method returns a new array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {Array} array The array to inspect.
  	     * @param {...*} [values] The values to exclude.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @see _.difference, _.xor
  	     * @example
  	     *
  	     * _.without([2, 1, 2, 3], 1, 2);
  	     * // => [3]
  	     */var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});/**
  	     * Creates an array of unique values that is the
  	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
  	     * of the given arrays. The order of result values is determined by the order
  	     * they occur in the arrays.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.4.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @see _.difference, _.without
  	     * @example
  	     *
  	     * _.xor([2, 1], [2, 3]);
  	     * // => [1, 3]
  	     */var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});/**
  	     * This method is like `_.xor` except that it accepts `iteratee` which is
  	     * invoked for each element of each `arrays` to generate the criterion by
  	     * which by which they're compared. The order of result values is determined
  	     * by the order they occur in the arrays. The iteratee is invoked with one
  	     * argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @example
  	     *
  	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
  	     * // => [1.2, 3.4]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
  	     * // => [{ 'x': 2 }]
  	     */var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});/**
  	     * This method is like `_.xor` except that it accepts `comparator` which is
  	     * invoked to compare elements of `arrays`. The order of result values is
  	     * determined by the order they occur in the arrays. The comparator is invoked
  	     * with two arguments: (arrVal, othVal).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to inspect.
  	     * @param {Function} [comparator] The comparator invoked per element.
  	     * @returns {Array} Returns the new array of filtered values.
  	     * @example
  	     *
  	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
  	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
  	     *
  	     * _.xorWith(objects, others, _.isEqual);
  	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
  	     */var xorWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined$1;return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined$1,comparator);});/**
  	     * Creates an array of grouped elements, the first of which contains the
  	     * first elements of the given arrays, the second of which contains the
  	     * second elements of the given arrays, and so on.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to process.
  	     * @returns {Array} Returns the new array of grouped elements.
  	     * @example
  	     *
  	     * _.zip(['a', 'b'], [1, 2], [true, false]);
  	     * // => [['a', 1, true], ['b', 2, false]]
  	     */var zip=baseRest(unzip);/**
  	     * This method is like `_.fromPairs` except that it accepts two arrays,
  	     * one of property identifiers and one of corresponding values.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.4.0
  	     * @category Array
  	     * @param {Array} [props=[]] The property identifiers.
  	     * @param {Array} [values=[]] The property values.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * _.zipObject(['a', 'b'], [1, 2]);
  	     * // => { 'a': 1, 'b': 2 }
  	     */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}/**
  	     * This method is like `_.zipObject` except that it supports property paths.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.1.0
  	     * @category Array
  	     * @param {Array} [props=[]] The property identifiers.
  	     * @param {Array} [values=[]] The property values.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
  	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
  	     */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}/**
  	     * This method is like `_.zip` except that it accepts `iteratee` to specify
  	     * how grouped values should be combined. The iteratee is invoked with the
  	     * elements of each group: (...group).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.8.0
  	     * @category Array
  	     * @param {...Array} [arrays] The arrays to process.
  	     * @param {Function} [iteratee=_.identity] The function to combine
  	     *  grouped values.
  	     * @returns {Array} Returns the new array of grouped elements.
  	     * @example
  	     *
  	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
  	     *   return a + b + c;
  	     * });
  	     * // => [111, 222]
  	     */var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined$1;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined$1;return unzipWith(arrays,iteratee);});/*------------------------------------------------------------------------*/ /**
  	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
  	     * chain sequences enabled. The result of such sequences must be unwrapped
  	     * with `_#value`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.3.0
  	     * @category Seq
  	     * @param {*} value The value to wrap.
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'age': 36 },
  	     *   { 'user': 'fred',    'age': 40 },
  	     *   { 'user': 'pebbles', 'age': 1 }
  	     * ];
  	     *
  	     * var youngest = _
  	     *   .chain(users)
  	     *   .sortBy('age')
  	     *   .map(function(o) {
  	     *     return o.user + ' is ' + o.age;
  	     *   })
  	     *   .head()
  	     *   .value();
  	     * // => 'pebbles is 1'
  	     */function chain(value){var result=lodash(value);result.__chain__=true;return result;}/**
  	     * This method invokes `interceptor` and returns `value`. The interceptor
  	     * is invoked with one argument; (value). The purpose of this method is to
  	     * "tap into" a method chain sequence in order to modify intermediate results.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Seq
  	     * @param {*} value The value to provide to `interceptor`.
  	     * @param {Function} interceptor The function to invoke.
  	     * @returns {*} Returns `value`.
  	     * @example
  	     *
  	     * _([1, 2, 3])
  	     *  .tap(function(array) {
  	     *    // Mutate input array.
  	     *    array.pop();
  	     *  })
  	     *  .reverse()
  	     *  .value();
  	     * // => [2, 1]
  	     */function tap(value,interceptor){interceptor(value);return value;}/**
  	     * This method is like `_.tap` except that it returns the result of `interceptor`.
  	     * The purpose of this method is to "pass thru" values replacing intermediate
  	     * results in a method chain sequence.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Seq
  	     * @param {*} value The value to provide to `interceptor`.
  	     * @param {Function} interceptor The function to invoke.
  	     * @returns {*} Returns the result of `interceptor`.
  	     * @example
  	     *
  	     * _('  abc  ')
  	     *  .chain()
  	     *  .trim()
  	     *  .thru(function(value) {
  	     *    return [value];
  	     *  })
  	     *  .value();
  	     * // => ['abc']
  	     */function thru(value,interceptor){return interceptor(value);}/**
  	     * This method is the wrapper version of `_.at`.
  	     *
  	     * @name at
  	     * @memberOf _
  	     * @since 1.0.0
  	     * @category Seq
  	     * @param {...(string|string[])} [paths] The property paths to pick.
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
  	     *
  	     * _(object).at(['a[0].b.c', 'a[1]']).value();
  	     * // => [3, 4]
  	     */var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function interceptor(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined$1});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined$1);}return array;});});/**
  	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
  	     *
  	     * @name chain
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Seq
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney', 'age': 36 },
  	     *   { 'user': 'fred',   'age': 40 }
  	     * ];
  	     *
  	     * // A sequence without explicit chaining.
  	     * _(users).head();
  	     * // => { 'user': 'barney', 'age': 36 }
  	     *
  	     * // A sequence with explicit chaining.
  	     * _(users)
  	     *   .chain()
  	     *   .head()
  	     *   .pick('user')
  	     *   .value();
  	     * // => { 'user': 'barney' }
  	     */function wrapperChain(){return chain(this);}/**
  	     * Executes the chain sequence and returns the wrapped result.
  	     *
  	     * @name commit
  	     * @memberOf _
  	     * @since 3.2.0
  	     * @category Seq
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * var array = [1, 2];
  	     * var wrapped = _(array).push(3);
  	     *
  	     * console.log(array);
  	     * // => [1, 2]
  	     *
  	     * wrapped = wrapped.commit();
  	     * console.log(array);
  	     * // => [1, 2, 3]
  	     *
  	     * wrapped.last();
  	     * // => 3
  	     *
  	     * console.log(array);
  	     * // => [1, 2, 3]
  	     */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}/**
  	     * Gets the next value on a wrapped object following the
  	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
  	     *
  	     * @name next
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Seq
  	     * @returns {Object} Returns the next iterator value.
  	     * @example
  	     *
  	     * var wrapped = _([1, 2]);
  	     *
  	     * wrapped.next();
  	     * // => { 'done': false, 'value': 1 }
  	     *
  	     * wrapped.next();
  	     * // => { 'done': false, 'value': 2 }
  	     *
  	     * wrapped.next();
  	     * // => { 'done': true, 'value': undefined }
  	     */function wrapperNext(){if(this.__values__===undefined$1){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined$1:this.__values__[this.__index__++];return {'done':done,'value':value};}/**
  	     * Enables the wrapper to be iterable.
  	     *
  	     * @name Symbol.iterator
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Seq
  	     * @returns {Object} Returns the wrapper object.
  	     * @example
  	     *
  	     * var wrapped = _([1, 2]);
  	     *
  	     * wrapped[Symbol.iterator]() === wrapped;
  	     * // => true
  	     *
  	     * Array.from(wrapped);
  	     * // => [1, 2]
  	     */function wrapperToIterator(){return this;}/**
  	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
  	     *
  	     * @name plant
  	     * @memberOf _
  	     * @since 3.2.0
  	     * @category Seq
  	     * @param {*} value The value to plant.
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * function square(n) {
  	     *   return n * n;
  	     * }
  	     *
  	     * var wrapped = _([1, 2]).map(square);
  	     * var other = wrapped.plant([3, 4]);
  	     *
  	     * other.value();
  	     * // => [9, 16]
  	     *
  	     * wrapped.value();
  	     * // => [1, 4]
  	     */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined$1;if(result){previous.__wrapped__=clone;}else {result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}/**
  	     * This method is the wrapper version of `_.reverse`.
  	     *
  	     * **Note:** This method mutates the wrapped array.
  	     *
  	     * @name reverse
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Seq
  	     * @returns {Object} Returns the new `lodash` wrapper instance.
  	     * @example
  	     *
  	     * var array = [1, 2, 3];
  	     *
  	     * _(array).reverse().value()
  	     * // => [3, 2, 1]
  	     *
  	     * console.log(array);
  	     * // => [3, 2, 1]
  	     */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined$1});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}/**
  	     * Executes the chain sequence to resolve the unwrapped value.
  	     *
  	     * @name value
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @alias toJSON, valueOf
  	     * @category Seq
  	     * @returns {*} Returns the resolved unwrapped value.
  	     * @example
  	     *
  	     * _([1, 2, 3]).value();
  	     * // => [1, 2, 3]
  	     */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}/*------------------------------------------------------------------------*/ /**
  	     * Creates an object composed of keys generated from the results of running
  	     * each element of `collection` thru `iteratee`. The corresponding value of
  	     * each key is the number of times the key was returned by `iteratee`. The
  	     * iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.5.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
  	     * @returns {Object} Returns the composed aggregate object.
  	     * @example
  	     *
  	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
  	     * // => { '4': 1, '6': 2 }
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.countBy(['one', 'two', 'three'], 'length');
  	     * // => { '3': 2, '5': 1 }
  	     */var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else {baseAssignValue(result,key,1);}});/**
  	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
  	     * Iteration is stopped once `predicate` returns falsey. The predicate is
  	     * invoked with three arguments: (value, index|key, collection).
  	     *
  	     * **Note:** This method returns `true` for
  	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
  	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
  	     * elements of empty collections.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.every([true, 1, null, 'yes'], Boolean);
  	     * // => false
  	     *
  	     * var users = [
  	     *   { 'user': 'barney', 'age': 36, 'active': false },
  	     *   { 'user': 'fred',   'age': 40, 'active': false }
  	     * ];
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.every(users, { 'user': 'barney', 'active': false });
  	     * // => false
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.every(users, ['active', false]);
  	     * // => true
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.every(users, 'active');
  	     * // => false
  	     */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}/**
  	     * Iterates over elements of `collection`, returning an array of all elements
  	     * `predicate` returns truthy for. The predicate is invoked with three
  	     * arguments: (value, index|key, collection).
  	     *
  	     * **Note:** Unlike `_.remove`, this method returns a new array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the new filtered array.
  	     * @see _.reject
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney', 'age': 36, 'active': true },
  	     *   { 'user': 'fred',   'age': 40, 'active': false }
  	     * ];
  	     *
  	     * _.filter(users, function(o) { return !o.active; });
  	     * // => objects for ['fred']
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.filter(users, { 'age': 36, 'active': true });
  	     * // => objects for ['barney']
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.filter(users, ['active', false]);
  	     * // => objects for ['fred']
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.filter(users, 'active');
  	     * // => objects for ['barney']
  	     *
  	     * // Combining several predicates using `_.overEvery` or `_.overSome`.
  	     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
  	     * // => objects for ['fred', 'barney']
  	     */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}/**
  	     * Iterates over elements of `collection`, returning the first element
  	     * `predicate` returns truthy for. The predicate is invoked with three
  	     * arguments: (value, index|key, collection).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to inspect.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @param {number} [fromIndex=0] The index to search from.
  	     * @returns {*} Returns the matched element, else `undefined`.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'age': 36, 'active': true },
  	     *   { 'user': 'fred',    'age': 40, 'active': false },
  	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
  	     * ];
  	     *
  	     * _.find(users, function(o) { return o.age < 40; });
  	     * // => object for 'barney'
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.find(users, { 'age': 1, 'active': true });
  	     * // => object for 'pebbles'
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.find(users, ['active', false]);
  	     * // => object for 'fred'
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.find(users, 'active');
  	     * // => object for 'barney'
  	     */var find=createFind(findIndex);/**
  	     * This method is like `_.find` except that it iterates over elements of
  	     * `collection` from right to left.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to inspect.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @param {number} [fromIndex=collection.length-1] The index to search from.
  	     * @returns {*} Returns the matched element, else `undefined`.
  	     * @example
  	     *
  	     * _.findLast([1, 2, 3, 4], function(n) {
  	     *   return n % 2 == 1;
  	     * });
  	     * // => 3
  	     */var findLast=createFind(findLastIndex);/**
  	     * Creates a flattened array of values by running each element in `collection`
  	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
  	     * with three arguments: (value, index|key, collection).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the new flattened array.
  	     * @example
  	     *
  	     * function duplicate(n) {
  	     *   return [n, n];
  	     * }
  	     *
  	     * _.flatMap([1, 2], duplicate);
  	     * // => [1, 1, 2, 2]
  	     */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}/**
  	     * This method is like `_.flatMap` except that it recursively flattens the
  	     * mapped results.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.7.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the new flattened array.
  	     * @example
  	     *
  	     * function duplicate(n) {
  	     *   return [[[n, n]]];
  	     * }
  	     *
  	     * _.flatMapDeep([1, 2], duplicate);
  	     * // => [1, 1, 2, 2]
  	     */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}/**
  	     * This method is like `_.flatMap` except that it recursively flattens the
  	     * mapped results up to `depth` times.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.7.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @param {number} [depth=1] The maximum recursion depth.
  	     * @returns {Array} Returns the new flattened array.
  	     * @example
  	     *
  	     * function duplicate(n) {
  	     *   return [[[n, n]]];
  	     * }
  	     *
  	     * _.flatMapDepth([1, 2], duplicate, 2);
  	     * // => [[1, 1], [2, 2]]
  	     */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}/**
  	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
  	     * The iteratee is invoked with three arguments: (value, index|key, collection).
  	     * Iteratee functions may exit iteration early by explicitly returning `false`.
  	     *
  	     * **Note:** As with other "Collections" methods, objects with a "length"
  	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
  	     * or `_.forOwn` for object iteration.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @alias each
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Array|Object} Returns `collection`.
  	     * @see _.forEachRight
  	     * @example
  	     *
  	     * _.forEach([1, 2], function(value) {
  	     *   console.log(value);
  	     * });
  	     * // => Logs `1` then `2`.
  	     *
  	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
  	     *   console.log(key);
  	     * });
  	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
  	     */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}/**
  	     * This method is like `_.forEach` except that it iterates over elements of
  	     * `collection` from right to left.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @alias eachRight
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Array|Object} Returns `collection`.
  	     * @see _.forEach
  	     * @example
  	     *
  	     * _.forEachRight([1, 2], function(value) {
  	     *   console.log(value);
  	     * });
  	     * // => Logs `2` then `1`.
  	     */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}/**
  	     * Creates an object composed of keys generated from the results of running
  	     * each element of `collection` thru `iteratee`. The order of grouped values
  	     * is determined by the order they occur in `collection`. The corresponding
  	     * value of each key is an array of elements responsible for generating the
  	     * key. The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
  	     * @returns {Object} Returns the composed aggregate object.
  	     * @example
  	     *
  	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
  	     * // => { '4': [4.2], '6': [6.1, 6.3] }
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.groupBy(['one', 'two', 'three'], 'length');
  	     * // => { '3': ['one', 'two'], '5': ['three'] }
  	     */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else {baseAssignValue(result,key,[value]);}});/**
  	     * Checks if `value` is in `collection`. If `collection` is a string, it's
  	     * checked for a substring of `value`, otherwise
  	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
  	     * the offset from the end of `collection`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object|string} collection The collection to inspect.
  	     * @param {*} value The value to search for.
  	     * @param {number} [fromIndex=0] The index to search from.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
  	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
  	     * @example
  	     *
  	     * _.includes([1, 2, 3], 1);
  	     * // => true
  	     *
  	     * _.includes([1, 2, 3], 1, 2);
  	     * // => false
  	     *
  	     * _.includes({ 'a': 1, 'b': 2 }, 1);
  	     * // => true
  	     *
  	     * _.includes('abcd', 'bc');
  	     * // => true
  	     */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}/**
  	     * Invokes the method at `path` of each element in `collection`, returning
  	     * an array of the results of each invoked method. Any additional arguments
  	     * are provided to each invoked method. If `path` is a function, it's invoked
  	     * for, and `this` bound to, each element in `collection`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Array|Function|string} path The path of the method to invoke or
  	     *  the function invoked per iteration.
  	     * @param {...*} [args] The arguments to invoke each method with.
  	     * @returns {Array} Returns the array of results.
  	     * @example
  	     *
  	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
  	     * // => [[1, 5, 7], [1, 2, 3]]
  	     *
  	     * _.invokeMap([123, 456], String.prototype.split, '');
  	     * // => [['1', '2', '3'], ['4', '5', '6']]
  	     */var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){result[++index]=isFunc?apply(path,value,args):baseInvoke(value,path,args);});return result;});/**
  	     * Creates an object composed of keys generated from the results of running
  	     * each element of `collection` thru `iteratee`. The corresponding value of
  	     * each key is the last element responsible for generating the key. The
  	     * iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
  	     * @returns {Object} Returns the composed aggregate object.
  	     * @example
  	     *
  	     * var array = [
  	     *   { 'dir': 'left', 'code': 97 },
  	     *   { 'dir': 'right', 'code': 100 }
  	     * ];
  	     *
  	     * _.keyBy(array, function(o) {
  	     *   return String.fromCharCode(o.code);
  	     * });
  	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
  	     *
  	     * _.keyBy(array, 'dir');
  	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
  	     */var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});/**
  	     * Creates an array of values by running each element in `collection` thru
  	     * `iteratee`. The iteratee is invoked with three arguments:
  	     * (value, index|key, collection).
  	     *
  	     * Many lodash methods are guarded to work as iteratees for methods like
  	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
  	     *
  	     * The guarded methods are:
  	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
  	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
  	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
  	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the new mapped array.
  	     * @example
  	     *
  	     * function square(n) {
  	     *   return n * n;
  	     * }
  	     *
  	     * _.map([4, 8], square);
  	     * // => [16, 64]
  	     *
  	     * _.map({ 'a': 4, 'b': 8 }, square);
  	     * // => [16, 64] (iteration order is not guaranteed)
  	     *
  	     * var users = [
  	     *   { 'user': 'barney' },
  	     *   { 'user': 'fred' }
  	     * ];
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.map(users, 'user');
  	     * // => ['barney', 'fred']
  	     */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}/**
  	     * This method is like `_.sortBy` except that it allows specifying the sort
  	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
  	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
  	     * descending or "asc" for ascending sort order of corresponding values.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
  	     *  The iteratees to sort by.
  	     * @param {string[]} [orders] The sort orders of `iteratees`.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
  	     * @returns {Array} Returns the new sorted array.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'fred',   'age': 48 },
  	     *   { 'user': 'barney', 'age': 34 },
  	     *   { 'user': 'fred',   'age': 40 },
  	     *   { 'user': 'barney', 'age': 36 }
  	     * ];
  	     *
  	     * // Sort by `user` in ascending order and by `age` in descending order.
  	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
  	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
  	     */function orderBy(collection,iteratees,orders,guard){if(collection==null){return [];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined$1:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}/**
  	     * Creates an array of elements split into two groups, the first of which
  	     * contains elements `predicate` returns truthy for, the second of which
  	     * contains elements `predicate` returns falsey for. The predicate is
  	     * invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the array of grouped elements.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney',  'age': 36, 'active': false },
  	     *   { 'user': 'fred',    'age': 40, 'active': true },
  	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
  	     * ];
  	     *
  	     * _.partition(users, function(o) { return o.active; });
  	     * // => objects for [['fred'], ['barney', 'pebbles']]
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.partition(users, { 'age': 1, 'active': false });
  	     * // => objects for [['pebbles'], ['barney', 'fred']]
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.partition(users, ['active', false]);
  	     * // => objects for [['barney', 'pebbles'], ['fred']]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.partition(users, 'active');
  	     * // => objects for [['fred'], ['barney', 'pebbles']]
  	     */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return [[],[]];});/**
  	     * Reduces `collection` to a value which is the accumulated result of running
  	     * each element in `collection` thru `iteratee`, where each successive
  	     * invocation is supplied the return value of the previous. If `accumulator`
  	     * is not given, the first element of `collection` is used as the initial
  	     * value. The iteratee is invoked with four arguments:
  	     * (accumulator, value, index|key, collection).
  	     *
  	     * Many lodash methods are guarded to work as iteratees for methods like
  	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
  	     *
  	     * The guarded methods are:
  	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
  	     * and `sortBy`
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @param {*} [accumulator] The initial value.
  	     * @returns {*} Returns the accumulated value.
  	     * @see _.reduceRight
  	     * @example
  	     *
  	     * _.reduce([1, 2], function(sum, n) {
  	     *   return sum + n;
  	     * }, 0);
  	     * // => 3
  	     *
  	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
  	     *   (result[value] || (result[value] = [])).push(key);
  	     *   return result;
  	     * }, {});
  	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
  	     */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}/**
  	     * This method is like `_.reduce` except that it iterates over elements of
  	     * `collection` from right to left.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @param {*} [accumulator] The initial value.
  	     * @returns {*} Returns the accumulated value.
  	     * @see _.reduce
  	     * @example
  	     *
  	     * var array = [[0, 1], [2, 3], [4, 5]];
  	     *
  	     * _.reduceRight(array, function(flattened, other) {
  	     *   return flattened.concat(other);
  	     * }, []);
  	     * // => [4, 5, 2, 3, 0, 1]
  	     */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}/**
  	     * The opposite of `_.filter`; this method returns the elements of `collection`
  	     * that `predicate` does **not** return truthy for.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the new filtered array.
  	     * @see _.filter
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney', 'age': 36, 'active': false },
  	     *   { 'user': 'fred',   'age': 40, 'active': true }
  	     * ];
  	     *
  	     * _.reject(users, function(o) { return !o.active; });
  	     * // => objects for ['fred']
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.reject(users, { 'age': 40, 'active': true });
  	     * // => objects for ['barney']
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.reject(users, ['active', false]);
  	     * // => objects for ['fred']
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.reject(users, 'active');
  	     * // => objects for ['barney']
  	     */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}/**
  	     * Gets a random element from `collection`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to sample.
  	     * @returns {*} Returns the random element.
  	     * @example
  	     *
  	     * _.sample([1, 2, 3, 4]);
  	     * // => 2
  	     */function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}/**
  	     * Gets `n` random elements at unique keys from `collection` up to the
  	     * size of `collection`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to sample.
  	     * @param {number} [n=1] The number of elements to sample.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the random elements.
  	     * @example
  	     *
  	     * _.sampleSize([1, 2, 3], 2);
  	     * // => [3, 1]
  	     *
  	     * _.sampleSize([1, 2, 3], 4);
  	     * // => [2, 3, 1]
  	     */function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined$1){n=1;}else {n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}/**
  	     * Creates an array of shuffled values, using a version of the
  	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to shuffle.
  	     * @returns {Array} Returns the new shuffled array.
  	     * @example
  	     *
  	     * _.shuffle([1, 2, 3, 4]);
  	     * // => [4, 1, 3, 2]
  	     */function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}/**
  	     * Gets the size of `collection` by returning its length for array-like
  	     * values or the number of own enumerable string keyed properties for objects.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object|string} collection The collection to inspect.
  	     * @returns {number} Returns the collection size.
  	     * @example
  	     *
  	     * _.size([1, 2, 3]);
  	     * // => 3
  	     *
  	     * _.size({ 'a': 1, 'b': 2 });
  	     * // => 2
  	     *
  	     * _.size('pebbles');
  	     * // => 7
  	     */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}/**
  	     * Checks if `predicate` returns truthy for **any** element of `collection`.
  	     * Iteration is stopped once `predicate` returns truthy. The predicate is
  	     * invoked with three arguments: (value, index|key, collection).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {boolean} Returns `true` if any element passes the predicate check,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.some([null, 0, 'yes', false], Boolean);
  	     * // => true
  	     *
  	     * var users = [
  	     *   { 'user': 'barney', 'active': true },
  	     *   { 'user': 'fred',   'active': false }
  	     * ];
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.some(users, { 'user': 'barney', 'active': false });
  	     * // => false
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.some(users, ['active', false]);
  	     * // => true
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.some(users, 'active');
  	     * // => true
  	     */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}/**
  	     * Creates an array of elements, sorted in ascending order by the results of
  	     * running each element in a collection thru each iteratee. This method
  	     * performs a stable sort, that is, it preserves the original sort order of
  	     * equal elements. The iteratees are invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Collection
  	     * @param {Array|Object} collection The collection to iterate over.
  	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
  	     *  The iteratees to sort by.
  	     * @returns {Array} Returns the new sorted array.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'fred',   'age': 48 },
  	     *   { 'user': 'barney', 'age': 36 },
  	     *   { 'user': 'fred',   'age': 30 },
  	     *   { 'user': 'barney', 'age': 34 }
  	     * ];
  	     *
  	     * _.sortBy(users, [function(o) { return o.user; }]);
  	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
  	     *
  	     * _.sortBy(users, ['user', 'age']);
  	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
  	     */var sortBy=baseRest(function(collection,iteratees){if(collection==null){return [];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});/*------------------------------------------------------------------------*/ /**
  	     * Gets the timestamp of the number of milliseconds that have elapsed since
  	     * the Unix epoch (1 January 1970 00:00:00 UTC).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.4.0
  	     * @category Date
  	     * @returns {number} Returns the timestamp.
  	     * @example
  	     *
  	     * _.defer(function(stamp) {
  	     *   console.log(_.now() - stamp);
  	     * }, _.now());
  	     * // => Logs the number of milliseconds it took for the deferred invocation.
  	     */var now=ctxNow||function(){return root.Date.now();};/*------------------------------------------------------------------------*/ /**
  	     * The opposite of `_.before`; this method creates a function that invokes
  	     * `func` once it's called `n` or more times.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {number} n The number of calls before `func` is invoked.
  	     * @param {Function} func The function to restrict.
  	     * @returns {Function} Returns the new restricted function.
  	     * @example
  	     *
  	     * var saves = ['profile', 'settings'];
  	     *
  	     * var done = _.after(saves.length, function() {
  	     *   console.log('done saving!');
  	     * });
  	     *
  	     * _.forEach(saves, function(type) {
  	     *   asyncSave({ 'type': type, 'complete': done });
  	     * });
  	     * // => Logs 'done saving!' after the two async saves have completed.
  	     */function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}/**
  	     * Creates a function that invokes `func`, with up to `n` arguments,
  	     * ignoring any additional arguments.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Function
  	     * @param {Function} func The function to cap arguments for.
  	     * @param {number} [n=func.length] The arity cap.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Function} Returns the new capped function.
  	     * @example
  	     *
  	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
  	     * // => [6, 8, 10]
  	     */function ary(func,n,guard){n=guard?undefined$1:n;n=func&&n==null?func.length:n;return createWrap(func,WRAP_ARY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,n);}/**
  	     * Creates a function that invokes `func`, with the `this` binding and arguments
  	     * of the created function, while it's called less than `n` times. Subsequent
  	     * calls to the created function return the result of the last `func` invocation.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Function
  	     * @param {number} n The number of calls at which `func` is no longer invoked.
  	     * @param {Function} func The function to restrict.
  	     * @returns {Function} Returns the new restricted function.
  	     * @example
  	     *
  	     * jQuery(element).on('click', _.before(5, addContactToList));
  	     * // => Allows adding up to 4 contacts to the list.
  	     */function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined$1;}return result;};}/**
  	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
  	     * and `partials` prepended to the arguments it receives.
  	     *
  	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
  	     * may be used as a placeholder for partially applied arguments.
  	     *
  	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
  	     * property of bound functions.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to bind.
  	     * @param {*} thisArg The `this` binding of `func`.
  	     * @param {...*} [partials] The arguments to be partially applied.
  	     * @returns {Function} Returns the new bound function.
  	     * @example
  	     *
  	     * function greet(greeting, punctuation) {
  	     *   return greeting + ' ' + this.user + punctuation;
  	     * }
  	     *
  	     * var object = { 'user': 'fred' };
  	     *
  	     * var bound = _.bind(greet, object, 'hi');
  	     * bound('!');
  	     * // => 'hi fred!'
  	     *
  	     * // Bound with placeholders.
  	     * var bound = _.bind(greet, object, _, '!');
  	     * bound('hi');
  	     * // => 'hi fred!'
  	     */var bind=baseRest(function(func,thisArg,partials){var bitmask=WRAP_BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});/**
  	     * Creates a function that invokes the method at `object[key]` with `partials`
  	     * prepended to the arguments it receives.
  	     *
  	     * This method differs from `_.bind` by allowing bound functions to reference
  	     * methods that may be redefined or don't yet exist. See
  	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
  	     * for more details.
  	     *
  	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
  	     * builds, may be used as a placeholder for partially applied arguments.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.10.0
  	     * @category Function
  	     * @param {Object} object The object to invoke the method on.
  	     * @param {string} key The key of the method.
  	     * @param {...*} [partials] The arguments to be partially applied.
  	     * @returns {Function} Returns the new bound function.
  	     * @example
  	     *
  	     * var object = {
  	     *   'user': 'fred',
  	     *   'greet': function(greeting, punctuation) {
  	     *     return greeting + ' ' + this.user + punctuation;
  	     *   }
  	     * };
  	     *
  	     * var bound = _.bindKey(object, 'greet', 'hi');
  	     * bound('!');
  	     * // => 'hi fred!'
  	     *
  	     * object.greet = function(greeting, punctuation) {
  	     *   return greeting + 'ya ' + this.user + punctuation;
  	     * };
  	     *
  	     * bound('!');
  	     * // => 'hiya fred!'
  	     *
  	     * // Bound with placeholders.
  	     * var bound = _.bindKey(object, 'greet', _, '!');
  	     * bound('hi');
  	     * // => 'hiya fred!'
  	     */var bindKey=baseRest(function(object,key,partials){var bitmask=WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});/**
  	     * Creates a function that accepts arguments of `func` and either invokes
  	     * `func` returning its result, if at least `arity` number of arguments have
  	     * been provided, or returns a function that accepts the remaining `func`
  	     * arguments, and so on. The arity of `func` may be specified if `func.length`
  	     * is not sufficient.
  	     *
  	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
  	     * may be used as a placeholder for provided arguments.
  	     *
  	     * **Note:** This method doesn't set the "length" property of curried functions.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Function
  	     * @param {Function} func The function to curry.
  	     * @param {number} [arity=func.length] The arity of `func`.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Function} Returns the new curried function.
  	     * @example
  	     *
  	     * var abc = function(a, b, c) {
  	     *   return [a, b, c];
  	     * };
  	     *
  	     * var curried = _.curry(abc);
  	     *
  	     * curried(1)(2)(3);
  	     * // => [1, 2, 3]
  	     *
  	     * curried(1, 2)(3);
  	     * // => [1, 2, 3]
  	     *
  	     * curried(1, 2, 3);
  	     * // => [1, 2, 3]
  	     *
  	     * // Curried with placeholders.
  	     * curried(1)(_, 3)(2);
  	     * // => [1, 2, 3]
  	     */function curry(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curry.placeholder;return result;}/**
  	     * This method is like `_.curry` except that arguments are applied to `func`
  	     * in the manner of `_.partialRight` instead of `_.partial`.
  	     *
  	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
  	     * builds, may be used as a placeholder for provided arguments.
  	     *
  	     * **Note:** This method doesn't set the "length" property of curried functions.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Function
  	     * @param {Function} func The function to curry.
  	     * @param {number} [arity=func.length] The arity of `func`.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Function} Returns the new curried function.
  	     * @example
  	     *
  	     * var abc = function(a, b, c) {
  	     *   return [a, b, c];
  	     * };
  	     *
  	     * var curried = _.curryRight(abc);
  	     *
  	     * curried(3)(2)(1);
  	     * // => [1, 2, 3]
  	     *
  	     * curried(2, 3)(1);
  	     * // => [1, 2, 3]
  	     *
  	     * curried(1, 2, 3);
  	     * // => [1, 2, 3]
  	     *
  	     * // Curried with placeholders.
  	     * curried(3)(1, _)(2);
  	     * // => [1, 2, 3]
  	     */function curryRight(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_RIGHT_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curryRight.placeholder;return result;}/**
  	     * Creates a debounced function that delays invoking `func` until after `wait`
  	     * milliseconds have elapsed since the last time the debounced function was
  	     * invoked. The debounced function comes with a `cancel` method to cancel
  	     * delayed `func` invocations and a `flush` method to immediately invoke them.
  	     * Provide `options` to indicate whether `func` should be invoked on the
  	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
  	     * with the last arguments provided to the debounced function. Subsequent
  	     * calls to the debounced function return the result of the last `func`
  	     * invocation.
  	     *
  	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
  	     * invoked on the trailing edge of the timeout only if the debounced function
  	     * is invoked more than once during the `wait` timeout.
  	     *
  	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
  	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
  	     *
  	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
  	     * for details over the differences between `_.debounce` and `_.throttle`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to debounce.
  	     * @param {number} [wait=0] The number of milliseconds to delay.
  	     * @param {Object} [options={}] The options object.
  	     * @param {boolean} [options.leading=false]
  	     *  Specify invoking on the leading edge of the timeout.
  	     * @param {number} [options.maxWait]
  	     *  The maximum time `func` is allowed to be delayed before it's invoked.
  	     * @param {boolean} [options.trailing=true]
  	     *  Specify invoking on the trailing edge of the timeout.
  	     * @returns {Function} Returns the new debounced function.
  	     * @example
  	     *
  	     * // Avoid costly calculations while the window size is in flux.
  	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
  	     *
  	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
  	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
  	     *   'leading': true,
  	     *   'trailing': false
  	     * }));
  	     *
  	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
  	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
  	     * var source = new EventSource('/stream');
  	     * jQuery(source).on('message', debounced);
  	     *
  	     * // Cancel the trailing debounced invocation.
  	     * jQuery(window).on('popstate', debounced.cancel);
  	     */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined$1;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){// Reset any `maxWait` timer.
  lastInvokeTime=time;// Start the timer for the trailing edge.
  timerId=setTimeout(timerExpired,wait);// Invoke the leading edge.
  return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;// Either this is the first call, activity has stopped and we're at the
  // trailing edge, the system time has gone backwards and we're treating
  // it as the trailing edge, or we've hit the `maxWait` limit.
  return lastCallTime===undefined$1||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}// Restart the timer.
  timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined$1;// Only invoke if we have `lastArgs` which means `func` has been
  // debounced at least once.
  if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined$1;return result;}function cancel(){if(timerId!==undefined$1){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined$1;}function flush(){return timerId===undefined$1?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined$1){return leadingEdge(lastCallTime);}if(maxing){// Handle invocations in a tight loop.
  clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined$1){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}/**
  	     * Defers invoking the `func` until the current call stack has cleared. Any
  	     * additional arguments are provided to `func` when it's invoked.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to defer.
  	     * @param {...*} [args] The arguments to invoke `func` with.
  	     * @returns {number} Returns the timer id.
  	     * @example
  	     *
  	     * _.defer(function(text) {
  	     *   console.log(text);
  	     * }, 'deferred');
  	     * // => Logs 'deferred' after one millisecond.
  	     */var defer=baseRest(function(func,args){return baseDelay(func,1,args);});/**
  	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
  	     * provided to `func` when it's invoked.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to delay.
  	     * @param {number} wait The number of milliseconds to delay invocation.
  	     * @param {...*} [args] The arguments to invoke `func` with.
  	     * @returns {number} Returns the timer id.
  	     * @example
  	     *
  	     * _.delay(function(text) {
  	     *   console.log(text);
  	     * }, 1000, 'later');
  	     * // => Logs 'later' after one second.
  	     */var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});/**
  	     * Creates a function that invokes `func` with arguments reversed.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Function
  	     * @param {Function} func The function to flip arguments for.
  	     * @returns {Function} Returns the new flipped function.
  	     * @example
  	     *
  	     * var flipped = _.flip(function() {
  	     *   return _.toArray(arguments);
  	     * });
  	     *
  	     * flipped('a', 'b', 'c', 'd');
  	     * // => ['d', 'c', 'b', 'a']
  	     */function flip(func){return createWrap(func,WRAP_FLIP_FLAG);}/**
  	     * Creates a function that memoizes the result of `func`. If `resolver` is
  	     * provided, it determines the cache key for storing the result based on the
  	     * arguments provided to the memoized function. By default, the first argument
  	     * provided to the memoized function is used as the map cache key. The `func`
  	     * is invoked with the `this` binding of the memoized function.
  	     *
  	     * **Note:** The cache is exposed as the `cache` property on the memoized
  	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
  	     * constructor with one whose instances implement the
  	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
  	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to have its output memoized.
  	     * @param {Function} [resolver] The function to resolve the cache key.
  	     * @returns {Function} Returns the new memoized function.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': 2 };
  	     * var other = { 'c': 3, 'd': 4 };
  	     *
  	     * var values = _.memoize(_.values);
  	     * values(object);
  	     * // => [1, 2]
  	     *
  	     * values(other);
  	     * // => [3, 4]
  	     *
  	     * object.a = 2;
  	     * values(object);
  	     * // => [1, 2]
  	     *
  	     * // Modify the result cache.
  	     * values.cache.set(object, ['a', 'b']);
  	     * values(object);
  	     * // => ['a', 'b']
  	     *
  	     * // Replace `_.memoize.Cache`.
  	     * _.memoize.Cache = WeakMap;
  	     */function memoize(func,resolver){if(typeof func!='function'||resolver!=null&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Expose `MapCache`.
  memoize.Cache=MapCache;/**
  	     * Creates a function that negates the result of the predicate `func`. The
  	     * `func` predicate is invoked with the `this` binding and arguments of the
  	     * created function.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Function
  	     * @param {Function} predicate The predicate to negate.
  	     * @returns {Function} Returns the new negated function.
  	     * @example
  	     *
  	     * function isEven(n) {
  	     *   return n % 2 == 0;
  	     * }
  	     *
  	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
  	     * // => [1, 3, 5]
  	     */function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return !predicate.call(this);case 1:return !predicate.call(this,args[0]);case 2:return !predicate.call(this,args[0],args[1]);case 3:return !predicate.call(this,args[0],args[1],args[2]);}return !predicate.apply(this,args);};}/**
  	     * Creates a function that is restricted to invoking `func` once. Repeat calls
  	     * to the function return the value of the first invocation. The `func` is
  	     * invoked with the `this` binding and arguments of the created function.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to restrict.
  	     * @returns {Function} Returns the new restricted function.
  	     * @example
  	     *
  	     * var initialize = _.once(createApplication);
  	     * initialize();
  	     * initialize();
  	     * // => `createApplication` is invoked once
  	     */function once(func){return before(2,func);}/**
  	     * Creates a function that invokes `func` with its arguments transformed.
  	     *
  	     * @static
  	     * @since 4.0.0
  	     * @memberOf _
  	     * @category Function
  	     * @param {Function} func The function to wrap.
  	     * @param {...(Function|Function[])} [transforms=[_.identity]]
  	     *  The argument transforms.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * function doubled(n) {
  	     *   return n * 2;
  	     * }
  	     *
  	     * function square(n) {
  	     *   return n * n;
  	     * }
  	     *
  	     * var func = _.overArgs(function(x, y) {
  	     *   return [x, y];
  	     * }, [square, doubled]);
  	     *
  	     * func(9, 3);
  	     * // => [81, 6]
  	     *
  	     * func(10, 5);
  	     * // => [100, 10]
  	     */var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});/**
  	     * Creates a function that invokes `func` with `partials` prepended to the
  	     * arguments it receives. This method is like `_.bind` except it does **not**
  	     * alter the `this` binding.
  	     *
  	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
  	     * builds, may be used as a placeholder for partially applied arguments.
  	     *
  	     * **Note:** This method doesn't set the "length" property of partially
  	     * applied functions.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.2.0
  	     * @category Function
  	     * @param {Function} func The function to partially apply arguments to.
  	     * @param {...*} [partials] The arguments to be partially applied.
  	     * @returns {Function} Returns the new partially applied function.
  	     * @example
  	     *
  	     * function greet(greeting, name) {
  	     *   return greeting + ' ' + name;
  	     * }
  	     *
  	     * var sayHelloTo = _.partial(greet, 'hello');
  	     * sayHelloTo('fred');
  	     * // => 'hello fred'
  	     *
  	     * // Partially applied with placeholders.
  	     * var greetFred = _.partial(greet, _, 'fred');
  	     * greetFred('hi');
  	     * // => 'hi fred'
  	     */var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,WRAP_PARTIAL_FLAG,undefined$1,partials,holders);});/**
  	     * This method is like `_.partial` except that partially applied arguments
  	     * are appended to the arguments it receives.
  	     *
  	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
  	     * builds, may be used as a placeholder for partially applied arguments.
  	     *
  	     * **Note:** This method doesn't set the "length" property of partially
  	     * applied functions.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.0.0
  	     * @category Function
  	     * @param {Function} func The function to partially apply arguments to.
  	     * @param {...*} [partials] The arguments to be partially applied.
  	     * @returns {Function} Returns the new partially applied function.
  	     * @example
  	     *
  	     * function greet(greeting, name) {
  	     *   return greeting + ' ' + name;
  	     * }
  	     *
  	     * var greetFred = _.partialRight(greet, 'fred');
  	     * greetFred('hi');
  	     * // => 'hi fred'
  	     *
  	     * // Partially applied with placeholders.
  	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
  	     * sayHelloTo('fred');
  	     * // => 'hello fred'
  	     */var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,WRAP_PARTIAL_RIGHT_FLAG,undefined$1,partials,holders);});/**
  	     * Creates a function that invokes `func` with arguments arranged according
  	     * to the specified `indexes` where the argument value at the first index is
  	     * provided as the first argument, the argument value at the second index is
  	     * provided as the second argument, and so on.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Function
  	     * @param {Function} func The function to rearrange arguments for.
  	     * @param {...(number|number[])} indexes The arranged argument indexes.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var rearged = _.rearg(function(a, b, c) {
  	     *   return [a, b, c];
  	     * }, [2, 0, 1]);
  	     *
  	     * rearged('b', 'c', 'a')
  	     * // => ['a', 'b', 'c']
  	     */var rearg=flatRest(function(func,indexes){return createWrap(func,WRAP_REARG_FLAG,undefined$1,undefined$1,undefined$1,indexes);});/**
  	     * Creates a function that invokes `func` with the `this` binding of the
  	     * created function and arguments from `start` and beyond provided as
  	     * an array.
  	     *
  	     * **Note:** This method is based on the
  	     * [rest parameter](https://mdn.io/rest_parameters).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Function
  	     * @param {Function} func The function to apply a rest parameter to.
  	     * @param {number} [start=func.length-1] The start position of the rest parameter.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var say = _.rest(function(what, names) {
  	     *   return what + ' ' + _.initial(names).join(', ') +
  	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
  	     * });
  	     *
  	     * say('hello', 'fred', 'barney', 'pebbles');
  	     * // => 'hello fred, barney, & pebbles'
  	     */function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined$1?start:toInteger(start);return baseRest(func,start);}/**
  	     * Creates a function that invokes `func` with the `this` binding of the
  	     * create function and an array of arguments much like
  	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
  	     *
  	     * **Note:** This method is based on the
  	     * [spread operator](https://mdn.io/spread_operator).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.2.0
  	     * @category Function
  	     * @param {Function} func The function to spread arguments over.
  	     * @param {number} [start=0] The start position of the spread.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var say = _.spread(function(who, what) {
  	     *   return who + ' says ' + what;
  	     * });
  	     *
  	     * say(['fred', 'hello']);
  	     * // => 'fred says hello'
  	     *
  	     * var numbers = Promise.all([
  	     *   Promise.resolve(40),
  	     *   Promise.resolve(36)
  	     * ]);
  	     *
  	     * numbers.then(_.spread(function(x, y) {
  	     *   return x + y;
  	     * }));
  	     * // => a Promise of 76
  	     */function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start==null?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}/**
  	     * Creates a throttled function that only invokes `func` at most once per
  	     * every `wait` milliseconds. The throttled function comes with a `cancel`
  	     * method to cancel delayed `func` invocations and a `flush` method to
  	     * immediately invoke them. Provide `options` to indicate whether `func`
  	     * should be invoked on the leading and/or trailing edge of the `wait`
  	     * timeout. The `func` is invoked with the last arguments provided to the
  	     * throttled function. Subsequent calls to the throttled function return the
  	     * result of the last `func` invocation.
  	     *
  	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
  	     * invoked on the trailing edge of the timeout only if the throttled function
  	     * is invoked more than once during the `wait` timeout.
  	     *
  	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
  	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
  	     *
  	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
  	     * for details over the differences between `_.throttle` and `_.debounce`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {Function} func The function to throttle.
  	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
  	     * @param {Object} [options={}] The options object.
  	     * @param {boolean} [options.leading=true]
  	     *  Specify invoking on the leading edge of the timeout.
  	     * @param {boolean} [options.trailing=true]
  	     *  Specify invoking on the trailing edge of the timeout.
  	     * @returns {Function} Returns the new throttled function.
  	     * @example
  	     *
  	     * // Avoid excessively updating the position while scrolling.
  	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
  	     *
  	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
  	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
  	     * jQuery(element).on('click', throttled);
  	     *
  	     * // Cancel the trailing throttled invocation.
  	     * jQuery(window).on('popstate', throttled.cancel);
  	     */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});}/**
  	     * Creates a function that accepts up to one argument, ignoring any
  	     * additional arguments.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Function
  	     * @param {Function} func The function to cap arguments for.
  	     * @returns {Function} Returns the new capped function.
  	     * @example
  	     *
  	     * _.map(['6', '8', '10'], _.unary(parseInt));
  	     * // => [6, 8, 10]
  	     */function unary(func){return ary(func,1);}/**
  	     * Creates a function that provides `value` to `wrapper` as its first
  	     * argument. Any additional arguments provided to the function are appended
  	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
  	     * binding of the created function.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Function
  	     * @param {*} value The value to wrap.
  	     * @param {Function} [wrapper=identity] The wrapper function.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var p = _.wrap(_.escape, function(func, text) {
  	     *   return '<p>' + func(text) + '</p>';
  	     * });
  	     *
  	     * p('fred, barney, & pebbles');
  	     * // => '<p>fred, barney, &amp; pebbles</p>'
  	     */function wrap(value,wrapper){return partial(castFunction(wrapper),value);}/*------------------------------------------------------------------------*/ /**
  	     * Casts `value` as an array if it's not one.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.4.0
  	     * @category Lang
  	     * @param {*} value The value to inspect.
  	     * @returns {Array} Returns the cast array.
  	     * @example
  	     *
  	     * _.castArray(1);
  	     * // => [1]
  	     *
  	     * _.castArray({ 'a': 1 });
  	     * // => [{ 'a': 1 }]
  	     *
  	     * _.castArray('abc');
  	     * // => ['abc']
  	     *
  	     * _.castArray(null);
  	     * // => [null]
  	     *
  	     * _.castArray(undefined);
  	     * // => [undefined]
  	     *
  	     * _.castArray();
  	     * // => []
  	     *
  	     * var array = [1, 2, 3];
  	     * console.log(_.castArray(array) === array);
  	     * // => true
  	     */function castArray(){if(!arguments.length){return [];}var value=arguments[0];return isArray(value)?value:[value];}/**
  	     * Creates a shallow clone of `value`.
  	     *
  	     * **Note:** This method is loosely based on the
  	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
  	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
  	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
  	     * arrays. The own enumerable properties of `arguments` objects are cloned
  	     * as plain objects. An empty object is returned for uncloneable values such
  	     * as error objects, functions, DOM nodes, and WeakMaps.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to clone.
  	     * @returns {*} Returns the cloned value.
  	     * @see _.cloneDeep
  	     * @example
  	     *
  	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
  	     *
  	     * var shallow = _.clone(objects);
  	     * console.log(shallow[0] === objects[0]);
  	     * // => true
  	     */function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG);}/**
  	     * This method is like `_.clone` except that it accepts `customizer` which
  	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
  	     * cloning is handled by the method instead. The `customizer` is invoked with
  	     * up to four arguments; (value [, index|key, object, stack]).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to clone.
  	     * @param {Function} [customizer] The function to customize cloning.
  	     * @returns {*} Returns the cloned value.
  	     * @see _.cloneDeepWith
  	     * @example
  	     *
  	     * function customizer(value) {
  	     *   if (_.isElement(value)) {
  	     *     return value.cloneNode(false);
  	     *   }
  	     * }
  	     *
  	     * var el = _.cloneWith(document.body, customizer);
  	     *
  	     * console.log(el === document.body);
  	     * // => false
  	     * console.log(el.nodeName);
  	     * // => 'BODY'
  	     * console.log(el.childNodes.length);
  	     * // => 0
  	     */function cloneWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseClone(value,CLONE_SYMBOLS_FLAG,customizer);}/**
  	     * This method is like `_.clone` except that it recursively clones `value`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.0.0
  	     * @category Lang
  	     * @param {*} value The value to recursively clone.
  	     * @returns {*} Returns the deep cloned value.
  	     * @see _.clone
  	     * @example
  	     *
  	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
  	     *
  	     * var deep = _.cloneDeep(objects);
  	     * console.log(deep[0] === objects[0]);
  	     * // => false
  	     */function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}/**
  	     * This method is like `_.cloneWith` except that it recursively clones `value`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to recursively clone.
  	     * @param {Function} [customizer] The function to customize cloning.
  	     * @returns {*} Returns the deep cloned value.
  	     * @see _.cloneWith
  	     * @example
  	     *
  	     * function customizer(value) {
  	     *   if (_.isElement(value)) {
  	     *     return value.cloneNode(true);
  	     *   }
  	     * }
  	     *
  	     * var el = _.cloneDeepWith(document.body, customizer);
  	     *
  	     * console.log(el === document.body);
  	     * // => false
  	     * console.log(el.nodeName);
  	     * // => 'BODY'
  	     * console.log(el.childNodes.length);
  	     * // => 20
  	     */function cloneDeepWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG,customizer);}/**
  	     * Checks if `object` conforms to `source` by invoking the predicate
  	     * properties of `source` with the corresponding property values of `object`.
  	     *
  	     * **Note:** This method is equivalent to `_.conforms` when `source` is
  	     * partially applied.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.14.0
  	     * @category Lang
  	     * @param {Object} object The object to inspect.
  	     * @param {Object} source The object of property predicates to conform to.
  	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': 2 };
  	     *
  	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
  	     * // => true
  	     *
  	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
  	     * // => false
  	     */function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}/**
  	     * Performs a
  	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
  	     * comparison between two values to determine if they are equivalent.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
  	     * @example
  	     *
  	     * var object = { 'a': 1 };
  	     * var other = { 'a': 1 };
  	     *
  	     * _.eq(object, object);
  	     * // => true
  	     *
  	     * _.eq(object, other);
  	     * // => false
  	     *
  	     * _.eq('a', 'a');
  	     * // => true
  	     *
  	     * _.eq('a', Object('a'));
  	     * // => false
  	     *
  	     * _.eq(NaN, NaN);
  	     * // => true
  	     */function eq(value,other){return value===other||value!==value&&other!==other;}/**
  	     * Checks if `value` is greater than `other`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.9.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
  	     *  else `false`.
  	     * @see _.lt
  	     * @example
  	     *
  	     * _.gt(3, 1);
  	     * // => true
  	     *
  	     * _.gt(3, 3);
  	     * // => false
  	     *
  	     * _.gt(1, 3);
  	     * // => false
  	     */var gt=createRelationalOperation(baseGt);/**
  	     * Checks if `value` is greater than or equal to `other`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.9.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
  	     *  `other`, else `false`.
  	     * @see _.lte
  	     * @example
  	     *
  	     * _.gte(3, 1);
  	     * // => true
  	     *
  	     * _.gte(3, 3);
  	     * // => true
  	     *
  	     * _.gte(1, 3);
  	     * // => false
  	     */var gte=createRelationalOperation(function(value,other){return value>=other;});/**
  	     * Checks if `value` is likely an `arguments` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.isArguments(function() { return arguments; }());
  	     * // => true
  	     *
  	     * _.isArguments([1, 2, 3]);
  	     * // => false
  	     */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};/**
  	     * Checks if `value` is classified as an `Array` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
  	     * @example
  	     *
  	     * _.isArray([1, 2, 3]);
  	     * // => true
  	     *
  	     * _.isArray(document.body.children);
  	     * // => false
  	     *
  	     * _.isArray('abc');
  	     * // => false
  	     *
  	     * _.isArray(_.noop);
  	     * // => false
  	     */var isArray=Array.isArray;/**
  	     * Checks if `value` is classified as an `ArrayBuffer` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.3.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
  	     * @example
  	     *
  	     * _.isArrayBuffer(new ArrayBuffer(2));
  	     * // => true
  	     *
  	     * _.isArrayBuffer(new Array(2));
  	     * // => false
  	     */var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;/**
  	     * Checks if `value` is array-like. A value is considered array-like if it's
  	     * not a function and has a `value.length` that's an integer greater than or
  	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
  	     * @example
  	     *
  	     * _.isArrayLike([1, 2, 3]);
  	     * // => true
  	     *
  	     * _.isArrayLike(document.body.children);
  	     * // => true
  	     *
  	     * _.isArrayLike('abc');
  	     * // => true
  	     *
  	     * _.isArrayLike(_.noop);
  	     * // => false
  	     */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}/**
  	     * This method is like `_.isArrayLike` except that it also checks if `value`
  	     * is an object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an array-like object,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.isArrayLikeObject([1, 2, 3]);
  	     * // => true
  	     *
  	     * _.isArrayLikeObject(document.body.children);
  	     * // => true
  	     *
  	     * _.isArrayLikeObject('abc');
  	     * // => false
  	     *
  	     * _.isArrayLikeObject(_.noop);
  	     * // => false
  	     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}/**
  	     * Checks if `value` is classified as a boolean primitive or object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
  	     * @example
  	     *
  	     * _.isBoolean(false);
  	     * // => true
  	     *
  	     * _.isBoolean(null);
  	     * // => false
  	     */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&baseGetTag(value)==boolTag;}/**
  	     * Checks if `value` is a buffer.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.3.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
  	     * @example
  	     *
  	     * _.isBuffer(new Buffer(2));
  	     * // => true
  	     *
  	     * _.isBuffer(new Uint8Array(2));
  	     * // => false
  	     */var isBuffer=nativeIsBuffer||stubFalse;/**
  	     * Checks if `value` is classified as a `Date` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
  	     * @example
  	     *
  	     * _.isDate(new Date);
  	     * // => true
  	     *
  	     * _.isDate('Mon April 23 2012');
  	     * // => false
  	     */var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;/**
  	     * Checks if `value` is likely a DOM element.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
  	     * @example
  	     *
  	     * _.isElement(document.body);
  	     * // => true
  	     *
  	     * _.isElement('<body>');
  	     * // => false
  	     */function isElement(value){return isObjectLike(value)&&value.nodeType===1&&!isPlainObject(value);}/**
  	     * Checks if `value` is an empty object, collection, map, or set.
  	     *
  	     * Objects are considered empty if they have no own enumerable string keyed
  	     * properties.
  	     *
  	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
  	     * jQuery-like collections are considered empty if they have a `length` of `0`.
  	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
  	     * @example
  	     *
  	     * _.isEmpty(null);
  	     * // => true
  	     *
  	     * _.isEmpty(true);
  	     * // => true
  	     *
  	     * _.isEmpty(1);
  	     * // => true
  	     *
  	     * _.isEmpty([1, 2, 3]);
  	     * // => false
  	     *
  	     * _.isEmpty({ 'a': 1 });
  	     * // => false
  	     */function isEmpty(value){if(value==null){return true;}if(isArrayLike(value)&&(isArray(value)||typeof value=='string'||typeof value.splice=='function'||isBuffer(value)||isTypedArray(value)||isArguments(value))){return !value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return !value.size;}if(isPrototype(value)){return !baseKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}/**
  	     * Performs a deep comparison between two values to determine if they are
  	     * equivalent.
  	     *
  	     * **Note:** This method supports comparing arrays, array buffers, booleans,
  	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
  	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
  	     * by their own, not inherited, enumerable properties. Functions and DOM
  	     * nodes are compared by strict equality, i.e. `===`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
  	     * @example
  	     *
  	     * var object = { 'a': 1 };
  	     * var other = { 'a': 1 };
  	     *
  	     * _.isEqual(object, other);
  	     * // => true
  	     *
  	     * object === other;
  	     * // => false
  	     */function isEqual(value,other){return baseIsEqual(value,other);}/**
  	     * This method is like `_.isEqual` except that it accepts `customizer` which
  	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
  	     * are handled by the method instead. The `customizer` is invoked with up to
  	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @param {Function} [customizer] The function to customize comparisons.
  	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
  	     * @example
  	     *
  	     * function isGreeting(value) {
  	     *   return /^h(?:i|ello)$/.test(value);
  	     * }
  	     *
  	     * function customizer(objValue, othValue) {
  	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
  	     *     return true;
  	     *   }
  	     * }
  	     *
  	     * var array = ['hello', 'goodbye'];
  	     * var other = ['hi', 'goodbye'];
  	     *
  	     * _.isEqualWith(array, other, customizer);
  	     * // => true
  	     */function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;var result=customizer?customizer(value,other):undefined$1;return result===undefined$1?baseIsEqual(value,other,undefined$1,customizer):!!result;}/**
  	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
  	     * `SyntaxError`, `TypeError`, or `URIError` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
  	     * @example
  	     *
  	     * _.isError(new Error);
  	     * // => true
  	     *
  	     * _.isError(Error);
  	     * // => false
  	     */function isError(value){if(!isObjectLike(value)){return false;}var tag=baseGetTag(value);return tag==errorTag||tag==domExcTag||typeof value.message=='string'&&typeof value.name=='string'&&!isPlainObject(value);}/**
  	     * Checks if `value` is a finite primitive number.
  	     *
  	     * **Note:** This method is based on
  	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
  	     * @example
  	     *
  	     * _.isFinite(3);
  	     * // => true
  	     *
  	     * _.isFinite(Number.MIN_VALUE);
  	     * // => true
  	     *
  	     * _.isFinite(Infinity);
  	     * // => false
  	     *
  	     * _.isFinite('3');
  	     * // => false
  	     */function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);}/**
  	     * Checks if `value` is classified as a `Function` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
  	     * @example
  	     *
  	     * _.isFunction(_);
  	     * // => true
  	     *
  	     * _.isFunction(/abc/);
  	     * // => false
  	     */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}/**
  	     * Checks if `value` is an integer.
  	     *
  	     * **Note:** This method is based on
  	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
  	     * @example
  	     *
  	     * _.isInteger(3);
  	     * // => true
  	     *
  	     * _.isInteger(Number.MIN_VALUE);
  	     * // => false
  	     *
  	     * _.isInteger(Infinity);
  	     * // => false
  	     *
  	     * _.isInteger('3');
  	     * // => false
  	     */function isInteger(value){return typeof value=='number'&&value==toInteger(value);}/**
  	     * Checks if `value` is a valid array-like length.
  	     *
  	     * **Note:** This method is loosely based on
  	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
  	     * @example
  	     *
  	     * _.isLength(3);
  	     * // => true
  	     *
  	     * _.isLength(Number.MIN_VALUE);
  	     * // => false
  	     *
  	     * _.isLength(Infinity);
  	     * // => false
  	     *
  	     * _.isLength('3');
  	     * // => false
  	     */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**
  	     * Checks if `value` is the
  	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
  	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
  	     * @example
  	     *
  	     * _.isObject({});
  	     * // => true
  	     *
  	     * _.isObject([1, 2, 3]);
  	     * // => true
  	     *
  	     * _.isObject(_.noop);
  	     * // => true
  	     *
  	     * _.isObject(null);
  	     * // => false
  	     */function isObject(value){var type=_typeof(value);return value!=null&&(type=='object'||type=='function');}/**
  	     * Checks if `value` is object-like. A value is object-like if it's not `null`
  	     * and has a `typeof` result of "object".
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
  	     * @example
  	     *
  	     * _.isObjectLike({});
  	     * // => true
  	     *
  	     * _.isObjectLike([1, 2, 3]);
  	     * // => true
  	     *
  	     * _.isObjectLike(_.noop);
  	     * // => false
  	     *
  	     * _.isObjectLike(null);
  	     * // => false
  	     */function isObjectLike(value){return value!=null&&_typeof(value)=='object';}/**
  	     * Checks if `value` is classified as a `Map` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.3.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
  	     * @example
  	     *
  	     * _.isMap(new Map);
  	     * // => true
  	     *
  	     * _.isMap(new WeakMap);
  	     * // => false
  	     */var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;/**
  	     * Performs a partial deep comparison between `object` and `source` to
  	     * determine if `object` contains equivalent property values.
  	     *
  	     * **Note:** This method is equivalent to `_.matches` when `source` is
  	     * partially applied.
  	     *
  	     * Partial comparisons will match empty array and empty object `source`
  	     * values against any array or object value, respectively. See `_.isEqual`
  	     * for a list of supported value comparisons.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Lang
  	     * @param {Object} object The object to inspect.
  	     * @param {Object} source The object of property values to match.
  	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': 2 };
  	     *
  	     * _.isMatch(object, { 'b': 2 });
  	     * // => true
  	     *
  	     * _.isMatch(object, { 'b': 1 });
  	     * // => false
  	     */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}/**
  	     * This method is like `_.isMatch` except that it accepts `customizer` which
  	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
  	     * are handled by the method instead. The `customizer` is invoked with five
  	     * arguments: (objValue, srcValue, index|key, object, source).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {Object} object The object to inspect.
  	     * @param {Object} source The object of property values to match.
  	     * @param {Function} [customizer] The function to customize comparisons.
  	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
  	     * @example
  	     *
  	     * function isGreeting(value) {
  	     *   return /^h(?:i|ello)$/.test(value);
  	     * }
  	     *
  	     * function customizer(objValue, srcValue) {
  	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
  	     *     return true;
  	     *   }
  	     * }
  	     *
  	     * var object = { 'greeting': 'hello' };
  	     * var source = { 'greeting': 'hi' };
  	     *
  	     * _.isMatchWith(object, source, customizer);
  	     * // => true
  	     */function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseIsMatch(object,source,getMatchData(source),customizer);}/**
  	     * Checks if `value` is `NaN`.
  	     *
  	     * **Note:** This method is based on
  	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
  	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
  	     * `undefined` and other non-number values.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
  	     * @example
  	     *
  	     * _.isNaN(NaN);
  	     * // => true
  	     *
  	     * _.isNaN(new Number(NaN));
  	     * // => true
  	     *
  	     * isNaN(undefined);
  	     * // => true
  	     *
  	     * _.isNaN(undefined);
  	     * // => false
  	     */function isNaN(value){// An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some
  // ActiveX objects in IE.
  return isNumber(value)&&value!=+value;}/**
  	     * Checks if `value` is a pristine native function.
  	     *
  	     * **Note:** This method can't reliably detect native functions in the presence
  	     * of the core-js package because core-js circumvents this kind of detection.
  	     * Despite multiple requests, the core-js maintainer has made it clear: any
  	     * attempt to fix the detection will be obstructed. As a result, we're left
  	     * with little choice but to throw an error. Unfortunately, this also affects
  	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
  	     * which rely on core-js.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a native function,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.isNative(Array.prototype.push);
  	     * // => true
  	     *
  	     * _.isNative(_);
  	     * // => false
  	     */function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}/**
  	     * Checks if `value` is `null`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
  	     * @example
  	     *
  	     * _.isNull(null);
  	     * // => true
  	     *
  	     * _.isNull(void 0);
  	     * // => false
  	     */function isNull(value){return value===null;}/**
  	     * Checks if `value` is `null` or `undefined`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
  	     * @example
  	     *
  	     * _.isNil(null);
  	     * // => true
  	     *
  	     * _.isNil(void 0);
  	     * // => true
  	     *
  	     * _.isNil(NaN);
  	     * // => false
  	     */function isNil(value){return value==null;}/**
  	     * Checks if `value` is classified as a `Number` primitive or object.
  	     *
  	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
  	     * classified as numbers, use the `_.isFinite` method.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
  	     * @example
  	     *
  	     * _.isNumber(3);
  	     * // => true
  	     *
  	     * _.isNumber(Number.MIN_VALUE);
  	     * // => true
  	     *
  	     * _.isNumber(Infinity);
  	     * // => true
  	     *
  	     * _.isNumber('3');
  	     * // => false
  	     */function isNumber(value){return typeof value=='number'||isObjectLike(value)&&baseGetTag(value)==numberTag;}/**
  	     * Checks if `value` is a plain object, that is, an object created by the
  	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.8.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     * }
  	     *
  	     * _.isPlainObject(new Foo);
  	     * // => false
  	     *
  	     * _.isPlainObject([1, 2, 3]);
  	     * // => false
  	     *
  	     * _.isPlainObject({ 'x': 0, 'y': 0 });
  	     * // => true
  	     *
  	     * _.isPlainObject(Object.create(null));
  	     * // => true
  	     */function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}/**
  	     * Checks if `value` is classified as a `RegExp` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.1.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
  	     * @example
  	     *
  	     * _.isRegExp(/abc/);
  	     * // => true
  	     *
  	     * _.isRegExp('/abc/');
  	     * // => false
  	     */var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;/**
  	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
  	     * double precision number which isn't the result of a rounded unsafe integer.
  	     *
  	     * **Note:** This method is based on
  	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
  	     * @example
  	     *
  	     * _.isSafeInteger(3);
  	     * // => true
  	     *
  	     * _.isSafeInteger(Number.MIN_VALUE);
  	     * // => false
  	     *
  	     * _.isSafeInteger(Infinity);
  	     * // => false
  	     *
  	     * _.isSafeInteger('3');
  	     * // => false
  	     */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}/**
  	     * Checks if `value` is classified as a `Set` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.3.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
  	     * @example
  	     *
  	     * _.isSet(new Set);
  	     * // => true
  	     *
  	     * _.isSet(new WeakSet);
  	     * // => false
  	     */var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;/**
  	     * Checks if `value` is classified as a `String` primitive or object.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
  	     * @example
  	     *
  	     * _.isString('abc');
  	     * // => true
  	     *
  	     * _.isString(1);
  	     * // => false
  	     */function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag;}/**
  	     * Checks if `value` is classified as a `Symbol` primitive or object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
  	     * @example
  	     *
  	     * _.isSymbol(Symbol.iterator);
  	     * // => true
  	     *
  	     * _.isSymbol('abc');
  	     * // => false
  	     */function isSymbol(value){return _typeof(value)=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}/**
  	     * Checks if `value` is classified as a typed array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
  	     * @example
  	     *
  	     * _.isTypedArray(new Uint8Array);
  	     * // => true
  	     *
  	     * _.isTypedArray([]);
  	     * // => false
  	     */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/**
  	     * Checks if `value` is `undefined`.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
  	     * @example
  	     *
  	     * _.isUndefined(void 0);
  	     * // => true
  	     *
  	     * _.isUndefined(null);
  	     * // => false
  	     */function isUndefined(value){return value===undefined$1;}/**
  	     * Checks if `value` is classified as a `WeakMap` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.3.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
  	     * @example
  	     *
  	     * _.isWeakMap(new WeakMap);
  	     * // => true
  	     *
  	     * _.isWeakMap(new Map);
  	     * // => false
  	     */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}/**
  	     * Checks if `value` is classified as a `WeakSet` object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.3.0
  	     * @category Lang
  	     * @param {*} value The value to check.
  	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
  	     * @example
  	     *
  	     * _.isWeakSet(new WeakSet);
  	     * // => true
  	     *
  	     * _.isWeakSet(new Set);
  	     * // => false
  	     */function isWeakSet(value){return isObjectLike(value)&&baseGetTag(value)==weakSetTag;}/**
  	     * Checks if `value` is less than `other`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.9.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if `value` is less than `other`,
  	     *  else `false`.
  	     * @see _.gt
  	     * @example
  	     *
  	     * _.lt(1, 3);
  	     * // => true
  	     *
  	     * _.lt(3, 3);
  	     * // => false
  	     *
  	     * _.lt(3, 1);
  	     * // => false
  	     */var lt=createRelationalOperation(baseLt);/**
  	     * Checks if `value` is less than or equal to `other`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.9.0
  	     * @category Lang
  	     * @param {*} value The value to compare.
  	     * @param {*} other The other value to compare.
  	     * @returns {boolean} Returns `true` if `value` is less than or equal to
  	     *  `other`, else `false`.
  	     * @see _.gte
  	     * @example
  	     *
  	     * _.lte(1, 3);
  	     * // => true
  	     *
  	     * _.lte(3, 3);
  	     * // => true
  	     *
  	     * _.lte(3, 1);
  	     * // => false
  	     */var lte=createRelationalOperation(function(value,other){return value<=other;});/**
  	     * Converts `value` to an array.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {Array} Returns the converted array.
  	     * @example
  	     *
  	     * _.toArray({ 'a': 1, 'b': 2 });
  	     * // => [1, 2]
  	     *
  	     * _.toArray('abc');
  	     * // => ['a', 'b', 'c']
  	     *
  	     * _.toArray(1);
  	     * // => []
  	     *
  	     * _.toArray(null);
  	     * // => []
  	     */function toArray(value){if(!value){return [];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(symIterator&&value[symIterator]){return iteratorToArray(value[symIterator]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}/**
  	     * Converts `value` to a finite number.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.12.0
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {number} Returns the converted number.
  	     * @example
  	     *
  	     * _.toFinite(3.2);
  	     * // => 3.2
  	     *
  	     * _.toFinite(Number.MIN_VALUE);
  	     * // => 5e-324
  	     *
  	     * _.toFinite(Infinity);
  	     * // => 1.7976931348623157e+308
  	     *
  	     * _.toFinite('3.2');
  	     * // => 3.2
  	     */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}/**
  	     * Converts `value` to an integer.
  	     *
  	     * **Note:** This method is loosely based on
  	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {number} Returns the converted integer.
  	     * @example
  	     *
  	     * _.toInteger(3.2);
  	     * // => 3
  	     *
  	     * _.toInteger(Number.MIN_VALUE);
  	     * // => 0
  	     *
  	     * _.toInteger(Infinity);
  	     * // => 1.7976931348623157e+308
  	     *
  	     * _.toInteger('3.2');
  	     * // => 3
  	     */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}/**
  	     * Converts `value` to an integer suitable for use as the length of an
  	     * array-like object.
  	     *
  	     * **Note:** This method is based on
  	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {number} Returns the converted integer.
  	     * @example
  	     *
  	     * _.toLength(3.2);
  	     * // => 3
  	     *
  	     * _.toLength(Number.MIN_VALUE);
  	     * // => 0
  	     *
  	     * _.toLength(Infinity);
  	     * // => 4294967295
  	     *
  	     * _.toLength('3.2');
  	     * // => 3
  	     */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}/**
  	     * Converts `value` to a number.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to process.
  	     * @returns {number} Returns the number.
  	     * @example
  	     *
  	     * _.toNumber(3.2);
  	     * // => 3.2
  	     *
  	     * _.toNumber(Number.MIN_VALUE);
  	     * // => 5e-324
  	     *
  	     * _.toNumber(Infinity);
  	     * // => Infinity
  	     *
  	     * _.toNumber('3.2');
  	     * // => 3.2
  	     */function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}/**
  	     * Converts `value` to a plain object flattening inherited enumerable string
  	     * keyed properties of `value` to own properties of the plain object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {Object} Returns the converted plain object.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.assign({ 'a': 1 }, new Foo);
  	     * // => { 'a': 1, 'b': 2 }
  	     *
  	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
  	     * // => { 'a': 1, 'b': 2, 'c': 3 }
  	     */function toPlainObject(value){return copyObject(value,keysIn(value));}/**
  	     * Converts `value` to a safe integer. A safe integer can be compared and
  	     * represented correctly.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {number} Returns the converted integer.
  	     * @example
  	     *
  	     * _.toSafeInteger(3.2);
  	     * // => 3
  	     *
  	     * _.toSafeInteger(Number.MIN_VALUE);
  	     * // => 0
  	     *
  	     * _.toSafeInteger(Infinity);
  	     * // => 9007199254740991
  	     *
  	     * _.toSafeInteger('3.2');
  	     * // => 3
  	     */function toSafeInteger(value){return value?baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER):value===0?value:0;}/**
  	     * Converts `value` to a string. An empty string is returned for `null`
  	     * and `undefined` values. The sign of `-0` is preserved.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Lang
  	     * @param {*} value The value to convert.
  	     * @returns {string} Returns the converted string.
  	     * @example
  	     *
  	     * _.toString(null);
  	     * // => ''
  	     *
  	     * _.toString(-0);
  	     * // => '-0'
  	     *
  	     * _.toString([1, 2, 3]);
  	     * // => '1,2,3'
  	     */function toString(value){return value==null?'':baseToString(value);}/*------------------------------------------------------------------------*/ /**
  	     * Assigns own enumerable string keyed properties of source objects to the
  	     * destination object. Source objects are applied from left to right.
  	     * Subsequent sources overwrite property assignments of previous sources.
  	     *
  	     * **Note:** This method mutates `object` and is loosely based on
  	     * [`Object.assign`](https://mdn.io/Object/assign).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.10.0
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} [sources] The source objects.
  	     * @returns {Object} Returns `object`.
  	     * @see _.assignIn
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     * }
  	     *
  	     * function Bar() {
  	     *   this.c = 3;
  	     * }
  	     *
  	     * Foo.prototype.b = 2;
  	     * Bar.prototype.d = 4;
  	     *
  	     * _.assign({ 'a': 0 }, new Foo, new Bar);
  	     * // => { 'a': 1, 'c': 3 }
  	     */var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});/**
  	     * This method is like `_.assign` except that it iterates over own and
  	     * inherited source properties.
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @alias extend
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} [sources] The source objects.
  	     * @returns {Object} Returns `object`.
  	     * @see _.assign
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     * }
  	     *
  	     * function Bar() {
  	     *   this.c = 3;
  	     * }
  	     *
  	     * Foo.prototype.b = 2;
  	     * Bar.prototype.d = 4;
  	     *
  	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
  	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
  	     */var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});/**
  	     * This method is like `_.assignIn` except that it accepts `customizer`
  	     * which is invoked to produce the assigned values. If `customizer` returns
  	     * `undefined`, assignment is handled by the method instead. The `customizer`
  	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @alias extendWith
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} sources The source objects.
  	     * @param {Function} [customizer] The function to customize assigned values.
  	     * @returns {Object} Returns `object`.
  	     * @see _.assignWith
  	     * @example
  	     *
  	     * function customizer(objValue, srcValue) {
  	     *   return _.isUndefined(objValue) ? srcValue : objValue;
  	     * }
  	     *
  	     * var defaults = _.partialRight(_.assignInWith, customizer);
  	     *
  	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
  	     * // => { 'a': 1, 'b': 2 }
  	     */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});/**
  	     * This method is like `_.assign` except that it accepts `customizer`
  	     * which is invoked to produce the assigned values. If `customizer` returns
  	     * `undefined`, assignment is handled by the method instead. The `customizer`
  	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} sources The source objects.
  	     * @param {Function} [customizer] The function to customize assigned values.
  	     * @returns {Object} Returns `object`.
  	     * @see _.assignInWith
  	     * @example
  	     *
  	     * function customizer(objValue, srcValue) {
  	     *   return _.isUndefined(objValue) ? srcValue : objValue;
  	     * }
  	     *
  	     * var defaults = _.partialRight(_.assignWith, customizer);
  	     *
  	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
  	     * // => { 'a': 1, 'b': 2 }
  	     */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});/**
  	     * Creates an array of values corresponding to `paths` of `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.0.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {...(string|string[])} [paths] The property paths to pick.
  	     * @returns {Array} Returns the picked values.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
  	     *
  	     * _.at(object, ['a[0].b.c', 'a[1]']);
  	     * // => [3, 4]
  	     */var at=flatRest(baseAt);/**
  	     * Creates an object that inherits from the `prototype` object. If a
  	     * `properties` object is given, its own enumerable string keyed properties
  	     * are assigned to the created object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.3.0
  	     * @category Object
  	     * @param {Object} prototype The object to inherit from.
  	     * @param {Object} [properties] The properties to assign to the object.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * function Shape() {
  	     *   this.x = 0;
  	     *   this.y = 0;
  	     * }
  	     *
  	     * function Circle() {
  	     *   Shape.call(this);
  	     * }
  	     *
  	     * Circle.prototype = _.create(Shape.prototype, {
  	     *   'constructor': Circle
  	     * });
  	     *
  	     * var circle = new Circle;
  	     * circle instanceof Circle;
  	     * // => true
  	     *
  	     * circle instanceof Shape;
  	     * // => true
  	     */function create(prototype,properties){var result=baseCreate(prototype);return properties==null?result:baseAssign(result,properties);}/**
  	     * Assigns own and inherited enumerable string keyed properties of source
  	     * objects to the destination object for all destination properties that
  	     * resolve to `undefined`. Source objects are applied from left to right.
  	     * Once a property is set, additional values of the same property are ignored.
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} [sources] The source objects.
  	     * @returns {Object} Returns `object`.
  	     * @see _.defaultsDeep
  	     * @example
  	     *
  	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
  	     * // => { 'a': 1, 'b': 2 }
  	     */var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1;}while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===undefined$1||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key];}}}return object;});/**
  	     * This method is like `_.defaults` except that it recursively assigns
  	     * default properties.
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.10.0
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} [sources] The source objects.
  	     * @returns {Object} Returns `object`.
  	     * @see _.defaults
  	     * @example
  	     *
  	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
  	     * // => { 'a': { 'b': 2, 'c': 3 } }
  	     */var defaultsDeep=baseRest(function(args){args.push(undefined$1,customDefaultsMerge);return apply(mergeWith,undefined$1,args);});/**
  	     * This method is like `_.find` except that it returns the key of the first
  	     * element `predicate` returns truthy for instead of the element itself.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.1.0
  	     * @category Object
  	     * @param {Object} object The object to inspect.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {string|undefined} Returns the key of the matched element,
  	     *  else `undefined`.
  	     * @example
  	     *
  	     * var users = {
  	     *   'barney':  { 'age': 36, 'active': true },
  	     *   'fred':    { 'age': 40, 'active': false },
  	     *   'pebbles': { 'age': 1,  'active': true }
  	     * };
  	     *
  	     * _.findKey(users, function(o) { return o.age < 40; });
  	     * // => 'barney' (iteration order is not guaranteed)
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.findKey(users, { 'age': 1, 'active': true });
  	     * // => 'pebbles'
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.findKey(users, ['active', false]);
  	     * // => 'fred'
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.findKey(users, 'active');
  	     * // => 'barney'
  	     */function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}/**
  	     * This method is like `_.findKey` except that it iterates over elements of
  	     * a collection in the opposite order.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Object
  	     * @param {Object} object The object to inspect.
  	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
  	     * @returns {string|undefined} Returns the key of the matched element,
  	     *  else `undefined`.
  	     * @example
  	     *
  	     * var users = {
  	     *   'barney':  { 'age': 36, 'active': true },
  	     *   'fred':    { 'age': 40, 'active': false },
  	     *   'pebbles': { 'age': 1,  'active': true }
  	     * };
  	     *
  	     * _.findLastKey(users, function(o) { return o.age < 40; });
  	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.findLastKey(users, { 'age': 36, 'active': true });
  	     * // => 'barney'
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.findLastKey(users, ['active', false]);
  	     * // => 'fred'
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.findLastKey(users, 'active');
  	     * // => 'pebbles'
  	     */function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}/**
  	     * Iterates over own and inherited enumerable string keyed properties of an
  	     * object and invokes `iteratee` for each property. The iteratee is invoked
  	     * with three arguments: (value, key, object). Iteratee functions may exit
  	     * iteration early by explicitly returning `false`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.3.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Object} Returns `object`.
  	     * @see _.forInRight
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.forIn(new Foo, function(value, key) {
  	     *   console.log(key);
  	     * });
  	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
  	     */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}/**
  	     * This method is like `_.forIn` except that it iterates over properties of
  	     * `object` in the opposite order.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Object} Returns `object`.
  	     * @see _.forIn
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.forInRight(new Foo, function(value, key) {
  	     *   console.log(key);
  	     * });
  	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
  	     */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}/**
  	     * Iterates over own enumerable string keyed properties of an object and
  	     * invokes `iteratee` for each property. The iteratee is invoked with three
  	     * arguments: (value, key, object). Iteratee functions may exit iteration
  	     * early by explicitly returning `false`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.3.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Object} Returns `object`.
  	     * @see _.forOwnRight
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.forOwn(new Foo, function(value, key) {
  	     *   console.log(key);
  	     * });
  	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
  	     */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}/**
  	     * This method is like `_.forOwn` except that it iterates over properties of
  	     * `object` in the opposite order.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.0.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Object} Returns `object`.
  	     * @see _.forOwn
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.forOwnRight(new Foo, function(value, key) {
  	     *   console.log(key);
  	     * });
  	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
  	     */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}/**
  	     * Creates an array of function property names from own enumerable properties
  	     * of `object`.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The object to inspect.
  	     * @returns {Array} Returns the function names.
  	     * @see _.functionsIn
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = _.constant('a');
  	     *   this.b = _.constant('b');
  	     * }
  	     *
  	     * Foo.prototype.c = _.constant('c');
  	     *
  	     * _.functions(new Foo);
  	     * // => ['a', 'b']
  	     */function functions(object){return object==null?[]:baseFunctions(object,keys(object));}/**
  	     * Creates an array of function property names from own and inherited
  	     * enumerable properties of `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The object to inspect.
  	     * @returns {Array} Returns the function names.
  	     * @see _.functions
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = _.constant('a');
  	     *   this.b = _.constant('b');
  	     * }
  	     *
  	     * Foo.prototype.c = _.constant('c');
  	     *
  	     * _.functionsIn(new Foo);
  	     * // => ['a', 'b', 'c']
  	     */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}/**
  	     * Gets the value at `path` of `object`. If the resolved value is
  	     * `undefined`, the `defaultValue` is returned in its place.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.7.0
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path of the property to get.
  	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
  	     * @returns {*} Returns the resolved value.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
  	     *
  	     * _.get(object, 'a[0].b.c');
  	     * // => 3
  	     *
  	     * _.get(object, ['a', '0', 'b', 'c']);
  	     * // => 3
  	     *
  	     * _.get(object, 'a.b.c', 'default');
  	     * // => 'default'
  	     */function get(object,path,defaultValue){var result=object==null?undefined$1:baseGet(object,path);return result===undefined$1?defaultValue:result;}/**
  	     * Checks if `path` is a direct property of `object`.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path to check.
  	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
  	     * @example
  	     *
  	     * var object = { 'a': { 'b': 2 } };
  	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
  	     *
  	     * _.has(object, 'a');
  	     * // => true
  	     *
  	     * _.has(object, 'a.b');
  	     * // => true
  	     *
  	     * _.has(object, ['a', 'b']);
  	     * // => true
  	     *
  	     * _.has(other, 'a');
  	     * // => false
  	     */function has(object,path){return object!=null&&hasPath(object,path,baseHas);}/**
  	     * Checks if `path` is a direct or inherited property of `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path to check.
  	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
  	     * @example
  	     *
  	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
  	     *
  	     * _.hasIn(object, 'a');
  	     * // => true
  	     *
  	     * _.hasIn(object, 'a.b');
  	     * // => true
  	     *
  	     * _.hasIn(object, ['a', 'b']);
  	     * // => true
  	     *
  	     * _.hasIn(object, 'b');
  	     * // => false
  	     */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}/**
  	     * Creates an object composed of the inverted keys and values of `object`.
  	     * If `object` contains duplicate values, subsequent values overwrite
  	     * property assignments of previous values.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.7.0
  	     * @category Object
  	     * @param {Object} object The object to invert.
  	     * @returns {Object} Returns the new inverted object.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
  	     *
  	     * _.invert(object);
  	     * // => { '1': 'c', '2': 'b' }
  	     */var invert=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}result[value]=key;},constant(identity));/**
  	     * This method is like `_.invert` except that the inverted object is generated
  	     * from the results of running each element of `object` thru `iteratee`. The
  	     * corresponding inverted value of each inverted key is an array of keys
  	     * responsible for generating the inverted value. The iteratee is invoked
  	     * with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.1.0
  	     * @category Object
  	     * @param {Object} object The object to invert.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {Object} Returns the new inverted object.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
  	     *
  	     * _.invertBy(object);
  	     * // => { '1': ['a', 'c'], '2': ['b'] }
  	     *
  	     * _.invertBy(object, function(value) {
  	     *   return 'group' + value;
  	     * });
  	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
  	     */var invertBy=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}if(hasOwnProperty.call(result,value)){result[value].push(key);}else {result[value]=[key];}},getIteratee);/**
  	     * Invokes the method at `path` of `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path of the method to invoke.
  	     * @param {...*} [args] The arguments to invoke the method with.
  	     * @returns {*} Returns the result of the invoked method.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
  	     *
  	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
  	     * // => [2, 3]
  	     */var invoke=baseRest(baseInvoke);/**
  	     * Creates an array of the own enumerable property names of `object`.
  	     *
  	     * **Note:** Non-object values are coerced to objects. See the
  	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
  	     * for more details.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.keys(new Foo);
  	     * // => ['a', 'b'] (iteration order is not guaranteed)
  	     *
  	     * _.keys('hi');
  	     * // => ['0', '1']
  	     */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}/**
  	     * Creates an array of the own and inherited enumerable property names of `object`.
  	     *
  	     * **Note:** Non-object values are coerced to objects.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property names.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.keysIn(new Foo);
  	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
  	     */function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}/**
  	     * The opposite of `_.mapValues`; this method creates an object with the
  	     * same values as `object` and keys generated by running each own enumerable
  	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
  	     * with three arguments: (value, key, object).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.8.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Object} Returns the new mapped object.
  	     * @see _.mapValues
  	     * @example
  	     *
  	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
  	     *   return key + value;
  	     * });
  	     * // => { 'a1': 1, 'b2': 2 }
  	     */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}/**
  	     * Creates an object with the same keys as `object` and values generated
  	     * by running each own enumerable string keyed property of `object` thru
  	     * `iteratee`. The iteratee is invoked with three arguments:
  	     * (value, key, object).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.4.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Object} Returns the new mapped object.
  	     * @see _.mapKeys
  	     * @example
  	     *
  	     * var users = {
  	     *   'fred':    { 'user': 'fred',    'age': 40 },
  	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
  	     * };
  	     *
  	     * _.mapValues(users, function(o) { return o.age; });
  	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.mapValues(users, 'age');
  	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
  	     */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}/**
  	     * This method is like `_.assign` except that it recursively merges own and
  	     * inherited enumerable string keyed properties of source objects into the
  	     * destination object. Source properties that resolve to `undefined` are
  	     * skipped if a destination value exists. Array and plain object properties
  	     * are merged recursively. Other objects and value types are overridden by
  	     * assignment. Source objects are applied from left to right. Subsequent
  	     * sources overwrite property assignments of previous sources.
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.5.0
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} [sources] The source objects.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * var object = {
  	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
  	     * };
  	     *
  	     * var other = {
  	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
  	     * };
  	     *
  	     * _.merge(object, other);
  	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
  	     */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});/**
  	     * This method is like `_.merge` except that it accepts `customizer` which
  	     * is invoked to produce the merged values of the destination and source
  	     * properties. If `customizer` returns `undefined`, merging is handled by the
  	     * method instead. The `customizer` is invoked with six arguments:
  	     * (objValue, srcValue, key, object, source, stack).
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The destination object.
  	     * @param {...Object} sources The source objects.
  	     * @param {Function} customizer The function to customize assigned values.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * function customizer(objValue, srcValue) {
  	     *   if (_.isArray(objValue)) {
  	     *     return objValue.concat(srcValue);
  	     *   }
  	     * }
  	     *
  	     * var object = { 'a': [1], 'b': [2] };
  	     * var other = { 'a': [3], 'b': [4] };
  	     *
  	     * _.mergeWith(object, other, customizer);
  	     * // => { 'a': [1, 3], 'b': [2, 4] }
  	     */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});/**
  	     * The opposite of `_.pick`; this method creates an object composed of the
  	     * own and inherited enumerable property paths of `object` that are not omitted.
  	     *
  	     * **Note:** This method is considerably slower than `_.pick`.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The source object.
  	     * @param {...(string|string[])} [paths] The property paths to omit.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
  	     *
  	     * _.omit(object, ['a', 'c']);
  	     * // => { 'b': '2' }
  	     */var omit=flatRest(function(object,paths){var result={};if(object==null){return result;}var isDeep=false;paths=arrayMap(paths,function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path;});copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone);}var length=paths.length;while(length--){baseUnset(result,paths[length]);}return result;});/**
  	     * The opposite of `_.pickBy`; this method creates an object composed of
  	     * the own and inherited enumerable string keyed properties of `object` that
  	     * `predicate` doesn't return truthy for. The predicate is invoked with two
  	     * arguments: (value, key).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The source object.
  	     * @param {Function} [predicate=_.identity] The function invoked per property.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
  	     *
  	     * _.omitBy(object, _.isNumber);
  	     * // => { 'b': '2' }
  	     */function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}/**
  	     * Creates an object composed of the picked `object` properties.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The source object.
  	     * @param {...(string|string[])} [paths] The property paths to pick.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
  	     *
  	     * _.pick(object, ['a', 'c']);
  	     * // => { 'a': 1, 'c': 3 }
  	     */var pick=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});/**
  	     * Creates an object composed of the `object` properties `predicate` returns
  	     * truthy for. The predicate is invoked with two arguments: (value, key).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The source object.
  	     * @param {Function} [predicate=_.identity] The function invoked per property.
  	     * @returns {Object} Returns the new object.
  	     * @example
  	     *
  	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
  	     *
  	     * _.pickBy(object, _.isNumber);
  	     * // => { 'a': 1, 'c': 3 }
  	     */function pickBy(object,predicate){if(object==null){return {};}var props=arrayMap(getAllKeysIn(object),function(prop){return [prop];});predicate=getIteratee(predicate);return basePickBy(object,props,function(value,path){return predicate(value,path[0]);});}/**
  	     * This method is like `_.get` except that if the resolved value is a
  	     * function it's invoked with the `this` binding of its parent object and
  	     * its result is returned.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @param {Array|string} path The path of the property to resolve.
  	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
  	     * @returns {*} Returns the resolved value.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
  	     *
  	     * _.result(object, 'a[0].b.c1');
  	     * // => 3
  	     *
  	     * _.result(object, 'a[0].b.c2');
  	     * // => 4
  	     *
  	     * _.result(object, 'a[0].b.c3', 'default');
  	     * // => 'default'
  	     *
  	     * _.result(object, 'a[0].b.c3', _.constant('default'));
  	     * // => 'default'
  	     */function result(object,path,defaultValue){path=castPath(path,object);var index=-1,length=path.length;// Ensure the loop is entered when path is empty.
  if(!length){length=1;object=undefined$1;}while(++index<length){var value=object==null?undefined$1:object[toKey(path[index])];if(value===undefined$1){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}/**
  	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
  	     * it's created. Arrays are created for missing index properties while objects
  	     * are created for all other missing properties. Use `_.setWith` to customize
  	     * `path` creation.
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.7.0
  	     * @category Object
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to set.
  	     * @param {*} value The value to set.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
  	     *
  	     * _.set(object, 'a[0].b.c', 4);
  	     * console.log(object.a[0].b.c);
  	     * // => 4
  	     *
  	     * _.set(object, ['x', '0', 'y', 'z'], 5);
  	     * console.log(object.x[0].y.z);
  	     * // => 5
  	     */function set(object,path,value){return object==null?object:baseSet(object,path,value);}/**
  	     * This method is like `_.set` except that it accepts `customizer` which is
  	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
  	     * path creation is handled by the method instead. The `customizer` is invoked
  	     * with three arguments: (nsValue, key, nsObject).
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to set.
  	     * @param {*} value The value to set.
  	     * @param {Function} [customizer] The function to customize assigned values.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * var object = {};
  	     *
  	     * _.setWith(object, '[0][1]', 'a', Object);
  	     * // => { '0': { '1': 'a' } }
  	     */function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return object==null?object:baseSet(object,path,value,customizer);}/**
  	     * Creates an array of own enumerable string keyed-value pairs for `object`
  	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
  	     * entries are returned.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @alias entries
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the key-value pairs.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.toPairs(new Foo);
  	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
  	     */var toPairs=createToPairs(keys);/**
  	     * Creates an array of own and inherited enumerable string keyed-value pairs
  	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
  	     * or set, its entries are returned.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @alias entriesIn
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the key-value pairs.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.toPairsIn(new Foo);
  	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
  	     */var toPairsIn=createToPairs(keysIn);/**
  	     * An alternative to `_.reduce`; this method transforms `object` to a new
  	     * `accumulator` object which is the result of running each of its own
  	     * enumerable string keyed properties thru `iteratee`, with each invocation
  	     * potentially mutating the `accumulator` object. If `accumulator` is not
  	     * provided, a new object with the same `[[Prototype]]` will be used. The
  	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
  	     * Iteratee functions may exit iteration early by explicitly returning `false`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.3.0
  	     * @category Object
  	     * @param {Object} object The object to iterate over.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @param {*} [accumulator] The custom accumulator value.
  	     * @returns {*} Returns the accumulated value.
  	     * @example
  	     *
  	     * _.transform([2, 3, 4], function(result, n) {
  	     *   result.push(n *= n);
  	     *   return n % 2 == 0;
  	     * }, []);
  	     * // => [4, 9]
  	     *
  	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
  	     *   (result[value] || (result[value] = [])).push(key);
  	     * }, {});
  	     * // => { '1': ['a', 'c'], '2': ['b'] }
  	     */function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else {accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}/**
  	     * Removes the property at `path` of `object`.
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Object
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to unset.
  	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
  	     * _.unset(object, 'a[0].b.c');
  	     * // => true
  	     *
  	     * console.log(object);
  	     * // => { 'a': [{ 'b': {} }] };
  	     *
  	     * _.unset(object, ['a', '0', 'b', 'c']);
  	     * // => true
  	     *
  	     * console.log(object);
  	     * // => { 'a': [{ 'b': {} }] };
  	     */function unset(object,path){return object==null?true:baseUnset(object,path);}/**
  	     * This method is like `_.set` except that accepts `updater` to produce the
  	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
  	     * is invoked with one argument: (value).
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.6.0
  	     * @category Object
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to set.
  	     * @param {Function} updater The function to produce the updated value.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
  	     *
  	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
  	     * console.log(object.a[0].b.c);
  	     * // => 9
  	     *
  	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
  	     * console.log(object.x[0].y.z);
  	     * // => 0
  	     */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}/**
  	     * This method is like `_.update` except that it accepts `customizer` which is
  	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
  	     * path creation is handled by the method instead. The `customizer` is invoked
  	     * with three arguments: (nsValue, key, nsObject).
  	     *
  	     * **Note:** This method mutates `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.6.0
  	     * @category Object
  	     * @param {Object} object The object to modify.
  	     * @param {Array|string} path The path of the property to set.
  	     * @param {Function} updater The function to produce the updated value.
  	     * @param {Function} [customizer] The function to customize assigned values.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * var object = {};
  	     *
  	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
  	     * // => { '0': { '1': 'a' } }
  	     */function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}/**
  	     * Creates an array of the own enumerable string keyed property values of `object`.
  	     *
  	     * **Note:** Non-object values are coerced to objects.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property values.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.values(new Foo);
  	     * // => [1, 2] (iteration order is not guaranteed)
  	     *
  	     * _.values('hi');
  	     * // => ['h', 'i']
  	     */function values(object){return object==null?[]:baseValues(object,keys(object));}/**
  	     * Creates an array of the own and inherited enumerable string keyed property
  	     * values of `object`.
  	     *
  	     * **Note:** Non-object values are coerced to objects.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Object
  	     * @param {Object} object The object to query.
  	     * @returns {Array} Returns the array of property values.
  	     * @example
  	     *
  	     * function Foo() {
  	     *   this.a = 1;
  	     *   this.b = 2;
  	     * }
  	     *
  	     * Foo.prototype.c = 3;
  	     *
  	     * _.valuesIn(new Foo);
  	     * // => [1, 2, 3] (iteration order is not guaranteed)
  	     */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}/*------------------------------------------------------------------------*/ /**
  	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Number
  	     * @param {number} number The number to clamp.
  	     * @param {number} [lower] The lower bound.
  	     * @param {number} upper The upper bound.
  	     * @returns {number} Returns the clamped number.
  	     * @example
  	     *
  	     * _.clamp(-10, -5, 5);
  	     * // => -5
  	     *
  	     * _.clamp(10, -5, 5);
  	     * // => 5
  	     */function clamp(number,lower,upper){if(upper===undefined$1){upper=lower;lower=undefined$1;}if(upper!==undefined$1){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined$1){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}/**
  	     * Checks if `n` is between `start` and up to, but not including, `end`. If
  	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
  	     * If `start` is greater than `end` the params are swapped to support
  	     * negative ranges.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.3.0
  	     * @category Number
  	     * @param {number} number The number to check.
  	     * @param {number} [start=0] The start of the range.
  	     * @param {number} end The end of the range.
  	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
  	     * @see _.range, _.rangeRight
  	     * @example
  	     *
  	     * _.inRange(3, 2, 4);
  	     * // => true
  	     *
  	     * _.inRange(4, 8);
  	     * // => true
  	     *
  	     * _.inRange(4, 2);
  	     * // => false
  	     *
  	     * _.inRange(2, 2);
  	     * // => false
  	     *
  	     * _.inRange(1.2, 2);
  	     * // => true
  	     *
  	     * _.inRange(5.2, 4);
  	     * // => false
  	     *
  	     * _.inRange(-3, -2, -6);
  	     * // => true
  	     */function inRange(number,start,end){start=toFinite(start);if(end===undefined$1){end=start;start=0;}else {end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}/**
  	     * Produces a random number between the inclusive `lower` and `upper` bounds.
  	     * If only one argument is provided a number between `0` and the given number
  	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
  	     * floats, a floating-point number is returned instead of an integer.
  	     *
  	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
  	     * floating-point values which can produce unexpected results.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.7.0
  	     * @category Number
  	     * @param {number} [lower=0] The lower bound.
  	     * @param {number} [upper=1] The upper bound.
  	     * @param {boolean} [floating] Specify returning a floating-point number.
  	     * @returns {number} Returns the random number.
  	     * @example
  	     *
  	     * _.random(0, 5);
  	     * // => an integer between 0 and 5
  	     *
  	     * _.random(5);
  	     * // => also an integer between 0 and 5
  	     *
  	     * _.random(5, true);
  	     * // => a floating-point number between 0 and 5
  	     *
  	     * _.random(1.2, 5.2);
  	     * // => a floating-point number between 1.2 and 5.2
  	     */function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined$1;}if(floating===undefined$1){if(typeof upper=='boolean'){floating=upper;upper=undefined$1;}else if(typeof lower=='boolean'){floating=lower;lower=undefined$1;}}if(lower===undefined$1&&upper===undefined$1){lower=0;upper=1;}else {lower=toFinite(lower);if(upper===undefined$1){upper=lower;lower=0;}else {upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}/*------------------------------------------------------------------------*/ /**
  	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the camel cased string.
  	     * @example
  	     *
  	     * _.camelCase('Foo Bar');
  	     * // => 'fooBar'
  	     *
  	     * _.camelCase('--foo-bar--');
  	     * // => 'fooBar'
  	     *
  	     * _.camelCase('__FOO_BAR__');
  	     * // => 'fooBar'
  	     */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});/**
  	     * Converts the first character of `string` to upper case and the remaining
  	     * to lower case.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to capitalize.
  	     * @returns {string} Returns the capitalized string.
  	     * @example
  	     *
  	     * _.capitalize('FRED');
  	     * // => 'Fred'
  	     */function capitalize(string){return upperFirst(toString(string).toLowerCase());}/**
  	     * Deburrs `string` by converting
  	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
  	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
  	     * letters to basic Latin letters and removing
  	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to deburr.
  	     * @returns {string} Returns the deburred string.
  	     * @example
  	     *
  	     * _.deburr('déjà vu');
  	     * // => 'deja vu'
  	     */function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}/**
  	     * Checks if `string` ends with the given target string.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to inspect.
  	     * @param {string} [target] The string to search for.
  	     * @param {number} [position=string.length] The position to search up to.
  	     * @returns {boolean} Returns `true` if `string` ends with `target`,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.endsWith('abc', 'c');
  	     * // => true
  	     *
  	     * _.endsWith('abc', 'b');
  	     * // => false
  	     *
  	     * _.endsWith('abc', 'b', 2);
  	     * // => true
  	     */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined$1?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}/**
  	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
  	     * corresponding HTML entities.
  	     *
  	     * **Note:** No other characters are escaped. To escape additional
  	     * characters use a third-party library like [_he_](https://mths.be/he).
  	     *
  	     * Though the ">" character is escaped for symmetry, characters like
  	     * ">" and "/" don't need escaping in HTML and have no special meaning
  	     * unless they're part of a tag or unquoted attribute value. See
  	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
  	     * (under "semi-related fun fact") for more details.
  	     *
  	     * When working with HTML you should always
  	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
  	     * XSS vectors.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category String
  	     * @param {string} [string=''] The string to escape.
  	     * @returns {string} Returns the escaped string.
  	     * @example
  	     *
  	     * _.escape('fred, barney, & pebbles');
  	     * // => 'fred, barney, &amp; pebbles'
  	     */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}/**
  	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
  	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to escape.
  	     * @returns {string} Returns the escaped string.
  	     * @example
  	     *
  	     * _.escapeRegExp('[lodash](https://lodash.com/)');
  	     * // => '\[lodash\]\(https://lodash\.com/\)'
  	     */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}/**
  	     * Converts `string` to
  	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the kebab cased string.
  	     * @example
  	     *
  	     * _.kebabCase('Foo Bar');
  	     * // => 'foo-bar'
  	     *
  	     * _.kebabCase('fooBar');
  	     * // => 'foo-bar'
  	     *
  	     * _.kebabCase('__FOO_BAR__');
  	     * // => 'foo-bar'
  	     */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});/**
  	     * Converts `string`, as space separated words, to lower case.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the lower cased string.
  	     * @example
  	     *
  	     * _.lowerCase('--Foo-Bar--');
  	     * // => 'foo bar'
  	     *
  	     * _.lowerCase('fooBar');
  	     * // => 'foo bar'
  	     *
  	     * _.lowerCase('__FOO_BAR__');
  	     * // => 'foo bar'
  	     */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});/**
  	     * Converts the first character of `string` to lower case.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the converted string.
  	     * @example
  	     *
  	     * _.lowerFirst('Fred');
  	     * // => 'fred'
  	     *
  	     * _.lowerFirst('FRED');
  	     * // => 'fRED'
  	     */var lowerFirst=createCaseFirst('toLowerCase');/**
  	     * Pads `string` on the left and right sides if it's shorter than `length`.
  	     * Padding characters are truncated if they can't be evenly divided by `length`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to pad.
  	     * @param {number} [length=0] The padding length.
  	     * @param {string} [chars=' '] The string used as padding.
  	     * @returns {string} Returns the padded string.
  	     * @example
  	     *
  	     * _.pad('abc', 8);
  	     * // => '  abc   '
  	     *
  	     * _.pad('abc', 8, '_-');
  	     * // => '_-abc_-_'
  	     *
  	     * _.pad('abc', 3);
  	     * // => 'abc'
  	     */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}/**
  	     * Pads `string` on the right side if it's shorter than `length`. Padding
  	     * characters are truncated if they exceed `length`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to pad.
  	     * @param {number} [length=0] The padding length.
  	     * @param {string} [chars=' '] The string used as padding.
  	     * @returns {string} Returns the padded string.
  	     * @example
  	     *
  	     * _.padEnd('abc', 6);
  	     * // => 'abc   '
  	     *
  	     * _.padEnd('abc', 6, '_-');
  	     * // => 'abc_-_'
  	     *
  	     * _.padEnd('abc', 3);
  	     * // => 'abc'
  	     */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}/**
  	     * Pads `string` on the left side if it's shorter than `length`. Padding
  	     * characters are truncated if they exceed `length`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to pad.
  	     * @param {number} [length=0] The padding length.
  	     * @param {string} [chars=' '] The string used as padding.
  	     * @returns {string} Returns the padded string.
  	     * @example
  	     *
  	     * _.padStart('abc', 6);
  	     * // => '   abc'
  	     *
  	     * _.padStart('abc', 6, '_-');
  	     * // => '_-_abc'
  	     *
  	     * _.padStart('abc', 3);
  	     * // => 'abc'
  	     */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}/**
  	     * Converts `string` to an integer of the specified radix. If `radix` is
  	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
  	     * hexadecimal, in which case a `radix` of `16` is used.
  	     *
  	     * **Note:** This method aligns with the
  	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 1.1.0
  	     * @category String
  	     * @param {string} string The string to convert.
  	     * @param {number} [radix=10] The radix to interpret `value` by.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {number} Returns the converted integer.
  	     * @example
  	     *
  	     * _.parseInt('08');
  	     * // => 8
  	     *
  	     * _.map(['6', '08', '10'], _.parseInt);
  	     * // => [6, 8, 10]
  	     */function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}/**
  	     * Repeats the given string `n` times.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to repeat.
  	     * @param {number} [n=1] The number of times to repeat the string.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {string} Returns the repeated string.
  	     * @example
  	     *
  	     * _.repeat('*', 3);
  	     * // => '***'
  	     *
  	     * _.repeat('abc', 2);
  	     * // => 'abcabc'
  	     *
  	     * _.repeat('abc', 0);
  	     * // => ''
  	     */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined$1){n=1;}else {n=toInteger(n);}return baseRepeat(toString(string),n);}/**
  	     * Replaces matches for `pattern` in `string` with `replacement`.
  	     *
  	     * **Note:** This method is based on
  	     * [`String#replace`](https://mdn.io/String/replace).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to modify.
  	     * @param {RegExp|string} pattern The pattern to replace.
  	     * @param {Function|string} replacement The match replacement.
  	     * @returns {string} Returns the modified string.
  	     * @example
  	     *
  	     * _.replace('Hi Fred', 'Fred', 'Barney');
  	     * // => 'Hi Barney'
  	     */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}/**
  	     * Converts `string` to
  	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the snake cased string.
  	     * @example
  	     *
  	     * _.snakeCase('Foo Bar');
  	     * // => 'foo_bar'
  	     *
  	     * _.snakeCase('fooBar');
  	     * // => 'foo_bar'
  	     *
  	     * _.snakeCase('--FOO-BAR--');
  	     * // => 'foo_bar'
  	     */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});/**
  	     * Splits `string` by `separator`.
  	     *
  	     * **Note:** This method is based on
  	     * [`String#split`](https://mdn.io/String/split).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to split.
  	     * @param {RegExp|string} separator The separator pattern to split by.
  	     * @param {number} [limit] The length to truncate results to.
  	     * @returns {Array} Returns the string segments.
  	     * @example
  	     *
  	     * _.split('a-b-c', '-', 2);
  	     * // => ['a', 'b']
  	     */function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined$1;}limit=limit===undefined$1?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return [];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}/**
  	     * Converts `string` to
  	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.1.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the start cased string.
  	     * @example
  	     *
  	     * _.startCase('--foo-bar--');
  	     * // => 'Foo Bar'
  	     *
  	     * _.startCase('fooBar');
  	     * // => 'Foo Bar'
  	     *
  	     * _.startCase('__FOO_BAR__');
  	     * // => 'FOO BAR'
  	     */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});/**
  	     * Checks if `string` starts with the given target string.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to inspect.
  	     * @param {string} [target] The string to search for.
  	     * @param {number} [position=0] The position to search from.
  	     * @returns {boolean} Returns `true` if `string` starts with `target`,
  	     *  else `false`.
  	     * @example
  	     *
  	     * _.startsWith('abc', 'a');
  	     * // => true
  	     *
  	     * _.startsWith('abc', 'b');
  	     * // => false
  	     *
  	     * _.startsWith('abc', 'b', 1);
  	     * // => true
  	     */function startsWith(string,target,position){string=toString(string);position=position==null?0:baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}/**
  	     * Creates a compiled template function that can interpolate data properties
  	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
  	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
  	     * properties may be accessed as free variables in the template. If a setting
  	     * object is given, it takes precedence over `_.templateSettings` values.
  	     *
  	     * **Note:** In the development build `_.template` utilizes
  	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
  	     * for easier debugging.
  	     *
  	     * For more information on precompiling templates see
  	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
  	     *
  	     * For more information on Chrome extension sandboxes see
  	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category String
  	     * @param {string} [string=''] The template string.
  	     * @param {Object} [options={}] The options object.
  	     * @param {RegExp} [options.escape=_.templateSettings.escape]
  	     *  The HTML "escape" delimiter.
  	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
  	     *  The "evaluate" delimiter.
  	     * @param {Object} [options.imports=_.templateSettings.imports]
  	     *  An object to import into the template as free variables.
  	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
  	     *  The "interpolate" delimiter.
  	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
  	     *  The sourceURL of the compiled template.
  	     * @param {string} [options.variable='obj']
  	     *  The data object variable name.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Function} Returns the compiled template function.
  	     * @example
  	     *
  	     * // Use the "interpolate" delimiter to create a compiled template.
  	     * var compiled = _.template('hello <%= user %>!');
  	     * compiled({ 'user': 'fred' });
  	     * // => 'hello fred!'
  	     *
  	     * // Use the HTML "escape" delimiter to escape data property values.
  	     * var compiled = _.template('<b><%- value %></b>');
  	     * compiled({ 'value': '<script>' });
  	     * // => '<b>&lt;script&gt;</b>'
  	     *
  	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
  	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
  	     * compiled({ 'users': ['fred', 'barney'] });
  	     * // => '<li>fred</li><li>barney</li>'
  	     *
  	     * // Use the internal `print` function in "evaluate" delimiters.
  	     * var compiled = _.template('<% print("hello " + user); %>!');
  	     * compiled({ 'user': 'barney' });
  	     * // => 'hello barney!'
  	     *
  	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
  	     * // Disable support by replacing the "interpolate" delimiter.
  	     * var compiled = _.template('hello ${ user }!');
  	     * compiled({ 'user': 'pebbles' });
  	     * // => 'hello pebbles!'
  	     *
  	     * // Use backslashes to treat delimiters as plain text.
  	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
  	     * compiled({ 'value': 'ignored' });
  	     * // => '<%- value %>'
  	     *
  	     * // Use the `imports` option to import `jQuery` as `jq`.
  	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
  	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
  	     * compiled({ 'users': ['fred', 'barney'] });
  	     * // => '<li>fred</li><li>barney</li>'
  	     *
  	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
  	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
  	     * compiled(data);
  	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
  	     *
  	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
  	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
  	     * compiled.source;
  	     * // => function(data) {
  	     * //   var __t, __p = '';
  	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
  	     * //   return __p;
  	     * // }
  	     *
  	     * // Use custom template delimiters.
  	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
  	     * var compiled = _.template('hello {{ user }}!');
  	     * compiled({ 'user': 'mustache' });
  	     * // => 'hello mustache!'
  	     *
  	     * // Use the `source` property to inline compiled templates for meaningful
  	     * // line numbers in error messages and stack traces.
  	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
  	     *   var JST = {\
  	     *     "main": ' + _.template(mainText).source + '\
  	     *   };\
  	     * ');
  	     */function template(string,options,guard){// Based on John Resig's `tmpl` implementation
  // (http://ejohn.org/blog/javascript-micro-templating/)
  // and Laura Doktorova's doT.js (https://github.com/olado/doT).
  var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined$1;}string=toString(string);options=assignInWith({},options,settings,customDefaultsAssignIn);var imports=assignInWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";// Compile the regexp to match each delimiter.
  var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');// Use a sourceURL for easier debugging.
  // The sourceURL gets injected into the source that's eval-ed, so be careful
  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
  // and escape the comment, thus injecting code that gets evaled.
  var sourceURL='//# sourceURL='+(hasOwnProperty.call(options,'sourceURL')?(options.sourceURL+'').replace(/\s/g,' '):'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);// Escape characters that can't be included in string literals.
  source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);// Replace delimiters with snippets.
  if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;// The JS engine embedded in Adobe products needs `match` returned in
  // order to produce the correct `offset` value.
  return match;});source+="';\n";// If `variable` is not specified wrap a with-statement around the generated
  // code to add the data object to the top of the scope chain.
  var variable=hasOwnProperty.call(options,'variable')&&options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}// Throw an error if a forbidden character was found in `variable`, to prevent
  // potential command injection attacks.
  else if(reForbiddenIdentifierChars.test(variable)){throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);}// Cleanup code by stripping empty strings.
  source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');// Frame code as the function body.
  source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined$1,importsValues);});// Provide the compiled function's source by its `toString` method or
  // the `source` property as a convenience for inlining compiled templates.
  result.source=source;if(isError(result)){throw result;}return result;}/**
  	     * Converts `string`, as a whole, to lower case just like
  	     * [String#toLowerCase](https://mdn.io/toLowerCase).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the lower cased string.
  	     * @example
  	     *
  	     * _.toLower('--Foo-Bar--');
  	     * // => '--foo-bar--'
  	     *
  	     * _.toLower('fooBar');
  	     * // => 'foobar'
  	     *
  	     * _.toLower('__FOO_BAR__');
  	     * // => '__foo_bar__'
  	     */function toLower(value){return toString(value).toLowerCase();}/**
  	     * Converts `string`, as a whole, to upper case just like
  	     * [String#toUpperCase](https://mdn.io/toUpperCase).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the upper cased string.
  	     * @example
  	     *
  	     * _.toUpper('--foo-bar--');
  	     * // => '--FOO-BAR--'
  	     *
  	     * _.toUpper('fooBar');
  	     * // => 'FOOBAR'
  	     *
  	     * _.toUpper('__foo_bar__');
  	     * // => '__FOO_BAR__'
  	     */function toUpper(value){return toString(value).toUpperCase();}/**
  	     * Removes leading and trailing whitespace or specified characters from `string`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to trim.
  	     * @param {string} [chars=whitespace] The characters to trim.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {string} Returns the trimmed string.
  	     * @example
  	     *
  	     * _.trim('  abc  ');
  	     * // => 'abc'
  	     *
  	     * _.trim('-_-abc-_-', '_-');
  	     * // => 'abc'
  	     *
  	     * _.map(['  foo  ', '  bar  '], _.trim);
  	     * // => ['foo', 'bar']
  	     */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return baseTrim(string);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}/**
  	     * Removes trailing whitespace or specified characters from `string`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to trim.
  	     * @param {string} [chars=whitespace] The characters to trim.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {string} Returns the trimmed string.
  	     * @example
  	     *
  	     * _.trimEnd('  abc  ');
  	     * // => '  abc'
  	     *
  	     * _.trimEnd('-_-abc-_-', '_-');
  	     * // => '-_-abc'
  	     */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.slice(0,trimmedEndIndex(string)+1);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}/**
  	     * Removes leading whitespace or specified characters from `string`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to trim.
  	     * @param {string} [chars=whitespace] The characters to trim.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {string} Returns the trimmed string.
  	     * @example
  	     *
  	     * _.trimStart('  abc  ');
  	     * // => 'abc  '
  	     *
  	     * _.trimStart('-_-abc-_-', '_-');
  	     * // => 'abc-_-'
  	     */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}/**
  	     * Truncates `string` if it's longer than the given maximum string length.
  	     * The last characters of the truncated string are replaced with the omission
  	     * string which defaults to "...".
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to truncate.
  	     * @param {Object} [options={}] The options object.
  	     * @param {number} [options.length=30] The maximum string length.
  	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
  	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
  	     * @returns {string} Returns the truncated string.
  	     * @example
  	     *
  	     * _.truncate('hi-diddly-ho there, neighborino');
  	     * // => 'hi-diddly-ho there, neighbo...'
  	     *
  	     * _.truncate('hi-diddly-ho there, neighborino', {
  	     *   'length': 24,
  	     *   'separator': ' '
  	     * });
  	     * // => 'hi-diddly-ho there,...'
  	     *
  	     * _.truncate('hi-diddly-ho there, neighborino', {
  	     *   'length': 24,
  	     *   'separator': /,? +/
  	     * });
  	     * // => 'hi-diddly-ho there...'
  	     *
  	     * _.truncate('hi-diddly-ho there, neighborino', {
  	     *   'omission': ' [...]'
  	     * });
  	     * // => 'hi-diddly-ho there, neig [...]'
  	     */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined$1){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined$1?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}/**
  	     * The inverse of `_.escape`; this method converts the HTML entities
  	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
  	     * their corresponding characters.
  	     *
  	     * **Note:** No other HTML entities are unescaped. To unescape additional
  	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 0.6.0
  	     * @category String
  	     * @param {string} [string=''] The string to unescape.
  	     * @returns {string} Returns the unescaped string.
  	     * @example
  	     *
  	     * _.unescape('fred, barney, &amp; pebbles');
  	     * // => 'fred, barney, & pebbles'
  	     */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}/**
  	     * Converts `string`, as space separated words, to upper case.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the upper cased string.
  	     * @example
  	     *
  	     * _.upperCase('--foo-bar');
  	     * // => 'FOO BAR'
  	     *
  	     * _.upperCase('fooBar');
  	     * // => 'FOO BAR'
  	     *
  	     * _.upperCase('__foo_bar__');
  	     * // => 'FOO BAR'
  	     */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});/**
  	     * Converts the first character of `string` to upper case.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to convert.
  	     * @returns {string} Returns the converted string.
  	     * @example
  	     *
  	     * _.upperFirst('fred');
  	     * // => 'Fred'
  	     *
  	     * _.upperFirst('FRED');
  	     * // => 'FRED'
  	     */var upperFirst=createCaseFirst('toUpperCase');/**
  	     * Splits `string` into an array of its words.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category String
  	     * @param {string} [string=''] The string to inspect.
  	     * @param {RegExp|string} [pattern] The pattern to match words.
  	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
  	     * @returns {Array} Returns the words of `string`.
  	     * @example
  	     *
  	     * _.words('fred, barney, & pebbles');
  	     * // => ['fred', 'barney', 'pebbles']
  	     *
  	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
  	     * // => ['fred', 'barney', '&', 'pebbles']
  	     */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined$1:pattern;if(pattern===undefined$1){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}/*------------------------------------------------------------------------*/ /**
  	     * Attempts to invoke `func`, returning either the result or the caught error
  	     * object. Any additional arguments are provided to `func` when it's invoked.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Util
  	     * @param {Function} func The function to attempt.
  	     * @param {...*} [args] The arguments to invoke `func` with.
  	     * @returns {*} Returns the `func` result or error object.
  	     * @example
  	     *
  	     * // Avoid throwing errors for invalid selectors.
  	     * var elements = _.attempt(function(selector) {
  	     *   return document.querySelectorAll(selector);
  	     * }, '>_>');
  	     *
  	     * if (_.isError(elements)) {
  	     *   elements = [];
  	     * }
  	     */var attempt=baseRest(function(func,args){try{return apply(func,undefined$1,args);}catch(e){return isError(e)?e:new Error(e);}});/**
  	     * Binds methods of an object to the object itself, overwriting the existing
  	     * method.
  	     *
  	     * **Note:** This method doesn't set the "length" property of bound functions.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {Object} object The object to bind and assign the bound methods to.
  	     * @param {...(string|string[])} methodNames The object method names to bind.
  	     * @returns {Object} Returns `object`.
  	     * @example
  	     *
  	     * var view = {
  	     *   'label': 'docs',
  	     *   'click': function() {
  	     *     console.log('clicked ' + this.label);
  	     *   }
  	     * };
  	     *
  	     * _.bindAll(view, ['click']);
  	     * jQuery(element).on('click', view.click);
  	     * // => Logs 'clicked docs' when clicked.
  	     */var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});/**
  	     * Creates a function that iterates over `pairs` and invokes the corresponding
  	     * function of the first predicate to return truthy. The predicate-function
  	     * pairs are invoked with the `this` binding and arguments of the created
  	     * function.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {Array} pairs The predicate-function pairs.
  	     * @returns {Function} Returns the new composite function.
  	     * @example
  	     *
  	     * var func = _.cond([
  	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
  	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
  	     *   [_.stubTrue,                      _.constant('no match')]
  	     * ]);
  	     *
  	     * func({ 'a': 1, 'b': 2 });
  	     * // => 'matches A'
  	     *
  	     * func({ 'a': 0, 'b': 1 });
  	     * // => 'matches B'
  	     *
  	     * func({ 'a': '1', 'b': '2' });
  	     * // => 'no match'
  	     */function cond(pairs){var length=pairs==null?0:pairs.length,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return [toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}/**
  	     * Creates a function that invokes the predicate properties of `source` with
  	     * the corresponding property values of a given object, returning `true` if
  	     * all predicates return truthy, else `false`.
  	     *
  	     * **Note:** The created function is equivalent to `_.conformsTo` with
  	     * `source` partially applied.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {Object} source The object of property predicates to conform to.
  	     * @returns {Function} Returns the new spec function.
  	     * @example
  	     *
  	     * var objects = [
  	     *   { 'a': 2, 'b': 1 },
  	     *   { 'a': 1, 'b': 2 }
  	     * ];
  	     *
  	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
  	     * // => [{ 'a': 1, 'b': 2 }]
  	     */function conforms(source){return baseConforms(baseClone(source,CLONE_DEEP_FLAG));}/**
  	     * Creates a function that returns `value`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.4.0
  	     * @category Util
  	     * @param {*} value The value to return from the new function.
  	     * @returns {Function} Returns the new constant function.
  	     * @example
  	     *
  	     * var objects = _.times(2, _.constant({ 'a': 1 }));
  	     *
  	     * console.log(objects);
  	     * // => [{ 'a': 1 }, { 'a': 1 }]
  	     *
  	     * console.log(objects[0] === objects[1]);
  	     * // => true
  	     */function constant(value){return function(){return value;};}/**
  	     * Checks `value` to determine whether a default value should be returned in
  	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
  	     * or `undefined`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.14.0
  	     * @category Util
  	     * @param {*} value The value to check.
  	     * @param {*} defaultValue The default value.
  	     * @returns {*} Returns the resolved value.
  	     * @example
  	     *
  	     * _.defaultTo(1, 10);
  	     * // => 1
  	     *
  	     * _.defaultTo(undefined, 10);
  	     * // => 10
  	     */function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}/**
  	     * Creates a function that returns the result of invoking the given functions
  	     * with the `this` binding of the created function, where each successive
  	     * invocation is supplied the return value of the previous.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Util
  	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
  	     * @returns {Function} Returns the new composite function.
  	     * @see _.flowRight
  	     * @example
  	     *
  	     * function square(n) {
  	     *   return n * n;
  	     * }
  	     *
  	     * var addSquare = _.flow([_.add, square]);
  	     * addSquare(1, 2);
  	     * // => 9
  	     */var flow=createFlow();/**
  	     * This method is like `_.flow` except that it creates a function that
  	     * invokes the given functions from right to left.
  	     *
  	     * @static
  	     * @since 3.0.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
  	     * @returns {Function} Returns the new composite function.
  	     * @see _.flow
  	     * @example
  	     *
  	     * function square(n) {
  	     *   return n * n;
  	     * }
  	     *
  	     * var addSquare = _.flowRight([square, _.add]);
  	     * addSquare(1, 2);
  	     * // => 9
  	     */var flowRight=createFlow(true);/**
  	     * This method returns the first argument it receives.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {*} value Any value.
  	     * @returns {*} Returns `value`.
  	     * @example
  	     *
  	     * var object = { 'a': 1 };
  	     *
  	     * console.log(_.identity(object) === object);
  	     * // => true
  	     */function identity(value){return value;}/**
  	     * Creates a function that invokes `func` with the arguments of the created
  	     * function. If `func` is a property name, the created function returns the
  	     * property value for a given element. If `func` is an array or object, the
  	     * created function returns `true` for elements that contain the equivalent
  	     * source properties, otherwise it returns `false`.
  	     *
  	     * @static
  	     * @since 4.0.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {*} [func=_.identity] The value to convert to a callback.
  	     * @returns {Function} Returns the callback.
  	     * @example
  	     *
  	     * var users = [
  	     *   { 'user': 'barney', 'age': 36, 'active': true },
  	     *   { 'user': 'fred',   'age': 40, 'active': false }
  	     * ];
  	     *
  	     * // The `_.matches` iteratee shorthand.
  	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
  	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
  	     *
  	     * // The `_.matchesProperty` iteratee shorthand.
  	     * _.filter(users, _.iteratee(['user', 'fred']));
  	     * // => [{ 'user': 'fred', 'age': 40 }]
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.map(users, _.iteratee('user'));
  	     * // => ['barney', 'fred']
  	     *
  	     * // Create custom iteratee shorthands.
  	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
  	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
  	     *     return func.test(string);
  	     *   };
  	     * });
  	     *
  	     * _.filter(['abc', 'def'], /ef/);
  	     * // => ['def']
  	     */function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,CLONE_DEEP_FLAG));}/**
  	     * Creates a function that performs a partial deep comparison between a given
  	     * object and `source`, returning `true` if the given object has equivalent
  	     * property values, else `false`.
  	     *
  	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
  	     * partially applied.
  	     *
  	     * Partial comparisons will match empty array and empty object `source`
  	     * values against any array or object value, respectively. See `_.isEqual`
  	     * for a list of supported value comparisons.
  	     *
  	     * **Note:** Multiple values can be checked by combining several matchers
  	     * using `_.overSome`
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Util
  	     * @param {Object} source The object of property values to match.
  	     * @returns {Function} Returns the new spec function.
  	     * @example
  	     *
  	     * var objects = [
  	     *   { 'a': 1, 'b': 2, 'c': 3 },
  	     *   { 'a': 4, 'b': 5, 'c': 6 }
  	     * ];
  	     *
  	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
  	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
  	     *
  	     * // Checking for several possible values
  	     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
  	     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
  	     */function matches(source){return baseMatches(baseClone(source,CLONE_DEEP_FLAG));}/**
  	     * Creates a function that performs a partial deep comparison between the
  	     * value at `path` of a given object to `srcValue`, returning `true` if the
  	     * object value is equivalent, else `false`.
  	     *
  	     * **Note:** Partial comparisons will match empty array and empty object
  	     * `srcValue` values against any array or object value, respectively. See
  	     * `_.isEqual` for a list of supported value comparisons.
  	     *
  	     * **Note:** Multiple values can be checked by combining several matchers
  	     * using `_.overSome`
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.2.0
  	     * @category Util
  	     * @param {Array|string} path The path of the property to get.
  	     * @param {*} srcValue The value to match.
  	     * @returns {Function} Returns the new spec function.
  	     * @example
  	     *
  	     * var objects = [
  	     *   { 'a': 1, 'b': 2, 'c': 3 },
  	     *   { 'a': 4, 'b': 5, 'c': 6 }
  	     * ];
  	     *
  	     * _.find(objects, _.matchesProperty('a', 4));
  	     * // => { 'a': 4, 'b': 5, 'c': 6 }
  	     *
  	     * // Checking for several possible values
  	     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
  	     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
  	     */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,CLONE_DEEP_FLAG));}/**
  	     * Creates a function that invokes the method at `path` of a given object.
  	     * Any additional arguments are provided to the invoked method.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.7.0
  	     * @category Util
  	     * @param {Array|string} path The path of the method to invoke.
  	     * @param {...*} [args] The arguments to invoke the method with.
  	     * @returns {Function} Returns the new invoker function.
  	     * @example
  	     *
  	     * var objects = [
  	     *   { 'a': { 'b': _.constant(2) } },
  	     *   { 'a': { 'b': _.constant(1) } }
  	     * ];
  	     *
  	     * _.map(objects, _.method('a.b'));
  	     * // => [2, 1]
  	     *
  	     * _.map(objects, _.method(['a', 'b']));
  	     * // => [2, 1]
  	     */var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});/**
  	     * The opposite of `_.method`; this method creates a function that invokes
  	     * the method at a given path of `object`. Any additional arguments are
  	     * provided to the invoked method.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.7.0
  	     * @category Util
  	     * @param {Object} object The object to query.
  	     * @param {...*} [args] The arguments to invoke the method with.
  	     * @returns {Function} Returns the new invoker function.
  	     * @example
  	     *
  	     * var array = _.times(3, _.constant),
  	     *     object = { 'a': array, 'b': array, 'c': array };
  	     *
  	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
  	     * // => [2, 0]
  	     *
  	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
  	     * // => [2, 0]
  	     */var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});/**
  	     * Adds all own enumerable string keyed function properties of a source
  	     * object to the destination object. If `object` is a function, then methods
  	     * are added to its prototype as well.
  	     *
  	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
  	     * avoid conflicts caused by modifying the original.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {Function|Object} [object=lodash] The destination object.
  	     * @param {Object} source The object of functions to add.
  	     * @param {Object} [options={}] The options object.
  	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
  	     * @returns {Function|Object} Returns `object`.
  	     * @example
  	     *
  	     * function vowels(string) {
  	     *   return _.filter(string, function(v) {
  	     *     return /[aeiou]/i.test(v);
  	     *   });
  	     * }
  	     *
  	     * _.mixin({ 'vowels': vowels });
  	     * _.vowels('fred');
  	     * // => ['e']
  	     *
  	     * _('fred').vowels().value();
  	     * // => ['e']
  	     *
  	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
  	     * _('fred').vowels();
  	     * // => ['e']
  	     */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}/**
  	     * Reverts the `_` variable to its previous value and returns a reference to
  	     * the `lodash` function.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @returns {Function} Returns the `lodash` function.
  	     * @example
  	     *
  	     * var lodash = _.noConflict();
  	     */function noConflict(){if(root._===this){root._=oldDash;}return this;}/**
  	     * This method returns `undefined`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.3.0
  	     * @category Util
  	     * @example
  	     *
  	     * _.times(2, _.noop);
  	     * // => [undefined, undefined]
  	     */function noop(){// No operation performed.
  }/**
  	     * Creates a function that gets the argument at index `n`. If `n` is negative,
  	     * the nth argument from the end is returned.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {number} [n=0] The index of the argument to return.
  	     * @returns {Function} Returns the new pass-thru function.
  	     * @example
  	     *
  	     * var func = _.nthArg(1);
  	     * func('a', 'b', 'c', 'd');
  	     * // => 'b'
  	     *
  	     * var func = _.nthArg(-2);
  	     * func('a', 'b', 'c', 'd');
  	     * // => 'c'
  	     */function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}/**
  	     * Creates a function that invokes `iteratees` with the arguments it receives
  	     * and returns their results.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
  	     *  The iteratees to invoke.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var func = _.over([Math.max, Math.min]);
  	     *
  	     * func(1, 2, 3, 4);
  	     * // => [4, 1]
  	     */var over=createOver(arrayMap);/**
  	     * Creates a function that checks if **all** of the `predicates` return
  	     * truthy when invoked with the arguments it receives.
  	     *
  	     * Following shorthands are possible for providing predicates.
  	     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
  	     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {...(Function|Function[])} [predicates=[_.identity]]
  	     *  The predicates to check.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var func = _.overEvery([Boolean, isFinite]);
  	     *
  	     * func('1');
  	     * // => true
  	     *
  	     * func(null);
  	     * // => false
  	     *
  	     * func(NaN);
  	     * // => false
  	     */var overEvery=createOver(arrayEvery);/**
  	     * Creates a function that checks if **any** of the `predicates` return
  	     * truthy when invoked with the arguments it receives.
  	     *
  	     * Following shorthands are possible for providing predicates.
  	     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
  	     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {...(Function|Function[])} [predicates=[_.identity]]
  	     *  The predicates to check.
  	     * @returns {Function} Returns the new function.
  	     * @example
  	     *
  	     * var func = _.overSome([Boolean, isFinite]);
  	     *
  	     * func('1');
  	     * // => true
  	     *
  	     * func(null);
  	     * // => true
  	     *
  	     * func(NaN);
  	     * // => false
  	     *
  	     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
  	     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
  	     */var overSome=createOver(arraySome);/**
  	     * Creates a function that returns the value at `path` of a given object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 2.4.0
  	     * @category Util
  	     * @param {Array|string} path The path of the property to get.
  	     * @returns {Function} Returns the new accessor function.
  	     * @example
  	     *
  	     * var objects = [
  	     *   { 'a': { 'b': 2 } },
  	     *   { 'a': { 'b': 1 } }
  	     * ];
  	     *
  	     * _.map(objects, _.property('a.b'));
  	     * // => [2, 1]
  	     *
  	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
  	     * // => [1, 2]
  	     */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}/**
  	     * The opposite of `_.property`; this method creates a function that returns
  	     * the value at a given path of `object`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.0.0
  	     * @category Util
  	     * @param {Object} object The object to query.
  	     * @returns {Function} Returns the new accessor function.
  	     * @example
  	     *
  	     * var array = [0, 1, 2],
  	     *     object = { 'a': array, 'b': array, 'c': array };
  	     *
  	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
  	     * // => [2, 0]
  	     *
  	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
  	     * // => [2, 0]
  	     */function propertyOf(object){return function(path){return object==null?undefined$1:baseGet(object,path);};}/**
  	     * Creates an array of numbers (positive and/or negative) progressing from
  	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
  	     * `start` is specified without an `end` or `step`. If `end` is not specified,
  	     * it's set to `start` with `start` then set to `0`.
  	     *
  	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
  	     * floating-point values which can produce unexpected results.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {number} [start=0] The start of the range.
  	     * @param {number} end The end of the range.
  	     * @param {number} [step=1] The value to increment or decrement by.
  	     * @returns {Array} Returns the range of numbers.
  	     * @see _.inRange, _.rangeRight
  	     * @example
  	     *
  	     * _.range(4);
  	     * // => [0, 1, 2, 3]
  	     *
  	     * _.range(-4);
  	     * // => [0, -1, -2, -3]
  	     *
  	     * _.range(1, 5);
  	     * // => [1, 2, 3, 4]
  	     *
  	     * _.range(0, 20, 5);
  	     * // => [0, 5, 10, 15]
  	     *
  	     * _.range(0, -4, -1);
  	     * // => [0, -1, -2, -3]
  	     *
  	     * _.range(1, 4, 0);
  	     * // => [1, 1, 1]
  	     *
  	     * _.range(0);
  	     * // => []
  	     */var range=createRange();/**
  	     * This method is like `_.range` except that it populates values in
  	     * descending order.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {number} [start=0] The start of the range.
  	     * @param {number} end The end of the range.
  	     * @param {number} [step=1] The value to increment or decrement by.
  	     * @returns {Array} Returns the range of numbers.
  	     * @see _.inRange, _.range
  	     * @example
  	     *
  	     * _.rangeRight(4);
  	     * // => [3, 2, 1, 0]
  	     *
  	     * _.rangeRight(-4);
  	     * // => [-3, -2, -1, 0]
  	     *
  	     * _.rangeRight(1, 5);
  	     * // => [4, 3, 2, 1]
  	     *
  	     * _.rangeRight(0, 20, 5);
  	     * // => [15, 10, 5, 0]
  	     *
  	     * _.rangeRight(0, -4, -1);
  	     * // => [-3, -2, -1, 0]
  	     *
  	     * _.rangeRight(1, 4, 0);
  	     * // => [1, 1, 1]
  	     *
  	     * _.rangeRight(0);
  	     * // => []
  	     */var rangeRight=createRange(true);/**
  	     * This method returns a new empty array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.13.0
  	     * @category Util
  	     * @returns {Array} Returns the new empty array.
  	     * @example
  	     *
  	     * var arrays = _.times(2, _.stubArray);
  	     *
  	     * console.log(arrays);
  	     * // => [[], []]
  	     *
  	     * console.log(arrays[0] === arrays[1]);
  	     * // => false
  	     */function stubArray(){return [];}/**
  	     * This method returns `false`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.13.0
  	     * @category Util
  	     * @returns {boolean} Returns `false`.
  	     * @example
  	     *
  	     * _.times(2, _.stubFalse);
  	     * // => [false, false]
  	     */function stubFalse(){return false;}/**
  	     * This method returns a new empty object.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.13.0
  	     * @category Util
  	     * @returns {Object} Returns the new empty object.
  	     * @example
  	     *
  	     * var objects = _.times(2, _.stubObject);
  	     *
  	     * console.log(objects);
  	     * // => [{}, {}]
  	     *
  	     * console.log(objects[0] === objects[1]);
  	     * // => false
  	     */function stubObject(){return {};}/**
  	     * This method returns an empty string.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.13.0
  	     * @category Util
  	     * @returns {string} Returns the empty string.
  	     * @example
  	     *
  	     * _.times(2, _.stubString);
  	     * // => ['', '']
  	     */function stubString(){return '';}/**
  	     * This method returns `true`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.13.0
  	     * @category Util
  	     * @returns {boolean} Returns `true`.
  	     * @example
  	     *
  	     * _.times(2, _.stubTrue);
  	     * // => [true, true]
  	     */function stubTrue(){return true;}/**
  	     * Invokes the iteratee `n` times, returning an array of the results of
  	     * each invocation. The iteratee is invoked with one argument; (index).
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {number} n The number of times to invoke `iteratee`.
  	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
  	     * @returns {Array} Returns the array of results.
  	     * @example
  	     *
  	     * _.times(3, String);
  	     * // => ['0', '1', '2']
  	     *
  	     *  _.times(4, _.constant(0));
  	     * // => [0, 0, 0, 0]
  	     */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return [];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}/**
  	     * Converts `value` to a property path array.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Util
  	     * @param {*} value The value to convert.
  	     * @returns {Array} Returns the new property path array.
  	     * @example
  	     *
  	     * _.toPath('a.b.c');
  	     * // => ['a', 'b', 'c']
  	     *
  	     * _.toPath('a[0].b.c');
  	     * // => ['a', '0', 'b', 'c']
  	     */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(toString(value)));}/**
  	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Util
  	     * @param {string} [prefix=''] The value to prefix the ID with.
  	     * @returns {string} Returns the unique ID.
  	     * @example
  	     *
  	     * _.uniqueId('contact_');
  	     * // => 'contact_104'
  	     *
  	     * _.uniqueId();
  	     * // => '105'
  	     */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}/*------------------------------------------------------------------------*/ /**
  	     * Adds two numbers.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.4.0
  	     * @category Math
  	     * @param {number} augend The first number in an addition.
  	     * @param {number} addend The second number in an addition.
  	     * @returns {number} Returns the total.
  	     * @example
  	     *
  	     * _.add(6, 4);
  	     * // => 10
  	     */var add=createMathOperation(function(augend,addend){return augend+addend;},0);/**
  	     * Computes `number` rounded up to `precision`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.10.0
  	     * @category Math
  	     * @param {number} number The number to round up.
  	     * @param {number} [precision=0] The precision to round up to.
  	     * @returns {number} Returns the rounded up number.
  	     * @example
  	     *
  	     * _.ceil(4.006);
  	     * // => 5
  	     *
  	     * _.ceil(6.004, 2);
  	     * // => 6.01
  	     *
  	     * _.ceil(6040, -2);
  	     * // => 6100
  	     */var ceil=createRound('ceil');/**
  	     * Divide two numbers.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.7.0
  	     * @category Math
  	     * @param {number} dividend The first number in a division.
  	     * @param {number} divisor The second number in a division.
  	     * @returns {number} Returns the quotient.
  	     * @example
  	     *
  	     * _.divide(6, 4);
  	     * // => 1.5
  	     */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);/**
  	     * Computes `number` rounded down to `precision`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.10.0
  	     * @category Math
  	     * @param {number} number The number to round down.
  	     * @param {number} [precision=0] The precision to round down to.
  	     * @returns {number} Returns the rounded down number.
  	     * @example
  	     *
  	     * _.floor(4.006);
  	     * // => 4
  	     *
  	     * _.floor(0.046, 2);
  	     * // => 0.04
  	     *
  	     * _.floor(4060, -2);
  	     * // => 4000
  	     */var floor=createRound('floor');/**
  	     * Computes the maximum value of `array`. If `array` is empty or falsey,
  	     * `undefined` is returned.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @returns {*} Returns the maximum value.
  	     * @example
  	     *
  	     * _.max([4, 2, 8, 6]);
  	     * // => 8
  	     *
  	     * _.max([]);
  	     * // => undefined
  	     */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined$1;}/**
  	     * This method is like `_.max` except that it accepts `iteratee` which is
  	     * invoked for each element in `array` to generate the criterion by which
  	     * the value is ranked. The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {*} Returns the maximum value.
  	     * @example
  	     *
  	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
  	     *
  	     * _.maxBy(objects, function(o) { return o.n; });
  	     * // => { 'n': 2 }
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.maxBy(objects, 'n');
  	     * // => { 'n': 2 }
  	     */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined$1;}/**
  	     * Computes the mean of the values in `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @returns {number} Returns the mean.
  	     * @example
  	     *
  	     * _.mean([4, 2, 8, 6]);
  	     * // => 5
  	     */function mean(array){return baseMean(array,identity);}/**
  	     * This method is like `_.mean` except that it accepts `iteratee` which is
  	     * invoked for each element in `array` to generate the value to be averaged.
  	     * The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.7.0
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {number} Returns the mean.
  	     * @example
  	     *
  	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
  	     *
  	     * _.meanBy(objects, function(o) { return o.n; });
  	     * // => 5
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.meanBy(objects, 'n');
  	     * // => 5
  	     */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}/**
  	     * Computes the minimum value of `array`. If `array` is empty or falsey,
  	     * `undefined` is returned.
  	     *
  	     * @static
  	     * @since 0.1.0
  	     * @memberOf _
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @returns {*} Returns the minimum value.
  	     * @example
  	     *
  	     * _.min([4, 2, 8, 6]);
  	     * // => 2
  	     *
  	     * _.min([]);
  	     * // => undefined
  	     */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined$1;}/**
  	     * This method is like `_.min` except that it accepts `iteratee` which is
  	     * invoked for each element in `array` to generate the criterion by which
  	     * the value is ranked. The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {*} Returns the minimum value.
  	     * @example
  	     *
  	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
  	     *
  	     * _.minBy(objects, function(o) { return o.n; });
  	     * // => { 'n': 1 }
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.minBy(objects, 'n');
  	     * // => { 'n': 1 }
  	     */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined$1;}/**
  	     * Multiply two numbers.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.7.0
  	     * @category Math
  	     * @param {number} multiplier The first number in a multiplication.
  	     * @param {number} multiplicand The second number in a multiplication.
  	     * @returns {number} Returns the product.
  	     * @example
  	     *
  	     * _.multiply(6, 4);
  	     * // => 24
  	     */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);/**
  	     * Computes `number` rounded to `precision`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.10.0
  	     * @category Math
  	     * @param {number} number The number to round.
  	     * @param {number} [precision=0] The precision to round to.
  	     * @returns {number} Returns the rounded number.
  	     * @example
  	     *
  	     * _.round(4.006);
  	     * // => 4
  	     *
  	     * _.round(4.006, 2);
  	     * // => 4.01
  	     *
  	     * _.round(4060, -2);
  	     * // => 4100
  	     */var round=createRound('round');/**
  	     * Subtract two numbers.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Math
  	     * @param {number} minuend The first number in a subtraction.
  	     * @param {number} subtrahend The second number in a subtraction.
  	     * @returns {number} Returns the difference.
  	     * @example
  	     *
  	     * _.subtract(6, 4);
  	     * // => 2
  	     */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);/**
  	     * Computes the sum of the values in `array`.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 3.4.0
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @returns {number} Returns the sum.
  	     * @example
  	     *
  	     * _.sum([4, 2, 8, 6]);
  	     * // => 20
  	     */function sum(array){return array&&array.length?baseSum(array,identity):0;}/**
  	     * This method is like `_.sum` except that it accepts `iteratee` which is
  	     * invoked for each element in `array` to generate the value to be summed.
  	     * The iteratee is invoked with one argument: (value).
  	     *
  	     * @static
  	     * @memberOf _
  	     * @since 4.0.0
  	     * @category Math
  	     * @param {Array} array The array to iterate over.
  	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
  	     * @returns {number} Returns the sum.
  	     * @example
  	     *
  	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
  	     *
  	     * _.sumBy(objects, function(o) { return o.n; });
  	     * // => 20
  	     *
  	     * // The `_.property` iteratee shorthand.
  	     * _.sumBy(objects, 'n');
  	     * // => 20
  	     */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}/*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
  lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;// Add aliases.
  lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;// Add methods to `lodash.prototype`.
  mixin(lodash,lodash);/*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
  lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;// Add aliases.
  lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false});/*------------------------------------------------------------------------*/ /**
  	     * The semantic version number.
  	     *
  	     * @static
  	     * @memberOf _
  	     * @type {string}
  	     */lodash.VERSION=VERSION;// Assign default placeholders.
  arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
  arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){n=n===undefined$1?1:nativeMax(toInteger(n),0);var result=this.__filtered__&&!index?new LazyWrapper(this):this.clone();if(result.__filtered__){result.__takeCount__=nativeMin(n,result.__takeCount__);}else {result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});// Add `LazyWrapper` methods that accept an `iteratee` value.
  arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};});// Add `LazyWrapper` methods for `_.head` and `_.last`.
  arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});// Add `LazyWrapper` methods for `_.initial` and `_.tail`.
  arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined$1){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};// Add `LazyWrapper` methods to `lodash.prototype`.
  baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function interceptor(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){// Avoid lazy use if the iteratee has a "length" value other than `1`.
  isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined$1});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});// Add `Array` methods to `lodash.prototype`.
  arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});// Map minified method names to their real names.
  baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'';if(!hasOwnProperty.call(realNames,key)){realNames[key]=[];}realNames[key].push({'name':methodName,'func':lodashFunc});}});realNames[createHybrid(undefined$1,WRAP_BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined$1}];// Add methods to `LazyWrapper`.
  LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;// Add chain sequence methods to the `lodash` wrapper.
  lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;// Add lazy aliases.
  lodash.prototype.first=lodash.prototype.head;if(symIterator){lodash.prototype[symIterator]=wrapperToIterator;}return lodash;};/*--------------------------------------------------------------------------*/ // Export lodash.
  var _=runInContext();// Some AMD build optimizers, like r.js, check for condition patterns like:
  if(freeModule){// Export for Node.js.
  (freeModule.exports=_)._=_;// Export for CommonJS support.
  freeExports._=_;}else {// Export to the global object.
  root._=_;}}).call(commonjsGlobal);})(lodash,lodash.exports);

  function commonjsRequire(path) {
  	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
  }

  var moment$1 = {exports: {}};

  (function(module,exports){//! moment.js
  (function(global,factory){module.exports=factory();})(commonjsGlobal,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else {var k;for(k in obj){if(hasOwnProp(obj,k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i,arrLen=arr.length;for(i=0;i<arrLen;++i){res.push(fn(arr[i],i));}return res;}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
  return {empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidEra:null,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],era:null,meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else {some=function some(fun){var t=Object(this),len=t.length>>>0,i;for(i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m),parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;}),isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidEra&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else {return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else {getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties=hooks.momentProperties=[],updateInProgress=false;function copyConfig(to,from){var i,prop,val,momentPropertiesLen=momentProperties.length;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentPropertiesLen>0){for(i=0;i<momentPropertiesLen;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}// Moment prototype object
  function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
  // objects.
  if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){console.warn('Deprecation warning: '+msg);}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[],arg,i,key,argLen=arguments.length;for(i=0;i<argLen;i++){arg='';if(_typeof(arguments[i])==='object'){arg+='\n['+i+'] ';for(key in arguments[0]){if(hasOwnProp(arguments[0],key)){arg+=key+': '+arguments[0][key]+', ';}}arg=arg.slice(0,-2);// Remove trailing comma and space
  }else {arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return typeof Function!=='undefined'&&input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){if(hasOwnProp(config,i)){prop=config[i];if(isFunction(prop)){this[i]=prop;}else {this['_'+i]=prop;}}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
  // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
  // TODO: Remove "ordinalParse" fallback in next major release.
  this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else {delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
  res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else {keys=function keys(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return (sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,formatFunctions={},formatTokenFunctions={};// token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function func(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else {array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
  function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.match(formattingTokens).map(function(tok){if(tok==='MMMM'||tok==='MM'||tok==='DD'||tok==='dddd'){return tok.slice(1);}return tok;}).join('');return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d',defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',w:'a week',ww:'%d weeks',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[],u;for(u in unitsObj){if(hasOwnProp(unitsObj,u)){units.push({unit:u,priority:priorities[u]});}}units.sort(function(a,b){return a.priority-b.priority;});return units;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}function absFloor(number){if(number<0){// -0 -> 0
  return Math.ceil(number)||0;}else {return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else {return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){value=toInt(value);mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else {mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
  function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(_typeof(units)==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units),i,prioritizedLen=prioritized.length;for(i=0;i<prioritizedLen;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else {units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}var match1=/\d/,//       0 - 9
  match2=/\d\d/,//      00 - 99
  match3=/\d{3}/,//     000 - 999
  match4=/\d{4}/,//    0000 - 9999
  match6=/[+-]?\d{6}/,// -999999 - 999999
  match1to2=/\d\d?/,//       0 - 99
  match3to4=/\d\d\d\d?/,//     999 - 9999
  match5to6=/\d\d\d\d\d\d?/,//   99999 - 999999
  match1to3=/\d{1,3}/,//       0 - 999
  match1to4=/\d{1,4}/,//       0 - 9999
  match1to6=/[+-]?\d{1,6}/,// -999999 - 999999
  matchUnsigned=/\d+/,//       0 - inf
  matchSigned=/[+-]?\d+/,//    -inf - inf
  matchOffset=/Z|[+-]\d\d:?\d\d/gi,// +00:00 -00:00 +0000 -0000 or Z
  matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi,// +00 -00 +00:00 -00:00 +0000 -0000 or Z
  matchTimestamp=/[+-]?\d+(\.\d{1,3})?/,// 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,regexes;regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback,tokenLen;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function func(input,array){array[callback]=toInt(input);};}tokenLen=token.length;for(i=0;i<tokenLen;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0,MONTH=1,DATE=2,HOUR=3,MINUTE=4,SECOND=5,MILLISECOND=6,WEEK=7,WEEKDAY=8;function mod(n,x){return (n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else {indexOf=function indexOf(o){// I know
  var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return -1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
  addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
  addUnitAlias('month','M');// PRIORITY
  addUnitPriority('month',8);// PARSING
  addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
  if(month!=null){array[MONTH]=month;}else {getParsingFlags(config).invalidMonth=input;}});// LOCALES
  var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,defaultMonthsShortRegex=matchWord,defaultMonthsRegex=matchWord;function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
  this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else {if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
  // Sorting makes sure if one month (or abbr) is a prefix of another
  // see sorting in computeMonthsParse
  for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
  function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
  return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else {value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
  if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else {return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else {return this._monthsShortRegex;}}else {if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else {return this._monthsRegex;}}else {if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
  mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
  // will match the longer piece.
  shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}// FORMATTING
  addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?zeroFill(y,4):'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
  addUnitAlias('year','y');// PRIORITIES
  addUnitPriority('year',1);// PARSING
  addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
  function daysInYear(year){return isLeapYear(year)?366:365;}// HOOKS
  hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
  var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
  // https://stackoverflow.com/q/181348
  var date;// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else {date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date,args;// the Date.UTC function remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
  args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else {date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
  function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
  fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
  fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return -fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else {resYear=year;resDayOfYear=dayOfYear;}return {year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else {resYear=mom.year();resWeek=week;}return {week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return (daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
  addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
  addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
  addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
  addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
  // LOCALES
  function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
  doy:6// The week that contains Jan 6th is the first week of the year.
  };function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
  function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
  addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
  addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
  addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
  addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
  if(weekday!=null){week.d=weekday;}else {getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
  function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
  function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),defaultWeekdaysRegex=matchWord,defaultWeekdaysShortRegex=matchWord,defaultWeekdaysMinRegex=matchWord;function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else {if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else {ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
  if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
  function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else {return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
  // as a setter, sunday should belong to the previous week.
  if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else {return this.day()||7;}}function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else {return this._weekdaysRegex;}}else {if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else {return this._weekdaysShortRegex;}}else {if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else {return this._weekdaysMinRegex;}}else {if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
  mom=createUTC([2000,1]).day(i);minp=regexEscape(this.weekdaysMin(mom,''));shortp=regexEscape(this.weekdaysShort(mom,''));longp=regexEscape(this.weekdays(mom,''));minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
  // will match the longer piece.
  minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
  function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return ''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return ''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
  addUnitAlias('hour','h');// PRIORITY
  addUnitPriority('hour',13);// PARSING
  function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
  function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
  // Using charAt should be more compatible.
  return (input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i,// Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  getSetHour=makeGetSet('Hours',true);function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else {return isLower?'am':'AM';}}var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
  var locales={},localeFamilies={},globalLocale;function commonPrefix(arr1,arr2){var i,minl=Math.min(arr1.length,arr2.length);for(i=0;i<minl;i+=1){if(arr1[i]!==arr2[i]){return i;}}return minl;}function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&commonPrefix(split,next)>=j-1){//the next array item is better than a shallower substring of this one
  break;}j--;}i++;}return globalLocale;}function isLocaleNameSane(name){// Prevent names that look like filesystem paths, i.e contain '/' or '\'
  return name.match('^[^/\\\\]*$')!=null;}function loadLocale(name){var oldLocale=null,aliasedRequire;// TODO: Find a better way to register and load all the locales in Node
  if(locales[name]===undefined&&'object'!=='undefined'&&module&&module.exports&&isLocaleNameSane(name)){try{oldLocale=globalLocale._abbr;aliasedRequire=commonjsRequire;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){// mark as not found to avoid repeating expensive file require call causing high CPU
  // when trying to find en-US, en_US, en-us for every format call
  locales[name]=null;// null means not found
  }}return locales[name];}// This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else {data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
  globalLocale=data;}else {if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
  console.warn('Locale '+key+' not found. Did you forget to load it?');}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else {locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else {if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
  // make sure we set the locale AFTER all child locales have been
  // created, so we won't end up with the child locale set.
  getSetGlobalLocale(name);return locales[name];}else {// useful for testing
  delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;if(locales[name]!=null&&locales[name].parentLocale!=null){// Update existing child locale in-place to avoid memory-leaks
  locales[name].set(mergeConfigs(locales[name]._config,config));}else {// MERGE
  tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);if(tmpLocale==null){// updateLocale is called for creating a new locale
  // Set abbr so it will have a name (getters return
  // undefined otherwise).
  config.abbr=name;}locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;}// backwards compat for now: also set the locale
  getSetGlobalLocale(name);}else {// pass null for config to unupdate, useful for tests
  if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;if(name===getSetGlobalLocale()){getSetGlobalLocale(name);}}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
  function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
  locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow,a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tzRegex=/Z|[+-]\d\d(?::?\d\d)?/,isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/],['YYYYMM',/\d{6}/,false],['YYYY',/\d{4}/,false]],// iso time formats and regexes
  isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]],aspNetJsonRegex=/^\/?Date\((-?\d+)/i,// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};// date from iso format
  function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat,isoDatesLen=isoDates.length,isoTimesLen=isoTimes.length;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDatesLen;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimesLen;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
  timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else {config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else {config._isValid=false;}}function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an independent day-of-week check.
  var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
  return 0;}else {var hm=parseInt(numOffset,10),m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
  function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i)),parsedArray;if(match){parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else {config._isValid=false;}}// date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
  function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else {return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else {return;}if(config._strict){config._isValid=false;}else {// Final attempt, use Input Fallback
  hooks.createFromInputFallback(config);}}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// Pick the first defined of two or three arguments.
  function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
  var nowValue=new Date(hooks.now());if(config._useUTC){return [nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return [nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
  if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
  if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
  // * if no year, month, day of month are given, default to today
  // * if day of month is given, default month and year
  // * if month is given, default only year
  // * if year is given, don't default anything
  for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
  for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
  if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
  // with parseZone.
  if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
  if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow,curWeek;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
  // how we interpret now (local, utc, fixed offset). So create
  // a now version of current config (take local/utc/offset flags, and
  // create now).
  weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else {dow=config._locale._week.dow;doy=config._locale._week.doy;curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
  week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
  weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
  weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else {// default to beginning of week
  weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else {temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// constant that refers to the ISO standard
  hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
  hooks.RFC_2822=function(){};// date from string and format string
  function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
  if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
  var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0,era,tokenLen;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];tokenLen=tokens.length;for(i=0;i<tokenLen;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
  if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else {getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
  getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
  if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
  config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);// handle era
  era=getParsingFlags(config).era;if(era!==null){config._a[YEAR]=config._locale.erasConvertYear(era,config._a[YEAR]);}configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
  return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
  isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else {// this is not supposed to happen
  return hour;}}// date from string and array of format strings
  function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore,validFormatFound,bestFormatIsValid=false,configfLen=config._f.length;if(configfLen===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<configfLen;i++){currentScore=0;validFormatFound=false;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(isValid(tempConfig)){validFormatFound=true;}// if there is any input that was not parsed add a penalty for that format
  currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
  currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(!bestFormatIsValid){if(scoreToBeat==null||currentScore<scoreToBeat||validFormatFound){scoreToBeat=currentScore;bestMoment=tempConfig;if(validFormatFound){bestFormatIsValid=true;}}}else {if(currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i),dayOrDate=i.day===undefined?i.date:i.day;config._a=map([i.year,i.month,dayOrDate,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
  res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else {configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
  config._d=new Date(input);}else {hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(format===true||format===false){strict=format;format=undefined;}if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
  // https://github.com/moment/moment/issues/1423
  c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else {return createInvalid();}}),prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else {return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
  function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function now(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){var key,unitHasDecimal=false,i,orderLen=ordering.length;for(key in m){if(hasOwnProp(m,key)&&!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}for(i=0;i<orderLen;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
  }if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
  this._milliseconds=+milliseconds+seconds*1e3+// 1000
  minutes*6e4+// 1000 * 60
  hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
  // Because of dateAddRemove treats 24 hours as different from a
  // day when working around DST, we need to store them separately
  this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
  // which months you are are talking about, so we have to store
  // it separately.
  this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else {return Math.round(number);}}// compare two arrays, return the number of differences
  function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}// FORMATTING
  function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset(),sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
  addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher),chunk,parts,minutes;if(matches===null){return null;}chunk=matches[matches.length-1]||[];parts=(chunk+'').match(chunkOffset)||['-',0,0];minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
  res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else {return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
  // https://github.com/moment/moment/pull/1871
  return -Math.round(m._d.getTimezoneOffset());}// HOOKS
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset=function(){};// MOMENTS
  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else {return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else {return -this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else {this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return (this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={},other;copyConfig(c,this);c=prepareConfig(c);if(c._a){other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else {this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
  var aspNetRegex=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
  match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)||!isNaN(+input)){duration={};if(key){duration[key]=+input;}else {duration.milliseconds=+input;}}else if(match=aspNetRegex.exec(input)){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
  };}else if(match=isoRegex.exec(input)){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
  duration={};}else if(_typeof(duration)==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}if(isDuration(input)&&hasOwnProp(input,'_isValid')){ret._isValid=input._isValid;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
  // converts floats to ints.
  // inp may be undefined, so careful calling replace on it.
  var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
  return (isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return {milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else {res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
  if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
  return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add'),subtract=createAdder(-1,'subtract');function isString(input){return typeof input==='string'||input instanceof String;}// type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
  function isMomentInput(input){return isMoment(input)||isDate(input)||isString(input)||isNumber(input)||isNumberOrStringArray(input)||isMomentInputObject(input)||input===null||input===undefined;}function isMomentInputObject(input){var objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=false,properties=['years','year','y','months','month','M','days','day','d','dates','date','D','hours','hour','h','minutes','minute','m','seconds','second','s','milliseconds','millisecond','ms'],i,property,propertyLen=properties.length;for(i=0;i<propertyLen;i+=1){property=properties[i];propertyTest=propertyTest||hasOwnProp(input,property);}return objectTest&&propertyTest;}function isNumberOrStringArray(input){var arrayTest=isArray(input),dataTypeTest=false;if(arrayTest){dataTypeTest=input.filter(function(item){return !isNumber(item)&&isString(input);}).length===0;}return arrayTest&&dataTypeTest;}function isCalendarSpec(input){var objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=false,properties=['sameDay','nextDay','lastDay','nextWeek','lastWeek','sameElse'],i,property;for(i=0;i<properties.length;i+=1){property=properties[i];propertyTest=propertyTest||hasOwnProp(input,property);}return objectTest&&propertyTest;}function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// Support for single parameter, formats only overload to the calendar function
  if(arguments.length===1){if(!arguments[0]){time=undefined;formats=undefined;}else if(isMomentInput(arguments[0])){time=arguments[0];formats=undefined;}else if(isCalendarSpec(arguments[0])){formats=arguments[0];time=undefined;}}// We want to compare the start of today, vs this.
  // Getting start-of-today depends on whether we're local/utc/offset or not.
  var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse',output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else {return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else {return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return (inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else {inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
  case'minute':output=(this-that)/6e4;break;// 1000 * 60
  case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
  case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
  case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
  default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){if(a.date()<b.date()){// end-of-month calculations work correct when the start month has more
  // days than the end month.
  return -monthDiff(b,a);}// difference in months
  var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
  anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
  adjust=(b-anchor)/(anchor-anchor2);}else {anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
  adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
  return -(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true,m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
  if(utc){return this.toDate().toISOString();}else {return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
  	     * Return a human readable representation of a moment that can
  	     * also be evaluated to get a new moment which is the same
  	     *
  	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
  	     */function inspect(){if(!this.isValid()){return 'moment.invalid(/* '+this._i+' */)';}var func='moment',zone='',prefix,year,datetime,suffix;if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}prefix='['+func+'("]';year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';datetime='-MM-DD[T]HH:mm:ss.SSS';suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else {return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else {return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else {newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else {return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000,MS_PER_MINUTE=60*MS_PER_SECOND,MS_PER_HOUR=60*MS_PER_MINUTE,MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend,divisor){return (dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return new Date(y+400,m,d)-MS_PER_400_YEARS;}else {return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
  if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
  return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else {return Date.UTC(y,m,d);}}function startOf(units){var time,startOfDate;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time,startOfDate;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return [m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return {years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
  return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return {input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}addFormatToken('N',0,0,'eraAbbr');addFormatToken('NN',0,0,'eraAbbr');addFormatToken('NNN',0,0,'eraAbbr');addFormatToken('NNNN',0,0,'eraName');addFormatToken('NNNNN',0,0,'eraNarrow');addFormatToken('y',['y',1],'yo','eraYear');addFormatToken('y',['yy',2],0,'eraYear');addFormatToken('y',['yyy',3],0,'eraYear');addFormatToken('y',['yyyy',4],0,'eraYear');addRegexToken('N',matchEraAbbr);addRegexToken('NN',matchEraAbbr);addRegexToken('NNN',matchEraAbbr);addRegexToken('NNNN',matchEraName);addRegexToken('NNNNN',matchEraNarrow);addParseToken(['N','NN','NNN','NNNN','NNNNN'],function(input,array,config,token){var era=config._locale.erasParse(input,token,config._strict);if(era){getParsingFlags(config).era=era;}else {getParsingFlags(config).invalidEra=input;}});addRegexToken('y',matchUnsigned);addRegexToken('yy',matchUnsigned);addRegexToken('yyy',matchUnsigned);addRegexToken('yyyy',matchUnsigned);addRegexToken('yo',matchEraYearOrdinal);addParseToken(['y','yy','yyy','yyyy'],YEAR);addParseToken(['yo'],function(input,array,config,token){var match;if(config._locale._eraYearOrdinalRegex){match=input.match(config._locale._eraYearOrdinalRegex);}if(config._locale.eraYearOrdinalParse){array[YEAR]=config._locale.eraYearOrdinalParse(input,match);}else {array[YEAR]=parseInt(input,10);}});function localeEras(m,format){var i,l,date,eras=this._eras||getLocale('en')._eras;for(i=0,l=eras.length;i<l;++i){switch(_typeof(eras[i].since)){case'string':// truncate time
  date=hooks(eras[i].since).startOf('day');eras[i].since=date.valueOf();break;}switch(_typeof(eras[i].until)){case'undefined':eras[i].until=+Infinity;break;case'string':// truncate time
  date=hooks(eras[i].until).startOf('day').valueOf();eras[i].until=date.valueOf();break;}}return eras;}function localeErasParse(eraName,format,strict){var i,l,eras=this.eras(),name,abbr,narrow;eraName=eraName.toUpperCase();for(i=0,l=eras.length;i<l;++i){name=eras[i].name.toUpperCase();abbr=eras[i].abbr.toUpperCase();narrow=eras[i].narrow.toUpperCase();if(strict){switch(format){case'N':case'NN':case'NNN':if(abbr===eraName){return eras[i];}break;case'NNNN':if(name===eraName){return eras[i];}break;case'NNNNN':if(narrow===eraName){return eras[i];}break;}}else if([name,abbr,narrow].indexOf(eraName)>=0){return eras[i];}}}function localeErasConvertYear(era,year){var dir=era.since<=era.until?+1:-1;if(year===undefined){return hooks(era.since).year();}else {return hooks(era.since).year()+(year-era.offset)*dir;}}function getEraName(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
  val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].name;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].name;}}return '';}function getEraNarrow(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
  val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].narrow;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].narrow;}}return '';}function getEraAbbr(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
  val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].abbr;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].abbr;}}return '';}function getEraYear(){var i,l,dir,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){dir=eras[i].since<=eras[i].until?+1:-1;// truncate time
  val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until||eras[i].until<=val&&val<=eras[i].since){return (this.year()-hooks(eras[i].since).year())*dir+eras[i].offset;}}return this.year();}function erasNameRegex(isStrict){if(!hasOwnProp(this,'_erasNameRegex')){computeErasParse.call(this);}return isStrict?this._erasNameRegex:this._erasRegex;}function erasAbbrRegex(isStrict){if(!hasOwnProp(this,'_erasAbbrRegex')){computeErasParse.call(this);}return isStrict?this._erasAbbrRegex:this._erasRegex;}function erasNarrowRegex(isStrict){if(!hasOwnProp(this,'_erasNarrowRegex')){computeErasParse.call(this);}return isStrict?this._erasNarrowRegex:this._erasRegex;}function matchEraAbbr(isStrict,locale){return locale.erasAbbrRegex(isStrict);}function matchEraName(isStrict,locale){return locale.erasNameRegex(isStrict);}function matchEraNarrow(isStrict,locale){return locale.erasNarrowRegex(isStrict);}function matchEraYearOrdinal(isStrict,locale){return locale._eraYearOrdinalRegex||matchUnsigned;}function computeErasParse(){var abbrPieces=[],namePieces=[],narrowPieces=[],mixedPieces=[],i,l,eras=this.eras();for(i=0,l=eras.length;i<l;++i){namePieces.push(regexEscape(eras[i].name));abbrPieces.push(regexEscape(eras[i].abbr));narrowPieces.push(regexEscape(eras[i].narrow));mixedPieces.push(regexEscape(eras[i].name));mixedPieces.push(regexEscape(eras[i].abbr));mixedPieces.push(regexEscape(eras[i].narrow));}this._erasRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._erasNameRegex=new RegExp('^('+namePieces.join('|')+')','i');this._erasAbbrRegex=new RegExp('^('+abbrPieces.join('|')+')','i');this._erasNarrowRegex=new RegExp('^('+narrowPieces.join('|')+')','i');}// FORMATTING
  addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
  addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
  addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
  addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
  function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getISOWeeksInISOWeekYear(){return weeksInYear(this.isoWeekYear(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getWeeksInWeekYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.weekYear(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else {weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
  addFormatToken('Q',0,'Qo','quarter');// ALIASES
  addUnitAlias('quarter','Q');// PRIORITY
  addUnitPriority('quarter',7);// PARSING
  addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
  function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
  addFormatToken('D',['DD',2],'Do','date');// ALIASES
  addUnitAlias('date','D');// PRIORITY
  addUnitPriority('date',9);// PARSING
  addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
  return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
  var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
  addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
  addUnitAlias('dayOfYear','DDD');// PRIORITY
  addUnitPriority('dayOfYear',4);// PARSING
  addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
  // MOMENTS
  function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
  addFormatToken('m',['mm',2],0,'minute');// ALIASES
  addUnitAlias('minute','m');// PRIORITY
  addUnitPriority('minute',14);// PARSING
  addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
  var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
  addFormatToken('s',['ss',2],0,'second');// ALIASES
  addUnitAlias('second','s');// PRIORITY
  addUnitPriority('second',15);// PARSING
  addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
  var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
  addFormatToken('S',0,0,function(){return ~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return ~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
  addUnitAlias('millisecond','ms');// PRIORITY
  addUnitPriority('millisecond',16);// PARSING
  addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token,getSetMillisecond;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
  addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
  function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;if(typeof Symbol!=='undefined'&&Symbol.for!=null){proto[Symbol.for('nodejs.util.inspect.custom')]=function(){return 'Moment<'+this.format()+'>';};}proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.eraName=getEraName;proto.eraNarrow=getEraNarrow;proto.eraAbbr=getEraAbbr;proto.eraYear=getEraYear;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.weeksInWeekYear=getWeeksInWeekYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.isoWeeksInISOWeekYear=getISOWeeksInISOWeekYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.eras=localeEras;proto$1.erasParse=localeErasParse;proto$1.erasConvertYear=localeErasConvertYear;proto$1.erasAbbrRegex=erasAbbrRegex;proto$1.erasNameRegex=erasNameRegex;proto$1.erasNarrowRegex=erasNarrowRegex;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale(),utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i,out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else {format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0,i,out=[];if(index!=null){return get$1(format,(index+shift)%7,field,'day');}for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{eras:[{since:'0001-01-01',until:+Infinity,offset:1,name:'Anno Domini',narrow:'AD',abbr:'AD'},{since:'0000-12-31',until:-Infinity,offset:1,name:'Before Christ',narrow:'BC',abbr:'BC'}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function ordinal(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
  hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else {return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data,seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
  // check: https://github.com/moment/moment/issues/2166
  if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
  // examples of what that means.
  data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
  monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
  years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
  // 400 years have 12 months === 4800
  return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
  return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days,months,milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else {// handle milliseconds separately because of floating point math errors (issue #1867)
  days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
  case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
  function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms'),asSeconds=makeAs('s'),asMinutes=makeAs('m'),asHours=makeAs('h'),asDays=makeAs('d'),asWeeks=makeAs('w'),asMonths=makeAs('M'),asQuarters=makeAs('Q'),asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds'),seconds=makeGetter('seconds'),minutes=makeGetter('minutes'),hours=makeGetter('hours'),days=makeGetter('days'),months=makeGetter('months'),years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round,thresholds={ss:44,// a few seconds to seconds
  s:45,// seconds to minute
  m:45,// minutes to hour
  h:22,// hours to day
  d:26,// days to month/week
  w:null,// weeks to month
  M:11// months to year
  };// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,thresholds,locale){var duration=createDuration(posNegDuration).abs(),seconds=round(duration.as('s')),minutes=round(duration.as('m')),hours=round(duration.as('h')),days=round(duration.as('d')),months=round(duration.as('M')),weeks=round(duration.as('w')),years=round(duration.as('y')),a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days];if(thresholds.w!=null){a=a||weeks<=1&&['w']||weeks<thresholds.w&&['ww',weeks];}a=a||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(argWithSuffix,argThresholds){if(!this.isValid()){return this.localeData().invalidDate();}var withSuffix=false,th=thresholds,locale,output;if(_typeof(argWithSuffix)==='object'){argThresholds=argWithSuffix;argWithSuffix=false;}if(typeof argWithSuffix==='boolean'){withSuffix=argWithSuffix;}if(_typeof(argThresholds)==='object'){th=Object.assign({},thresholds,argThresholds);if(argThresholds.s!=null&&argThresholds.ss==null){th.ss=argThresholds.s-1;}}locale=this.localeData();output=relativeTime$1(this,!withSuffix,th,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return (x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
  //  * milliseconds bubble up until they become hours
  //  * days do not bubble at all
  //  * months bubble up until they become years
  // This is because there is no context-free conversion between hours and days
  // (think of clock changes)
  // and also not between days and months (28-31 days per month)
  if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000,days=abs$1(this._days),months=abs$1(this._months),minutes,hours,years,s,total=this.asSeconds(),totalSign,ymSign,daysSign,hmsSign;if(!total){// this is the same as C#'s (Noda) and python (isodate)...
  // but not other JS (goog.date)
  return 'P0D';}// 3600 seconds -> 60 minutes -> 1 hour
  minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
  years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
  s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';totalSign=total<0?'-':'';ymSign=sign(this._months)!==sign(total)?'-':'';daysSign=sign(this._days)!==sign(total)?'-':'';hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(years?ymSign+years+'Y':'')+(months?ymSign+months+'M':'')+(days?daysSign+days+'D':'')+(hours||minutes||seconds?'T':'')+(hours?hmsSign+hours+'H':'')+(minutes?hmsSign+minutes+'M':'')+(seconds?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// FORMATTING
  addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
  addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});//! moment.js
  hooks.version='2.29.3';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
  DATE:'YYYY-MM-DD',// <input type="date" />
  TIME:'HH:mm',// <input type="time" />
  TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
  TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
  WEEK:'GGGG-[W]WW',// <input type="week" />
  MONTH:'YYYY-MM'// <input type="month" />
  };return hooks;});})(moment$1);var moment = moment$1.exports;

  var SelectDay=function SelectDay(props){// const {} = props;
  var currentDay=props.day||moment().date();// new Date().getDate();
  var month=props.month||moment().month()+1;// new Date().getMonth() + 1
  var id=v4();// uniqueId(); // id-hash
  var getDaysInMonth=function getDaysInMonth(month){var y=moment().year();// new Date().getFullYear();
  var m=month<10?"0".concat(month):month;var days=moment("".concat(y,"-").concat(m),'YYYY-MM').daysInMonth();// => 31;
  return lodash.exports.range(1,days+1);//=> [1,...,31]
  };var days=getDaysInMonth(month);var handleChange=function handleChange(e){var value=Number(e.currentTarget.value);props.onHandleChangeDay(value);};return/*#__PURE__*/jsxRuntime.exports.jsxs("div",{className:"m-select-day mb-3",children:[/*#__PURE__*/jsxRuntime.exports.jsx("label",{htmlFor:"select-day-".concat(id),className:"form-label",children:"Day"}),/*#__PURE__*/jsxRuntime.exports.jsx("select",{className:"form-select",name:"day",id:"select-day-".concat(id),value:currentDay,onChange:handleChange,children:days.map(function(day){return/*#__PURE__*/jsxRuntime.exports.jsx("option",{value:day,children:day<10?"0".concat(day):day},"day-".concat(day));})})]});};

  (function(module,exports){//! moment.js locale configuration
  (function(global,factory){typeof commonjsRequire==='function'?factory(moment$1.exports):factory(global.moment);})(commonjsGlobal,function(moment){function processRelativeTime(number,withoutSuffix,key,isFuture){var format={m:['eine Minute','einer Minute'],h:['eine Stunde','einer Stunde'],d:['ein Tag','einem Tag'],dd:[number+' Tage',number+' Tagen'],w:['eine Woche','einer Woche'],M:['ein Monat','einem Monat'],MM:[number+' Monate',number+' Monaten'],y:['ein Jahr','einem Jahr'],yy:[number+' Jahre',number+' Jahren']};return withoutSuffix?format[key][0]:format[key][1];}var de=moment.defineLocale('de',{months:'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),monthsShort:'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),monthsParseExact:true,weekdays:'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),weekdaysShort:'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),weekdaysMin:'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),weekdaysParseExact:true,longDateFormat:{LT:'HH:mm',LTS:'HH:mm:ss',L:'DD.MM.YYYY',LL:'D. MMMM YYYY',LLL:'D. MMMM YYYY HH:mm',LLLL:'dddd, D. MMMM YYYY HH:mm'},calendar:{sameDay:'[heute um] LT [Uhr]',sameElse:'L',nextDay:'[morgen um] LT [Uhr]',nextWeek:'dddd [um] LT [Uhr]',lastDay:'[gestern um] LT [Uhr]',lastWeek:'[letzten] dddd [um] LT [Uhr]'},relativeTime:{future:'in %s',past:'vor %s',s:'ein paar Sekunden',ss:'%d Sekunden',m:processRelativeTime,mm:'%d Minuten',h:processRelativeTime,hh:'%d Stunden',d:processRelativeTime,dd:processRelativeTime,w:processRelativeTime,ww:'%d Wochen',M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:'%d.',week:{dow:1,// Monday is the first day of the week.
  doy:4// The week that contains Jan 4th is the first week of the year.
  }});return de;});})();

  (function(module,exports){//! moment.js locale configuration
  (function(global,factory){typeof commonjsRequire==='function'?factory(moment$1.exports):factory(global.moment);})(commonjsGlobal,function(moment){var monthsStrictRegex=/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,monthsShortStrictRegex=/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,monthsRegex=/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,monthsParse=[/^janv/i,/^févr/i,/^mars/i,/^avr/i,/^mai/i,/^juin/i,/^juil/i,/^août/i,/^sept/i,/^oct/i,/^nov/i,/^déc/i];var fr=moment.defineLocale('fr',{months:'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),monthsShort:'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:monthsStrictRegex,monthsShortStrictRegex:monthsShortStrictRegex,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),weekdaysShort:'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),weekdaysMin:'di_lu_ma_me_je_ve_sa'.split('_'),weekdaysParseExact:true,longDateFormat:{LT:'HH:mm',LTS:'HH:mm:ss',L:'DD/MM/YYYY',LL:'D MMMM YYYY',LLL:'D MMMM YYYY HH:mm',LLLL:'dddd D MMMM YYYY HH:mm'},calendar:{sameDay:'[Aujourd’hui à] LT',nextDay:'[Demain à] LT',nextWeek:'dddd [à] LT',lastDay:'[Hier à] LT',lastWeek:'dddd [dernier à] LT',sameElse:'L'},relativeTime:{future:'dans %s',past:'il y a %s',s:'quelques secondes',ss:'%d secondes',m:'une minute',mm:'%d minutes',h:'une heure',hh:'%d heures',d:'un jour',dd:'%d jours',w:'une semaine',ww:'%d semaines',M:'un mois',MM:'%d mois',y:'un an',yy:'%d ans'},dayOfMonthOrdinalParse:/\d{1,2}(er|)/,ordinal:function ordinal(number,period){switch(period){// TODO: Return 'e' when day of month > 1. Move this case inside
  // block for masculine words below.
  // See https://github.com/moment/moment/issues/3375
  case'D':return number+(number===1?'er':'');// Words with masculine grammatical gender: mois, trimestre, jour
  default:case'M':case'Q':case'DDD':case'd':return number+(number===1?'er':'e');// Words with feminine grammatical gender: semaine
  case'w':case'W':return number+(number===1?'re':'e');}},week:{dow:1,// Monday is the first day of the week.
  doy:4// The week that contains Jan 4th is the first week of the year.
  }});return fr;});})();

  (function(module,exports){//! moment.js locale configuration
  (function(global,factory){typeof commonjsRequire==='function'?factory(moment$1.exports):factory(global.moment);})(commonjsGlobal,function(moment){var monthsShortDot='ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),_monthsShort='ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),monthsParse=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],monthsRegex=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;var es=moment.defineLocale('es',{months:'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),monthsShort:function monthsShort(m,format){if(!m){return monthsShortDot;}else if(/-MMM-/.test(format)){return _monthsShort[m.month()];}else {return monthsShortDot[m.month()];}},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),weekdaysShort:'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),weekdaysMin:'do_lu_ma_mi_ju_vi_sá'.split('_'),weekdaysParseExact:true,longDateFormat:{LT:'H:mm',LTS:'H:mm:ss',L:'DD/MM/YYYY',LL:'D [de] MMMM [de] YYYY',LLL:'D [de] MMMM [de] YYYY H:mm',LLLL:'dddd, D [de] MMMM [de] YYYY H:mm'},calendar:{sameDay:function sameDay(){return '[hoy a la'+(this.hours()!==1?'s':'')+'] LT';},nextDay:function nextDay(){return '[mañana a la'+(this.hours()!==1?'s':'')+'] LT';},nextWeek:function nextWeek(){return 'dddd [a la'+(this.hours()!==1?'s':'')+'] LT';},lastDay:function lastDay(){return '[ayer a la'+(this.hours()!==1?'s':'')+'] LT';},lastWeek:function lastWeek(){return '[el] dddd [pasado a la'+(this.hours()!==1?'s':'')+'] LT';},sameElse:'L'},relativeTime:{future:'en %s',past:'hace %s',s:'unos segundos',ss:'%d segundos',m:'un minuto',mm:'%d minutos',h:'una hora',hh:'%d horas',d:'un día',dd:'%d días',w:'una semana',ww:'%d semanas',M:'un mes',MM:'%d meses',y:'un año',yy:'%d años'},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:'%dº',week:{dow:1,// Monday is the first day of the week.
  doy:4// The week that contains Jan 4th is the first week of the year.
  },invalidDate:'Fecha inválida'});return es;});})();

  var SelectMonth=function SelectMonth(props){// const {} = props;
  var currentMonth=props.month||moment().month()+1;// new Date().getMonth() + 1;
  var id=v4();// uniqueId(); // id-hash
  moment.locale(props.lang||'en');var months=moment.months();//=>  ['January',...]
  var handleChange=function handleChange(e){var value=Number(e.currentTarget.value);props.onHandleChangeMonth(value);};return/*#__PURE__*/jsxRuntime.exports.jsxs("div",{className:"m-select-month mb-3",children:[/*#__PURE__*/jsxRuntime.exports.jsx("label",{htmlFor:"select-month-".concat(id),className:"form-label",children:"Month"}),/*#__PURE__*/jsxRuntime.exports.jsx("select",{className:"form-select",name:"month",id:"select-month-".concat(id),value:currentMonth,onChange:handleChange,children:months.map(function(month,idx){return/*#__PURE__*/jsxRuntime.exports.jsx("option",{value:idx+1,children:month},"month-".concat(idx));})})]});};

  var axios$3 = {exports: {}};

  var axios$2 = {exports: {}};

  var bind$2=function bind(fn,thisArg){return function wrap(){var args=new Array(arguments.length);for(var i=0;i<args.length;i++){args[i]=arguments[i];}return fn.apply(thisArg,args);};};

  var bind$1=bind$2;// utils is a library of generic helper functions non-specific to axios
  var toString$4=Object.prototype.toString;// eslint-disable-next-line func-names
  var kindOf=function(cache){// eslint-disable-next-line func-names
  return function(thing){var str=toString$4.call(thing);return cache[str]||(cache[str]=str.slice(8,-1).toLowerCase());};}(Object.create(null));function kindOfTest(type){type=type.toLowerCase();return function isKindOf(thing){return kindOf(thing)===type;};}/**
   * Determine if a value is an Array
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Array, otherwise false
   */function isArray$2(val){return Array.isArray(val);}/**
   * Determine if a value is undefined
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if the value is undefined, otherwise false
   */function isUndefined(val){return typeof val==='undefined';}/**
   * Determine if a value is a Buffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Buffer, otherwise false
   */function isBuffer(val){return val!==null&&!isUndefined(val)&&val.constructor!==null&&!isUndefined(val.constructor)&&typeof val.constructor.isBuffer==='function'&&val.constructor.isBuffer(val);}/**
   * Determine if a value is an ArrayBuffer
   *
   * @function
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an ArrayBuffer, otherwise false
   */var isArrayBuffer=kindOfTest('ArrayBuffer');/**
   * Determine if a value is a view on an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
   */function isArrayBufferView(val){var result;if(typeof ArrayBuffer!=='undefined'&&ArrayBuffer.isView){result=ArrayBuffer.isView(val);}else {result=val&&val.buffer&&isArrayBuffer(val.buffer);}return result;}/**
   * Determine if a value is a String
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a String, otherwise false
   */function isString(val){return typeof val==='string';}/**
   * Determine if a value is a Number
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Number, otherwise false
   */function isNumber(val){return typeof val==='number';}/**
   * Determine if a value is an Object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Object, otherwise false
   */function isObject$3(val){return val!==null&&_typeof(val)==='object';}/**
   * Determine if a value is a plain Object
   *
   * @param {Object} val The value to test
   * @return {boolean} True if value is a plain Object, otherwise false
   */function isPlainObject(val){if(kindOf(val)!=='object'){return false;}var prototype=Object.getPrototypeOf(val);return prototype===null||prototype===Object.prototype;}/**
   * Determine if a value is a Date
   *
   * @function
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Date, otherwise false
   */var isDate=kindOfTest('Date');/**
   * Determine if a value is a File
   *
   * @function
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a File, otherwise false
   */var isFile=kindOfTest('File');/**
   * Determine if a value is a Blob
   *
   * @function
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Blob, otherwise false
   */var isBlob=kindOfTest('Blob');/**
   * Determine if a value is a FileList
   *
   * @function
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a File, otherwise false
   */var isFileList=kindOfTest('FileList');/**
   * Determine if a value is a Function
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Function, otherwise false
   */function isFunction(val){return toString$4.call(val)==='[object Function]';}/**
   * Determine if a value is a Stream
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Stream, otherwise false
   */function isStream(val){return isObject$3(val)&&isFunction(val.pipe);}/**
   * Determine if a value is a FormData
   *
   * @param {Object} thing The value to test
   * @returns {boolean} True if value is an FormData, otherwise false
   */function isFormData(thing){var pattern='[object FormData]';return thing&&(typeof FormData==='function'&&thing instanceof FormData||toString$4.call(thing)===pattern||isFunction(thing.toString)&&thing.toString()===pattern);}/**
   * Determine if a value is a URLSearchParams object
   * @function
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a URLSearchParams object, otherwise false
   */var isURLSearchParams=kindOfTest('URLSearchParams');/**
   * Trim excess whitespace off the beginning and end of a string
   *
   * @param {String} str The String to trim
   * @returns {String} The String freed of excess whitespace
   */function trim(str){return str.trim?str.trim():str.replace(/^\s+|\s+$/g,'');}/**
   * Determine if we're running in a standard browser environment
   *
   * This allows axios to run in a web worker, and react-native.
   * Both environments support XMLHttpRequest, but not fully standard globals.
   *
   * web workers:
   *  typeof window -> undefined
   *  typeof document -> undefined
   *
   * react-native:
   *  navigator.product -> 'ReactNative'
   * nativescript
   *  navigator.product -> 'NativeScript' or 'NS'
   */function isStandardBrowserEnv(){if(typeof navigator!=='undefined'&&(navigator.product==='ReactNative'||navigator.product==='NativeScript'||navigator.product==='NS')){return false;}return typeof window!=='undefined'&&typeof document!=='undefined';}/**
   * Iterate over an Array or an Object invoking a function for each item.
   *
   * If `obj` is an Array callback will be called passing
   * the value, index, and complete array for each item.
   *
   * If 'obj' is an Object callback will be called passing
   * the value, key, and complete object for each property.
   *
   * @param {Object|Array} obj The object to iterate
   * @param {Function} fn The callback to invoke for each item
   */function forEach(obj,fn){// Don't bother if no value provided
  if(obj===null||typeof obj==='undefined'){return;}// Force an array if not already something iterable
  if(_typeof(obj)!=='object'){/*eslint no-param-reassign:0*/obj=[obj];}if(isArray$2(obj)){// Iterate over array values
  for(var i=0,l=obj.length;i<l;i++){fn.call(null,obj[i],i,obj);}}else {// Iterate over object keys
  for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){fn.call(null,obj[key],key,obj);}}}}/**
   * Accepts varargs expecting each argument to be an object, then
   * immutably merges the properties of each object and returns result.
   *
   * When multiple objects contain the same key the later object in
   * the arguments list will take precedence.
   *
   * Example:
   *
   * ```js
   * var result = merge({foo: 123}, {foo: 456});
   * console.log(result.foo); // outputs 456
   * ```
   *
   * @param {Object} obj1 Object to merge
   * @returns {Object} Result of all merge properties
   */function/* obj1, obj2, obj3, ... */merge(){var result={};function assignValue(val,key){if(isPlainObject(result[key])&&isPlainObject(val)){result[key]=merge(result[key],val);}else if(isPlainObject(val)){result[key]=merge({},val);}else if(isArray$2(val)){result[key]=val.slice();}else {result[key]=val;}}for(var i=0,l=arguments.length;i<l;i++){forEach(arguments[i],assignValue);}return result;}/**
   * Extends object a by mutably adding to it the properties of object b.
   *
   * @param {Object} a The object to be extended
   * @param {Object} b The object to copy properties from
   * @param {Object} thisArg The object to bind function to
   * @return {Object} The resulting value of object a
   */function extend(a,b,thisArg){forEach(b,function assignValue(val,key){if(thisArg&&typeof val==='function'){a[key]=bind$1(val,thisArg);}else {a[key]=val;}});return a;}/**
   * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
   *
   * @param {string} content with BOM
   * @return {string} content value without BOM
   */function stripBOM(content){if(content.charCodeAt(0)===0xFEFF){content=content.slice(1);}return content;}/**
   * Inherit the prototype methods from one constructor into another
   * @param {function} constructor
   * @param {function} superConstructor
   * @param {object} [props]
   * @param {object} [descriptors]
   */function inherits(constructor,superConstructor,props,descriptors){constructor.prototype=Object.create(superConstructor.prototype,descriptors);constructor.prototype.constructor=constructor;props&&Object.assign(constructor.prototype,props);}/**
   * Resolve object with deep prototype chain to a flat object
   * @param {Object} sourceObj source object
   * @param {Object} [destObj]
   * @param {Function} [filter]
   * @returns {Object}
   */function toFlatObject(sourceObj,destObj,filter){var props;var i;var prop;var merged={};destObj=destObj||{};do{props=Object.getOwnPropertyNames(sourceObj);i=props.length;while(i-->0){prop=props[i];if(!merged[prop]){destObj[prop]=sourceObj[prop];merged[prop]=true;}}sourceObj=Object.getPrototypeOf(sourceObj);}while(sourceObj&&(!filter||filter(sourceObj,destObj))&&sourceObj!==Object.prototype);return destObj;}/*
   * determines whether a string ends with the characters of a specified string
   * @param {String} str
   * @param {String} searchString
   * @param {Number} [position= 0]
   * @returns {boolean}
   */function endsWith(str,searchString,position){str=String(str);if(position===undefined||position>str.length){position=str.length;}position-=searchString.length;var lastIndex=str.indexOf(searchString,position);return lastIndex!==-1&&lastIndex===position;}/**
   * Returns new array from array like object
   * @param {*} [thing]
   * @returns {Array}
   */function toArray(thing){if(!thing)return null;var i=thing.length;if(isUndefined(i))return null;var arr=new Array(i);while(i-->0){arr[i]=thing[i];}return arr;}// eslint-disable-next-line func-names
  var isTypedArray=function(TypedArray){// eslint-disable-next-line func-names
  return function(thing){return TypedArray&&thing instanceof TypedArray;};}(typeof Uint8Array!=='undefined'&&Object.getPrototypeOf(Uint8Array));var utils$9={isArray:isArray$2,isArrayBuffer:isArrayBuffer,isBuffer:isBuffer,isFormData:isFormData,isArrayBufferView:isArrayBufferView,isString:isString,isNumber:isNumber,isObject:isObject$3,isPlainObject:isPlainObject,isUndefined:isUndefined,isDate:isDate,isFile:isFile,isBlob:isBlob,isFunction:isFunction,isStream:isStream,isURLSearchParams:isURLSearchParams,isStandardBrowserEnv:isStandardBrowserEnv,forEach:forEach,merge:merge,extend:extend,trim:trim,stripBOM:stripBOM,inherits:inherits,toFlatObject:toFlatObject,kindOf:kindOf,kindOfTest:kindOfTest,endsWith:endsWith,toArray:toArray,isTypedArray:isTypedArray,isFileList:isFileList};

  var utils$8=utils$9;function encode(val){return encodeURIComponent(val).replace(/%3A/gi,':').replace(/%24/g,'$').replace(/%2C/gi,',').replace(/%20/g,'+').replace(/%5B/gi,'[').replace(/%5D/gi,']');}/**
   * Build a URL by appending params to the end
   *
   * @param {string} url The base of the url (e.g., http://www.google.com)
   * @param {object} [params] The params to be appended
   * @returns {string} The formatted url
   */var buildURL$1=function buildURL(url,params,paramsSerializer){/*eslint no-param-reassign:0*/if(!params){return url;}var serializedParams;if(paramsSerializer){serializedParams=paramsSerializer(params);}else if(utils$8.isURLSearchParams(params)){serializedParams=params.toString();}else {var parts=[];utils$8.forEach(params,function serialize(val,key){if(val===null||typeof val==='undefined'){return;}if(utils$8.isArray(val)){key=key+'[]';}else {val=[val];}utils$8.forEach(val,function parseValue(v){if(utils$8.isDate(v)){v=v.toISOString();}else if(utils$8.isObject(v)){v=JSON.stringify(v);}parts.push(encode(key)+'='+encode(v));});});serializedParams=parts.join('&');}if(serializedParams){var hashmarkIndex=url.indexOf('#');if(hashmarkIndex!==-1){url=url.slice(0,hashmarkIndex);}url+=(url.indexOf('?')===-1?'?':'&')+serializedParams;}return url;};

  var utils$7=utils$9;function InterceptorManager$1(){this.handlers=[];}/**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */InterceptorManager$1.prototype.use=function use(fulfilled,rejected,options){this.handlers.push({fulfilled:fulfilled,rejected:rejected,synchronous:options?options.synchronous:false,runWhen:options?options.runWhen:null});return this.handlers.length-1;};/**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   */InterceptorManager$1.prototype.eject=function eject(id){if(this.handlers[id]){this.handlers[id]=null;}};/**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   */InterceptorManager$1.prototype.forEach=function forEach(fn){utils$7.forEach(this.handlers,function forEachHandler(h){if(h!==null){fn(h);}});};var InterceptorManager_1=InterceptorManager$1;

  var utils$6=utils$9;var normalizeHeaderName$1=function normalizeHeaderName(headers,normalizedName){utils$6.forEach(headers,function processHeader(value,name){if(name!==normalizedName&&name.toUpperCase()===normalizedName.toUpperCase()){headers[normalizedName]=value;delete headers[name];}});};

  var AxiosError_1;var hasRequiredAxiosError;function requireAxiosError(){if(hasRequiredAxiosError)return AxiosError_1;hasRequiredAxiosError=1;var utils=utils$9;/**
  	 * Create an Error with the specified message, config, error code, request and response.
  	 *
  	 * @param {string} message The error message.
  	 * @param {string} [code] The error code (for example, 'ECONNABORTED').
  	 * @param {Object} [config] The config.
  	 * @param {Object} [request] The request.
  	 * @param {Object} [response] The response.
  	 * @returns {Error} The created error.
  	 */function AxiosError(message,code,config,request,response){Error.call(this);this.message=message;this.name='AxiosError';code&&(this.code=code);config&&(this.config=config);request&&(this.request=request);response&&(this.response=response);}utils.inherits(AxiosError,Error,{toJSON:function toJSON(){return {// Standard
  message:this.message,name:this.name,// Microsoft
  description:this.description,number:this.number,// Mozilla
  fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,// Axios
  config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null};}});var prototype=AxiosError.prototype;var descriptors={};['ERR_BAD_OPTION_VALUE','ERR_BAD_OPTION','ECONNABORTED','ETIMEDOUT','ERR_NETWORK','ERR_FR_TOO_MANY_REDIRECTS','ERR_DEPRECATED','ERR_BAD_RESPONSE','ERR_BAD_REQUEST','ERR_CANCELED'// eslint-disable-next-line func-names
  ].forEach(function(code){descriptors[code]={value:code};});Object.defineProperties(AxiosError,descriptors);Object.defineProperty(prototype,'isAxiosError',{value:true});// eslint-disable-next-line func-names
  AxiosError.from=function(error,code,config,request,response,customProps){var axiosError=Object.create(prototype);utils.toFlatObject(error,axiosError,function filter(obj){return obj!==Error.prototype;});AxiosError.call(axiosError,error.message,code,config,request,response);axiosError.name=error.name;customProps&&Object.assign(axiosError,customProps);return axiosError;};AxiosError_1=AxiosError;return AxiosError_1;}

  var transitional={silentJSONParsing:true,forcedJSONParsing:true,clarifyTimeoutError:false};

  var toFormData_1;var hasRequiredToFormData;function requireToFormData(){if(hasRequiredToFormData)return toFormData_1;hasRequiredToFormData=1;var utils=utils$9;/**
  	 * Convert a data object to FormData
  	 * @param {Object} obj
  	 * @param {?Object} [formData]
  	 * @returns {Object}
  	 **/function toFormData(obj,formData){// eslint-disable-next-line no-param-reassign
  formData=formData||new FormData();var stack=[];function convertValue(value){if(value===null)return '';if(utils.isDate(value)){return value.toISOString();}if(utils.isArrayBuffer(value)||utils.isTypedArray(value)){return typeof Blob==='function'?new Blob([value]):Buffer.from(value);}return value;}function build(data,parentKey){if(utils.isPlainObject(data)||utils.isArray(data)){if(stack.indexOf(data)!==-1){throw Error('Circular reference detected in '+parentKey);}stack.push(data);utils.forEach(data,function each(value,key){if(utils.isUndefined(value))return;var fullKey=parentKey?parentKey+'.'+key:key;var arr;if(value&&!parentKey&&_typeof(value)==='object'){if(utils.endsWith(key,'{}')){// eslint-disable-next-line no-param-reassign
  value=JSON.stringify(value);}else if(utils.endsWith(key,'[]')&&(arr=utils.toArray(value))){// eslint-disable-next-line func-names
  arr.forEach(function(el){!utils.isUndefined(el)&&formData.append(fullKey,convertValue(el));});return;}}build(value,fullKey);});stack.pop();}else {formData.append(parentKey,convertValue(data));}}build(obj);return formData;}toFormData_1=toFormData;return toFormData_1;}

  var settle;var hasRequiredSettle;function requireSettle(){if(hasRequiredSettle)return settle;hasRequiredSettle=1;var AxiosError=requireAxiosError();/**
  	 * Resolve or reject a Promise based on response status.
  	 *
  	 * @param {Function} resolve A function that resolves the promise.
  	 * @param {Function} reject A function that rejects the promise.
  	 * @param {object} response The response.
  	 */settle=function settle(resolve,reject,response){var validateStatus=response.config.validateStatus;if(!response.status||!validateStatus||validateStatus(response.status)){resolve(response);}else {reject(new AxiosError('Request failed with status code '+response.status,[AxiosError.ERR_BAD_REQUEST,AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status/100)-4],response.config,response.request,response));}};return settle;}

  var cookies;var hasRequiredCookies;function requireCookies(){if(hasRequiredCookies)return cookies;hasRequiredCookies=1;var utils=utils$9;cookies=utils.isStandardBrowserEnv()?// Standard browser envs support document.cookie
  function standardBrowserEnv(){return {write:function write(name,value,expires,path,domain,secure){var cookie=[];cookie.push(name+'='+encodeURIComponent(value));if(utils.isNumber(expires)){cookie.push('expires='+new Date(expires).toGMTString());}if(utils.isString(path)){cookie.push('path='+path);}if(utils.isString(domain)){cookie.push('domain='+domain);}if(secure===true){cookie.push('secure');}document.cookie=cookie.join('; ');},read:function read(name){var match=document.cookie.match(new RegExp('(^|;\\s*)('+name+')=([^;]*)'));return match?decodeURIComponent(match[3]):null;},remove:function remove(name){this.write(name,'',Date.now()-86400000);}};}():// Non standard browser env (web workers, react-native) lack needed support.
  function nonStandardBrowserEnv(){return {write:function write(){},read:function read(){return null;},remove:function remove(){}};}();return cookies;}

  /**
   * Determines whether the specified URL is absolute
   *
   * @param {string} url The URL to test
   * @returns {boolean} True if the specified URL is absolute, otherwise false
   */var isAbsoluteURL$1=function isAbsoluteURL(url){// A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);};

  /**
   * Creates a new URL by combining the specified URLs
   *
   * @param {string} baseURL The base URL
   * @param {string} relativeURL The relative URL
   * @returns {string} The combined URL
   */var combineURLs$1=function combineURLs(baseURL,relativeURL){return relativeURL?baseURL.replace(/\/+$/,'')+'/'+relativeURL.replace(/^\/+/,''):baseURL;};

  var isAbsoluteURL=isAbsoluteURL$1;var combineURLs=combineURLs$1;/**
   * Creates a new URL by combining the baseURL with the requestedURL,
   * only when the requestedURL is not already an absolute URL.
   * If the requestURL is absolute, this function returns the requestedURL untouched.
   *
   * @param {string} baseURL The base URL
   * @param {string} requestedURL Absolute or relative URL to combine
   * @returns {string} The combined full path
   */var buildFullPath$1=function buildFullPath(baseURL,requestedURL){if(baseURL&&!isAbsoluteURL(requestedURL)){return combineURLs(baseURL,requestedURL);}return requestedURL;};

  var parseHeaders;var hasRequiredParseHeaders;function requireParseHeaders(){if(hasRequiredParseHeaders)return parseHeaders;hasRequiredParseHeaders=1;var utils=utils$9;// Headers whose duplicates are ignored by node
  // c.f. https://nodejs.org/api/http.html#http_message_headers
  var ignoreDuplicateOf=['age','authorization','content-length','content-type','etag','expires','from','host','if-modified-since','if-unmodified-since','last-modified','location','max-forwards','proxy-authorization','referer','retry-after','user-agent'];/**
  	 * Parse headers into an object
  	 *
  	 * ```
  	 * Date: Wed, 27 Aug 2014 08:58:49 GMT
  	 * Content-Type: application/json
  	 * Connection: keep-alive
  	 * Transfer-Encoding: chunked
  	 * ```
  	 *
  	 * @param {String} headers Headers needing to be parsed
  	 * @returns {Object} Headers parsed into an object
  	 */parseHeaders=function parseHeaders(headers){var parsed={};var key;var val;var i;if(!headers){return parsed;}utils.forEach(headers.split('\n'),function parser(line){i=line.indexOf(':');key=utils.trim(line.substr(0,i)).toLowerCase();val=utils.trim(line.substr(i+1));if(key){if(parsed[key]&&ignoreDuplicateOf.indexOf(key)>=0){return;}if(key==='set-cookie'){parsed[key]=(parsed[key]?parsed[key]:[]).concat([val]);}else {parsed[key]=parsed[key]?parsed[key]+', '+val:val;}}});return parsed;};return parseHeaders;}

  var isURLSameOrigin;var hasRequiredIsURLSameOrigin;function requireIsURLSameOrigin(){if(hasRequiredIsURLSameOrigin)return isURLSameOrigin;hasRequiredIsURLSameOrigin=1;var utils=utils$9;isURLSameOrigin=utils.isStandardBrowserEnv()?// Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function standardBrowserEnv(){var msie=/(msie|trident)/i.test(navigator.userAgent);var urlParsingNode=document.createElement('a');var originURL;/**
  	    * Parse a URL to discover it's components
  	    *
  	    * @param {String} url The URL to be parsed
  	    * @returns {Object}
  	    */function resolveURL(url){var href=url;if(msie){// IE needs attribute set twice to normalize properties
  urlParsingNode.setAttribute('href',href);href=urlParsingNode.href;}urlParsingNode.setAttribute('href',href);// urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
  return {href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,''):'',hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname};}originURL=resolveURL(window.location.href);/**
  	    * Determine if a URL shares the same origin as the current location
  	    *
  	    * @param {String} requestURL The URL to test
  	    * @returns {boolean} True if URL shares the same origin, otherwise false
  	    */return function isURLSameOrigin(requestURL){var parsed=utils.isString(requestURL)?resolveURL(requestURL):requestURL;return parsed.protocol===originURL.protocol&&parsed.host===originURL.host;};}():// Non standard browser envs (web workers, react-native) lack needed support.
  function nonStandardBrowserEnv(){return function isURLSameOrigin(){return true;};}();return isURLSameOrigin;}

  var CanceledError_1;var hasRequiredCanceledError;function requireCanceledError(){if(hasRequiredCanceledError)return CanceledError_1;hasRequiredCanceledError=1;var AxiosError=requireAxiosError();var utils=utils$9;/**
  	 * A `CanceledError` is an object that is thrown when an operation is canceled.
  	 *
  	 * @class
  	 * @param {string=} message The message.
  	 */function CanceledError(message){// eslint-disable-next-line no-eq-null,eqeqeq
  AxiosError.call(this,message==null?'canceled':message,AxiosError.ERR_CANCELED);this.name='CanceledError';}utils.inherits(CanceledError,AxiosError,{__CANCEL__:true});CanceledError_1=CanceledError;return CanceledError_1;}

  var parseProtocol;var hasRequiredParseProtocol;function requireParseProtocol(){if(hasRequiredParseProtocol)return parseProtocol;hasRequiredParseProtocol=1;parseProtocol=function parseProtocol(url){var match=/^([-+\w]{1,25})(:?\/\/|:)/.exec(url);return match&&match[1]||'';};return parseProtocol;}

  var xhr;var hasRequiredXhr;function requireXhr(){if(hasRequiredXhr)return xhr;hasRequiredXhr=1;var utils=utils$9;var settle=requireSettle();var cookies=requireCookies();var buildURL=buildURL$1;var buildFullPath=buildFullPath$1;var parseHeaders=requireParseHeaders();var isURLSameOrigin=requireIsURLSameOrigin();var transitionalDefaults=transitional;var AxiosError=requireAxiosError();var CanceledError=requireCanceledError();var parseProtocol=requireParseProtocol();xhr=function xhrAdapter(config){return new Promise(function dispatchXhrRequest(resolve,reject){var requestData=config.data;var requestHeaders=config.headers;var responseType=config.responseType;var onCanceled;function done(){if(config.cancelToken){config.cancelToken.unsubscribe(onCanceled);}if(config.signal){config.signal.removeEventListener('abort',onCanceled);}}if(utils.isFormData(requestData)&&utils.isStandardBrowserEnv()){delete requestHeaders['Content-Type'];// Let the browser set it
  }var request=new XMLHttpRequest();// HTTP basic authentication
  if(config.auth){var username=config.auth.username||'';var password=config.auth.password?unescape(encodeURIComponent(config.auth.password)):'';requestHeaders.Authorization='Basic '+btoa(username+':'+password);}var fullPath=buildFullPath(config.baseURL,config.url);request.open(config.method.toUpperCase(),buildURL(fullPath,config.params,config.paramsSerializer),true);// Set the request timeout in MS
  request.timeout=config.timeout;function onloadend(){if(!request){return;}// Prepare the response
  var responseHeaders='getAllResponseHeaders'in request?parseHeaders(request.getAllResponseHeaders()):null;var responseData=!responseType||responseType==='text'||responseType==='json'?request.responseText:request.response;var response={data:responseData,status:request.status,statusText:request.statusText,headers:responseHeaders,config:config,request:request};settle(function _resolve(value){resolve(value);done();},function _reject(err){reject(err);done();},response);// Clean up request
  request=null;}if('onloadend'in request){// Use onloadend if available
  request.onloadend=onloadend;}else {// Listen for ready state to emulate onloadend
  request.onreadystatechange=function handleLoad(){if(!request||request.readyState!==4){return;}// The request errored out and we didn't get a response, this will be
  // handled by onerror instead
  // With one exception: request that using file: protocol, most browsers
  // will return status as 0 even though it's a successful request
  if(request.status===0&&!(request.responseURL&&request.responseURL.indexOf('file:')===0)){return;}// readystate handler is calling before onerror or ontimeout handlers,
  // so we should call onloadend on the next 'tick'
  setTimeout(onloadend);};}// Handle browser request cancellation (as opposed to a manual cancellation)
  request.onabort=function handleAbort(){if(!request){return;}reject(new AxiosError('Request aborted',AxiosError.ECONNABORTED,config,request));// Clean up request
  request=null;};// Handle low level network errors
  request.onerror=function handleError(){// Real errors are hidden from us by the browser
  // onerror should only fire if it's a network error
  reject(new AxiosError('Network Error',AxiosError.ERR_NETWORK,config,request,request));// Clean up request
  request=null;};// Handle timeout
  request.ontimeout=function handleTimeout(){var timeoutErrorMessage=config.timeout?'timeout of '+config.timeout+'ms exceeded':'timeout exceeded';var transitional=config.transitional||transitionalDefaults;if(config.timeoutErrorMessage){timeoutErrorMessage=config.timeoutErrorMessage;}reject(new AxiosError(timeoutErrorMessage,transitional.clarifyTimeoutError?AxiosError.ETIMEDOUT:AxiosError.ECONNABORTED,config,request));// Clean up request
  request=null;};// Add xsrf header
  // This is only done if running in a standard browser environment.
  // Specifically not if we're in a web worker, or react-native.
  if(utils.isStandardBrowserEnv()){// Add xsrf header
  var xsrfValue=(config.withCredentials||isURLSameOrigin(fullPath))&&config.xsrfCookieName?cookies.read(config.xsrfCookieName):undefined;if(xsrfValue){requestHeaders[config.xsrfHeaderName]=xsrfValue;}}// Add headers to the request
  if('setRequestHeader'in request){utils.forEach(requestHeaders,function setRequestHeader(val,key){if(typeof requestData==='undefined'&&key.toLowerCase()==='content-type'){// Remove Content-Type if data is undefined
  delete requestHeaders[key];}else {// Otherwise add header to the request
  request.setRequestHeader(key,val);}});}// Add withCredentials to request if needed
  if(!utils.isUndefined(config.withCredentials)){request.withCredentials=!!config.withCredentials;}// Add responseType to request if needed
  if(responseType&&responseType!=='json'){request.responseType=config.responseType;}// Handle progress if needed
  if(typeof config.onDownloadProgress==='function'){request.addEventListener('progress',config.onDownloadProgress);}// Not all browsers support upload events
  if(typeof config.onUploadProgress==='function'&&request.upload){request.upload.addEventListener('progress',config.onUploadProgress);}if(config.cancelToken||config.signal){// Handle cancellation
  // eslint-disable-next-line func-names
  onCanceled=function onCanceled(cancel){if(!request){return;}reject(!cancel||cancel&&cancel.type?new CanceledError():cancel);request.abort();request=null;};config.cancelToken&&config.cancelToken.subscribe(onCanceled);if(config.signal){config.signal.aborted?onCanceled():config.signal.addEventListener('abort',onCanceled);}}if(!requestData){requestData=null;}var protocol=parseProtocol(fullPath);if(protocol&&['http','https','file'].indexOf(protocol)===-1){reject(new AxiosError('Unsupported protocol '+protocol+':',AxiosError.ERR_BAD_REQUEST,config));return;}// Send the request
  request.send(requestData);});};return xhr;}

  var _null;var hasRequired_null;function require_null(){if(hasRequired_null)return _null;hasRequired_null=1;// eslint-disable-next-line strict
  _null=null;return _null;}

  var utils$5=utils$9;var normalizeHeaderName=normalizeHeaderName$1;var AxiosError$1=requireAxiosError();var transitionalDefaults=transitional;var toFormData=requireToFormData();var DEFAULT_CONTENT_TYPE={'Content-Type':'application/x-www-form-urlencoded'};function setContentTypeIfUnset(headers,value){if(!utils$5.isUndefined(headers)&&utils$5.isUndefined(headers['Content-Type'])){headers['Content-Type']=value;}}function getDefaultAdapter(){var adapter;if(typeof XMLHttpRequest!=='undefined'){// For browsers use XHR adapter
  adapter=requireXhr();}else if(typeof process!=='undefined'&&Object.prototype.toString.call(process)==='[object process]'){// For node use HTTP adapter
  adapter=requireXhr();}return adapter;}function stringifySafely(rawValue,parser,encoder){if(utils$5.isString(rawValue)){try{(parser||JSON.parse)(rawValue);return utils$5.trim(rawValue);}catch(e){if(e.name!=='SyntaxError'){throw e;}}}return (encoder||JSON.stringify)(rawValue);}var defaults$3={transitional:transitionalDefaults,adapter:getDefaultAdapter(),transformRequest:[function transformRequest(data,headers){normalizeHeaderName(headers,'Accept');normalizeHeaderName(headers,'Content-Type');if(utils$5.isFormData(data)||utils$5.isArrayBuffer(data)||utils$5.isBuffer(data)||utils$5.isStream(data)||utils$5.isFile(data)||utils$5.isBlob(data)){return data;}if(utils$5.isArrayBufferView(data)){return data.buffer;}if(utils$5.isURLSearchParams(data)){setContentTypeIfUnset(headers,'application/x-www-form-urlencoded;charset=utf-8');return data.toString();}var isObjectPayload=utils$5.isObject(data);var contentType=headers&&headers['Content-Type'];var isFileList;if((isFileList=utils$5.isFileList(data))||isObjectPayload&&contentType==='multipart/form-data'){var _FormData=this.env&&this.env.FormData;return toFormData(isFileList?{'files[]':data}:data,_FormData&&new _FormData());}else if(isObjectPayload||contentType==='application/json'){setContentTypeIfUnset(headers,'application/json');return stringifySafely(data);}return data;}],transformResponse:[function transformResponse(data){var transitional=this.transitional||defaults$3.transitional;var silentJSONParsing=transitional&&transitional.silentJSONParsing;var forcedJSONParsing=transitional&&transitional.forcedJSONParsing;var strictJSONParsing=!silentJSONParsing&&this.responseType==='json';if(strictJSONParsing||forcedJSONParsing&&utils$5.isString(data)&&data.length){try{return JSON.parse(data);}catch(e){if(strictJSONParsing){if(e.name==='SyntaxError'){throw AxiosError$1.from(e,AxiosError$1.ERR_BAD_RESPONSE,this,null,this.response);}throw e;}}}return data;}],/**
     * A timeout in milliseconds to abort a request. If set to 0 (default) a
     * timeout is not created.
     */timeout:0,xsrfCookieName:'XSRF-TOKEN',xsrfHeaderName:'X-XSRF-TOKEN',maxContentLength:-1,maxBodyLength:-1,env:{FormData:require_null()},validateStatus:function validateStatus(status){return status>=200&&status<300;},headers:{common:{'Accept':'application/json, text/plain, */*'}}};utils$5.forEach(['delete','get','head'],function forEachMethodNoData(method){defaults$3.headers[method]={};});utils$5.forEach(['post','put','patch'],function forEachMethodWithData(method){defaults$3.headers[method]=utils$5.merge(DEFAULT_CONTENT_TYPE);});var defaults_1=defaults$3;

  var utils$4=utils$9;var defaults$2=defaults_1;/**
   * Transform the data for a request or a response
   *
   * @param {Object|String} data The data to be transformed
   * @param {Array} headers The headers for the request or response
   * @param {Array|Function} fns A single function or Array of functions
   * @returns {*} The resulting transformed data
   */var transformData$1=function transformData(data,headers,fns){var context=this||defaults$2;/*eslint no-param-reassign:0*/utils$4.forEach(fns,function transform(fn){data=fn.call(context,data,headers);});return data;};

  var isCancel$1;var hasRequiredIsCancel;function requireIsCancel(){if(hasRequiredIsCancel)return isCancel$1;hasRequiredIsCancel=1;isCancel$1=function isCancel(value){return !!(value&&value.__CANCEL__);};return isCancel$1;}

  var utils$3=utils$9;var transformData=transformData$1;var isCancel=requireIsCancel();var defaults$1=defaults_1;var CanceledError=requireCanceledError();/**
   * Throws a `CanceledError` if cancellation has been requested.
   */function throwIfCancellationRequested(config){if(config.cancelToken){config.cancelToken.throwIfRequested();}if(config.signal&&config.signal.aborted){throw new CanceledError();}}/**
   * Dispatch a request to the server using the configured adapter.
   *
   * @param {object} config The config that is to be used for the request
   * @returns {Promise} The Promise to be fulfilled
   */var dispatchRequest$1=function dispatchRequest(config){throwIfCancellationRequested(config);// Ensure headers exist
  config.headers=config.headers||{};// Transform request data
  config.data=transformData.call(config,config.data,config.headers,config.transformRequest);// Flatten headers
  config.headers=utils$3.merge(config.headers.common||{},config.headers[config.method]||{},config.headers);utils$3.forEach(['delete','get','head','post','put','patch','common'],function cleanHeaderConfig(method){delete config.headers[method];});var adapter=config.adapter||defaults$1.adapter;return adapter(config).then(function onAdapterResolution(response){throwIfCancellationRequested(config);// Transform response data
  response.data=transformData.call(config,response.data,response.headers,config.transformResponse);return response;},function onAdapterRejection(reason){if(!isCancel(reason)){throwIfCancellationRequested(config);// Transform response data
  if(reason&&reason.response){reason.response.data=transformData.call(config,reason.response.data,reason.response.headers,config.transformResponse);}}return Promise.reject(reason);});};

  var utils$2=utils$9;/**
   * Config-specific merge-function which creates a new config-object
   * by merging two configuration objects together.
   *
   * @param {Object} config1
   * @param {Object} config2
   * @returns {Object} New object resulting from merging config2 to config1
   */var mergeConfig$2=function mergeConfig(config1,config2){// eslint-disable-next-line no-param-reassign
  config2=config2||{};var config={};function getMergedValue(target,source){if(utils$2.isPlainObject(target)&&utils$2.isPlainObject(source)){return utils$2.merge(target,source);}else if(utils$2.isPlainObject(source)){return utils$2.merge({},source);}else if(utils$2.isArray(source)){return source.slice();}return source;}// eslint-disable-next-line consistent-return
  function mergeDeepProperties(prop){if(!utils$2.isUndefined(config2[prop])){return getMergedValue(config1[prop],config2[prop]);}else if(!utils$2.isUndefined(config1[prop])){return getMergedValue(undefined,config1[prop]);}}// eslint-disable-next-line consistent-return
  function valueFromConfig2(prop){if(!utils$2.isUndefined(config2[prop])){return getMergedValue(undefined,config2[prop]);}}// eslint-disable-next-line consistent-return
  function defaultToConfig2(prop){if(!utils$2.isUndefined(config2[prop])){return getMergedValue(undefined,config2[prop]);}else if(!utils$2.isUndefined(config1[prop])){return getMergedValue(undefined,config1[prop]);}}// eslint-disable-next-line consistent-return
  function mergeDirectKeys(prop){if(prop in config2){return getMergedValue(config1[prop],config2[prop]);}else if(prop in config1){return getMergedValue(undefined,config1[prop]);}}var mergeMap={'url':valueFromConfig2,'method':valueFromConfig2,'data':valueFromConfig2,'baseURL':defaultToConfig2,'transformRequest':defaultToConfig2,'transformResponse':defaultToConfig2,'paramsSerializer':defaultToConfig2,'timeout':defaultToConfig2,'timeoutMessage':defaultToConfig2,'withCredentials':defaultToConfig2,'adapter':defaultToConfig2,'responseType':defaultToConfig2,'xsrfCookieName':defaultToConfig2,'xsrfHeaderName':defaultToConfig2,'onUploadProgress':defaultToConfig2,'onDownloadProgress':defaultToConfig2,'decompress':defaultToConfig2,'maxContentLength':defaultToConfig2,'maxBodyLength':defaultToConfig2,'beforeRedirect':defaultToConfig2,'transport':defaultToConfig2,'httpAgent':defaultToConfig2,'httpsAgent':defaultToConfig2,'cancelToken':defaultToConfig2,'socketPath':defaultToConfig2,'responseEncoding':defaultToConfig2,'validateStatus':mergeDirectKeys};utils$2.forEach(Object.keys(config1).concat(Object.keys(config2)),function computeConfigValue(prop){var merge=mergeMap[prop]||mergeDeepProperties;var configValue=merge(prop);utils$2.isUndefined(configValue)&&merge!==mergeDirectKeys||(config[prop]=configValue);});return config;};

  var data;var hasRequiredData;function requireData(){if(hasRequiredData)return data;hasRequiredData=1;data={"version":"0.27.2"};return data;}

  var VERSION=requireData().version;var AxiosError=requireAxiosError();var validators$1={};// eslint-disable-next-line func-names
  ['object','boolean','number','function','string','symbol'].forEach(function(type,i){validators$1[type]=function validator(thing){return _typeof(thing)===type||'a'+(i<1?'n ':' ')+type;};});var deprecatedWarnings={};/**
   * Transitional option validator
   * @param {function|boolean?} validator - set to false if the transitional option has been removed
   * @param {string?} version - deprecated version / removed since version
   * @param {string?} message - some message with additional info
   * @returns {function}
   */validators$1.transitional=function transitional(validator,version,message){function formatMessage(opt,desc){return '[Axios v'+VERSION+'] Transitional option \''+opt+'\''+desc+(message?'. '+message:'');}// eslint-disable-next-line func-names
  return function(value,opt,opts){if(validator===false){throw new AxiosError(formatMessage(opt,' has been removed'+(version?' in '+version:'')),AxiosError.ERR_DEPRECATED);}if(version&&!deprecatedWarnings[opt]){deprecatedWarnings[opt]=true;// eslint-disable-next-line no-console
  console.warn(formatMessage(opt,' has been deprecated since v'+version+' and will be removed in the near future'));}return validator?validator(value,opt,opts):true;};};/**
   * Assert object's properties type
   * @param {object} options
   * @param {object} schema
   * @param {boolean?} allowUnknown
   */function assertOptions(options,schema,allowUnknown){if(_typeof(options)!=='object'){throw new AxiosError('options must be an object',AxiosError.ERR_BAD_OPTION_VALUE);}var keys=Object.keys(options);var i=keys.length;while(i-->0){var opt=keys[i];var validator=schema[opt];if(validator){var value=options[opt];var result=value===undefined||validator(value,opt,options);if(result!==true){throw new AxiosError('option '+opt+' must be '+result,AxiosError.ERR_BAD_OPTION_VALUE);}continue;}if(allowUnknown!==true){throw new AxiosError('Unknown option '+opt,AxiosError.ERR_BAD_OPTION);}}}var validator$1={assertOptions:assertOptions,validators:validators$1};

  var utils$1=utils$9;var buildURL=buildURL$1;var InterceptorManager=InterceptorManager_1;var dispatchRequest=dispatchRequest$1;var mergeConfig$1=mergeConfig$2;var buildFullPath=buildFullPath$1;var validator=validator$1;var validators=validator.validators;/**
   * Create a new instance of Axios
   *
   * @param {Object} instanceConfig The default config for the instance
   */function Axios$1(instanceConfig){this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager(),response:new InterceptorManager()};}/**
   * Dispatch a request
   *
   * @param {Object} config The config specific for this request (merged with this.defaults)
   */Axios$1.prototype.request=function request(configOrUrl,config){/*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
  if(typeof configOrUrl==='string'){config=config||{};config.url=configOrUrl;}else {config=configOrUrl||{};}config=mergeConfig$1(this.defaults,config);// Set config.method
  if(config.method){config.method=config.method.toLowerCase();}else if(this.defaults.method){config.method=this.defaults.method.toLowerCase();}else {config.method='get';}var transitional=config.transitional;if(transitional!==undefined){validator.assertOptions(transitional,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},false);}// filter out skipped interceptors
  var requestInterceptorChain=[];var synchronousRequestInterceptors=true;this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){if(typeof interceptor.runWhen==='function'&&interceptor.runWhen(config)===false){return;}synchronousRequestInterceptors=synchronousRequestInterceptors&&interceptor.synchronous;requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected);});var responseInterceptorChain=[];this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected);});var promise;if(!synchronousRequestInterceptors){var chain=[dispatchRequest,undefined];Array.prototype.unshift.apply(chain,requestInterceptorChain);chain=chain.concat(responseInterceptorChain);promise=Promise.resolve(config);while(chain.length){promise=promise.then(chain.shift(),chain.shift());}return promise;}var newConfig=config;while(requestInterceptorChain.length){var onFulfilled=requestInterceptorChain.shift();var onRejected=requestInterceptorChain.shift();try{newConfig=onFulfilled(newConfig);}catch(error){onRejected(error);break;}}try{promise=dispatchRequest(newConfig);}catch(error){return Promise.reject(error);}while(responseInterceptorChain.length){promise=promise.then(responseInterceptorChain.shift(),responseInterceptorChain.shift());}return promise;};Axios$1.prototype.getUri=function getUri(config){config=mergeConfig$1(this.defaults,config);var fullPath=buildFullPath(config.baseURL,config.url);return buildURL(fullPath,config.params,config.paramsSerializer);};// Provide aliases for supported request methods
  utils$1.forEach(['delete','get','head','options'],function forEachMethodNoData(method){/*eslint func-names:0*/Axios$1.prototype[method]=function(url,config){return this.request(mergeConfig$1(config||{},{method:method,url:url,data:(config||{}).data}));};});utils$1.forEach(['post','put','patch'],function forEachMethodWithData(method){/*eslint func-names:0*/function generateHTTPMethod(isForm){return function httpMethod(url,data,config){return this.request(mergeConfig$1(config||{},{method:method,headers:isForm?{'Content-Type':'multipart/form-data'}:{},url:url,data:data}));};}Axios$1.prototype[method]=generateHTTPMethod();Axios$1.prototype[method+'Form']=generateHTTPMethod(true);});var Axios_1=Axios$1;

  var CancelToken_1;var hasRequiredCancelToken;function requireCancelToken(){if(hasRequiredCancelToken)return CancelToken_1;hasRequiredCancelToken=1;var CanceledError=requireCanceledError();/**
  	 * A `CancelToken` is an object that can be used to request cancellation of an operation.
  	 *
  	 * @class
  	 * @param {Function} executor The executor function.
  	 */function CancelToken(executor){if(typeof executor!=='function'){throw new TypeError('executor must be a function.');}var resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve;});var token=this;// eslint-disable-next-line func-names
  this.promise.then(function(cancel){if(!token._listeners)return;var i;var l=token._listeners.length;for(i=0;i<l;i++){token._listeners[i](cancel);}token._listeners=null;});// eslint-disable-next-line func-names
  this.promise.then=function(onfulfilled){var _resolve;// eslint-disable-next-line func-names
  var promise=new Promise(function(resolve){token.subscribe(resolve);_resolve=resolve;}).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve);};return promise;};executor(function cancel(message){if(token.reason){// Cancellation has already been requested
  return;}token.reason=new CanceledError(message);resolvePromise(token.reason);});}/**
  	 * Throws a `CanceledError` if cancellation has been requested.
  	 */CancelToken.prototype.throwIfRequested=function throwIfRequested(){if(this.reason){throw this.reason;}};/**
  	 * Subscribe to the cancel signal
  	 */CancelToken.prototype.subscribe=function subscribe(listener){if(this.reason){listener(this.reason);return;}if(this._listeners){this._listeners.push(listener);}else {this._listeners=[listener];}};/**
  	 * Unsubscribe from the cancel signal
  	 */CancelToken.prototype.unsubscribe=function unsubscribe(listener){if(!this._listeners){return;}var index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1);}};/**
  	 * Returns an object that contains a new `CancelToken` and a function that, when called,
  	 * cancels the `CancelToken`.
  	 */CancelToken.source=function source(){var cancel;var token=new CancelToken(function executor(c){cancel=c;});return {token:token,cancel:cancel};};CancelToken_1=CancelToken;return CancelToken_1;}

  var spread;var hasRequiredSpread;function requireSpread(){if(hasRequiredSpread)return spread;hasRequiredSpread=1;/**
  	 * Syntactic sugar for invoking a function and expanding an array for arguments.
  	 *
  	 * Common use case would be to use `Function.prototype.apply`.
  	 *
  	 *  ```js
  	 *  function f(x, y, z) {}
  	 *  var args = [1, 2, 3];
  	 *  f.apply(null, args);
  	 *  ```
  	 *
  	 * With `spread` this example can be re-written.
  	 *
  	 *  ```js
  	 *  spread(function(x, y, z) {})([1, 2, 3]);
  	 *  ```
  	 *
  	 * @param {Function} callback
  	 * @returns {Function}
  	 */spread=function spread(callback){return function wrap(arr){return callback.apply(null,arr);};};return spread;}

  var isAxiosError;var hasRequiredIsAxiosError;function requireIsAxiosError(){if(hasRequiredIsAxiosError)return isAxiosError;hasRequiredIsAxiosError=1;var utils=utils$9;/**
  	 * Determines whether the payload is an error thrown by Axios
  	 *
  	 * @param {*} payload The value to test
  	 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
  	 */isAxiosError=function isAxiosError(payload){return utils.isObject(payload)&&payload.isAxiosError===true;};return isAxiosError;}

  var utils=utils$9;var bind=bind$2;var Axios=Axios_1;var mergeConfig=mergeConfig$2;var defaults=defaults_1;/**
   * Create an instance of Axios
   *
   * @param {Object} defaultConfig The default config for the instance
   * @return {Axios} A new instance of Axios
   */function createInstance(defaultConfig){var context=new Axios(defaultConfig);var instance=bind(Axios.prototype.request,context);// Copy axios.prototype to instance
  utils.extend(instance,Axios.prototype,context);// Copy context to instance
  utils.extend(instance,context);// Factory for creating new instances
  instance.create=function create(instanceConfig){return createInstance(mergeConfig(defaultConfig,instanceConfig));};return instance;}// Create the default instance to be exported
  var axios$1=createInstance(defaults);// Expose Axios class to allow class inheritance
  axios$1.Axios=Axios;// Expose Cancel & CancelToken
  axios$1.CanceledError=requireCanceledError();axios$1.CancelToken=requireCancelToken();axios$1.isCancel=requireIsCancel();axios$1.VERSION=requireData().version;axios$1.toFormData=requireToFormData();// Expose AxiosError class
  axios$1.AxiosError=requireAxiosError();// alias for CanceledError for backward compatibility
  axios$1.Cancel=axios$1.CanceledError;// Expose all/spread
  axios$1.all=function all(promises){return Promise.all(promises);};axios$1.spread=requireSpread();// Expose isAxiosError
  axios$1.isAxiosError=requireIsAxiosError();axios$2.exports=axios$1;// Allow use of default import syntax in TypeScript
  axios$2.exports.default=axios$1;

  (function(module){module.exports=axios$2.exports;})(axios$3);var axios = /*@__PURE__*/getDefaultExportFromCjs(axios$3.exports);

  var Horoskop=function Horoskop(props){// const {} = props;
  var _useState=react.exports.useState(moment().date()),_useState2=_slicedToArray(_useState,2),day=_useState2[0],setDay=_useState2[1];var _useState3=react.exports.useState(moment().month()+1),_useState4=_slicedToArray(_useState3,2),month=_useState4[0],setMonth=_useState4[1];var _useState5=react.exports.useState([]),_useState6=_slicedToArray(_useState5,2),signs=_useState6[0],setSigns=_useState6[1];react.exports.useEffect(function(){fetchSigns();return function(){// cleanup
  };},[]);// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function
  // const fetchSigns = async () => {
  //   const result = await axios.get('http://localhost:3000/api/signs.json');
  //   setSigns(result.data);
  // };
  var fetchSigns=function fetchSigns(){axios.get('/api/signs.json').then(function(json){return setSigns(json.data);}).catch(function(err){return console.error(err);});// fetch('http://localhost:3000/api/signs.json')
  //   .then((resp) => resp.json())
  //   .then((data) => {
  //     console.log(data);
  //     setSigns(data);
  //   })
  //   .catch((err) => console.error(err));
  };var handleChangeDay=function handleChangeDay(day){setDay(day);};var handleChangeMonth=function handleChangeMonth(month){setMonth(month);};var isSignDate=function isSignDate(opts){var from=opts.from,to=opts.to,month=opts.month,day=opts.day;var date=moment("".concat(month,"-").concat(day),'MM-DD');// Moment Date Object
  var fromDate=moment(from,"YYYY-MM-DD");var toDate=moment(to,'YYYY-MM-DD');// const isFromBeforeTo = fromDate.isBefore(toDate);
  // let result = false;
  // if (isFromBeforeTo) {
  //   result = date.isBetween(fromDate.subtract(1, 'year'), toDate) || date.isSame(fromDate) || date.isSame(toDate);
  // } else {
  //   result = date.isBetween(fromDate, toDate) || date.isSame(fromDate) || date.isSame(toDate);
  // }
  // return result;
  return date.isBetween(fromDate,toDate)||date.isSame(fromDate)||date.isSame(toDate);};var getSign=function getSign(d,m){var sign=signs.find(function(sign){return isSignDate({day:d,month:m,from:sign.fromDate,to:sign.toDate});});return sign?sign:{name:'kein valides Datum',image:'001-taurus.svg'};};var sign=getSign(day,month);console.log(sign);return/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"m-horoskop horoskop",children:/*#__PURE__*/jsxRuntime.exports.jsxs("div",{className:"container py-5",children:[/*#__PURE__*/jsxRuntime.exports.jsxs("div",{className:"row",children:[/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"col-12 col-sm-6",children:/*#__PURE__*/jsxRuntime.exports.jsx(SelectDay,{day:day,month:month,onHandleChangeDay:handleChangeDay})}),/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"col-12 col-sm-6",children:/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"m-select-month mb-3",children:/*#__PURE__*/jsxRuntime.exports.jsx(SelectMonth,{month:month,onHandleChangeMonth:handleChangeMonth})})})]}),/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"row mt-5 justify-content-center",children:/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"col-10 col-md-4",children:/*#__PURE__*/jsxRuntime.exports.jsxs("div",{className:"card",children:[/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"card-header",children:/*#__PURE__*/jsxRuntime.exports.jsx("img",{src:"../assets/img/horoskop/svg/".concat(sign.image),alt:""})}),/*#__PURE__*/jsxRuntime.exports.jsx("div",{className:"card-body",children:/*#__PURE__*/jsxRuntime.exports.jsx("h5",{className:"card-title text-center",children:sign.name})}),/*#__PURE__*/jsxRuntime.exports.jsx("ul",{className:"list-group list-group-flush",children:/*#__PURE__*/jsxRuntime.exports.jsxs("li",{className:"list-group-item text-center",children:[moment(sign.fromDate).format('DD.MM.')," - ",moment(sign.toDate).format('DD.MM.')]})})]})})})]})});};

  var HoroskopPage=function HoroskopPage(props){// === DOM & VARS ===
  var horoskopEl=createRoot(document.querySelector('#react-horoskop'));// === INIT =========
  var init=function init(){console.log('horoskop');horoskopEl.render(/*#__PURE__*/jsxRuntime.exports.jsx(jsxRuntime.exports.Fragment,{children:/*#__PURE__*/jsxRuntime.exports.jsx(Horoskop,{})}));};// === EVENTS / XHR =======
  // === FUNCTIONS ====
  init();};

  var StudentZitatePage=function StudentZitatePage(){var persons=[{id:'phil',image:'persons/phil.png',title:'Chief Phil',quotes:['"Kaffee - Pause."','"Ich brauche mehr Kaffee."','"Jeder verstanden? - Mmh, gut, keine Reaktion, ja dann , machen wir weiter!"','"5 Minuten Pause."']},{id:'ahmad',image:'persons/ahmad.png',title:'Student Ahmad',quotes:['"Philippe, ich habe eine Frage."','"Ist diese Variation des Codes auch möglich?"','"Kann ich Dir es eben zeigen?"']},{id:'daria',image:'persons/daria.png',title:'Studentin Daria',quotes:['"Ich kanns mal versuchen..."','"Meine Lösung wäre..."','"Ein bißchen habe ich was."']},{id:'deeba',image:'persons/deeba.png',title:'Studentin Deeba',quotes:['"Philippe, eine Frage!"','"Ah, gut zu wissen."','"Ich fasse noch mal für mich zusammen."']},{id:'dominic',image:'persons/dominic.png',title:'Student Dominic',quotes:['"Mein Mac zeigt was anderes an."']},{id:'henry',image:'persons/henry.png',title:'Student Henry',quotes:['"Mein Mac zeigt was anderes an."','"Welchen Befehl brauche ich da dann bei meinem Mac?"','"Ich kanns Dir nicht zeigen, weil ich auf meinem Mac bin, nicht am GFN Rechner."','"Wäre das bei Krypto mit dem Modul XY dann auch in Echtzeit...?"']},{id:'kevin',image:'persons/kevin.png',title:'Student Kevin',quotes:['"Die Antwort wäre...','"Die Lösung zur folgender Aufgabe lautet..."','"...und die Antwort zur der Frage wäre..."','"Die Coderedundanz (das Maß für nutzlos vorhandene Bits) beträgt: R = L - H = 1,3 - 1,157 = 0,143 [bit] (11 % relativ)."']},{id:'patrick',image:'persons/patrick.png',title:'Student Patrick',quotes:['"Dasselbe habe ich auch."','"Kaffee - Pause bitte."','"Ich hab´s gemacht! (auf Frage, wer hat die Hausaufgabe gemacht..."','"Hier habe ich ein Snippet für Alle bzw. wer will."']},{id:'susanne',image:'persons/susanne.png',title:'Studentin Susanne',quotes:['"Sorry, hier herrscht maximales Chaos, alles rot!"','"Ich brauch´ ne Zigarette','"I habe eine Frage.','"Phil ich bräuchte kurz Deine Hilfe!"','"Kaffee bräuchte ich auch!','"Muß mal wieder die Kamera auslassen, mein Internet ist verstopft, es laggt ohne Ende, sorry an Alle!"']}];// === DOM & VARS ===
  var DOM={};DOM.personQuotes=document.querySelector('.m-person-quotes');DOM.row=DOM.personQuotes.querySelector('.row');DOM.dummyCard=DOM.personQuotes.querySelector('.card-person');// === INIT =========
  var init=function init(){createCards(persons);};// === EVENTS & XHR =======
  var onClickNextQuote=function onClickNextQuote(e){var btnEl=e.currentTarget;var cardContentEl=btnEl.previousElementSibling;var id=btnEl.dataset.id;var quotes=getQuotesById(id);cardContentEl.textContent=newQuote(quotes);};// === FUNCTIONS ====
  var createCards=function createCards(persons){DOM.row.textContent='';persons.forEach(function(person){var cardEl=DOM.dummyCard.cloneNode(true);DOM.row.appendChild(cardEl);var title=cardEl.querySelector('.card-title');var img=cardEl.querySelector('img');var buttonNextQuote=cardEl.querySelector('button');title.textContent=person.title;img.src="../assets/img/".concat(person.image);img.alt=person.id;buttonNextQuote.dataset.id=person.id;buttonNextQuote.addEventListener('click',onClickNextQuote);});};var newQuote=function newQuote(quotes){var randomNumber=Math.floor(Math.random()*quotes.length);return quotes[randomNumber];};var getQuotesById=function getQuotesById(id){var person=persons.find(function(person){return person.id===id;});return person!==-1?person.quotes:[];};init();};

  var filterizr_min = {exports: {}};

  (function(module,exports){!function(t,e){module.exports=e();}(window,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports;}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r});},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0});},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==_typeof(t)&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t){n.d(r,i,function(e){return t[e];}.bind(null,i));}return r;},n.n=function(t){var e=t&&t.__esModule?function(){return t.default;}:function(){return t;};return n.d(e,"a",e),e;},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e);},n.p="",n(n.s=3);}([function(t,e,n){var r,i;/*!
  	 * imagesLoaded v4.1.4
  	 * JavaScript is all like "You images are done yet or what?"
  	 * MIT License
  	 */ /*!
  	 * imagesLoaded v4.1.4
  	 * JavaScript is all like "You images are done yet or what?"
  	 * MIT License
  	 */!function(o,s){r=[n(2)],void 0===(i=function(t){return function(t,e){var n=t.jQuery,r=t.console;function i(t,e){for(var n in e){t[n]=e[n];}return t;}var o=Array.prototype.slice;function s(t,e,a){if(!(this instanceof s))return new s(t,e,a);var u=t;"string"==typeof t&&(u=document.querySelectorAll(t)),u?(this.elements=function(t){if(Array.isArray(t))return t;if("object"==_typeof(t)&&"number"==typeof t.length)return o.call(t);return [t];}(u),this.options=i({},this.options),"function"==typeof e?a=e:i(this.options,e),a&&this.on("always",a),this.getImages(),n&&(this.jqDeferred=new n.Deferred()),setTimeout(this.check.bind(this))):r.error("Bad element for imagesLoaded "+(u||t));}s.prototype=Object.create(e.prototype),s.prototype.options={},s.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this);},s.prototype.addElementImages=function(t){"IMG"==t.nodeName&&this.addImage(t),!0===this.options.background&&this.addElementBackgroundImages(t);var e=t.nodeType;if(e&&a[e]){for(var n=t.querySelectorAll("img"),r=0;r<n.length;r++){var i=n[r];this.addImage(i);}if("string"==typeof this.options.background){var o=t.querySelectorAll(this.options.background);for(r=0;r<o.length;r++){var s=o[r];this.addElementBackgroundImages(s);}}}};var a={1:!0,9:!0,11:!0};function u(t){this.img=t;}function c(t,e){this.url=t,this.element=e,this.img=new Image();}return s.prototype.addElementBackgroundImages=function(t){var e=getComputedStyle(t);if(e)for(var n=/url\((['"])?(.*?)\1\)/gi,r=n.exec(e.backgroundImage);null!==r;){var i=r&&r[2];i&&this.addBackground(i,t),r=n.exec(e.backgroundImage);}},s.prototype.addImage=function(t){var e=new u(t);this.images.push(e);},s.prototype.addBackground=function(t,e){var n=new c(t,e);this.images.push(n);},s.prototype.check=function(){var t=this;function e(e,n,r){setTimeout(function(){t.progress(e,n,r);});}this.progressedCount=0,this.hasAnyBroken=!1,this.images.length?this.images.forEach(function(t){t.once("progress",e),t.check();}):this.complete();},s.prototype.progress=function(t,e,n){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!t.isLoaded,this.emitEvent("progress",[this,t,e]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,t),this.progressedCount==this.images.length&&this.complete(),this.options.debug&&r&&r.log("progress: "+n,t,e);},s.prototype.complete=function(){var t=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emitEvent(t,[this]),this.emitEvent("always",[this]),this.jqDeferred){var e=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[e](this);}},u.prototype=Object.create(e.prototype),u.prototype.check=function(){this.getIsImageComplete()?this.confirm(0!==this.img.naturalWidth,"naturalWidth"):(this.proxyImage=new Image(),this.proxyImage.addEventListener("load",this),this.proxyImage.addEventListener("error",this),this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.proxyImage.src=this.img.src);},u.prototype.getIsImageComplete=function(){return this.img.complete&&this.img.naturalWidth;},u.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.img,e]);},u.prototype.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t);},u.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindEvents();},u.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindEvents();},u.prototype.unbindEvents=function(){this.proxyImage.removeEventListener("load",this),this.proxyImage.removeEventListener("error",this),this.img.removeEventListener("load",this),this.img.removeEventListener("error",this);},c.prototype=Object.create(u.prototype),c.prototype.check=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.img.src=this.url,this.getIsImageComplete()&&(this.confirm(0!==this.img.naturalWidth,"naturalWidth"),this.unbindEvents());},c.prototype.unbindEvents=function(){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this);},c.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.element,e]);},s.makeJQueryPlugin=function(e){(e=e||t.jQuery)&&((n=e).fn.imagesLoaded=function(t,e){return new s(this,t,e).jqDeferred.promise(n(this));});},s.makeJQueryPlugin(),s;}(o,t);}.apply(e,r))||(t.exports=i);}("undefined"!=typeof window?window:this);},function(t,e){function n(t,e,n,r){var i,o=null==(i=r)||"number"==typeof i||"boolean"==typeof i?r:n(r),s=e.get(o);return void 0===s&&(s=t.call(this,r),e.set(o,s)),s;}function r(t,e,n){var r=Array.prototype.slice.call(arguments,3),i=n(r),o=e.get(i);return void 0===o&&(o=t.apply(this,r),e.set(i,o)),o;}function i(t,e,n,r,i){return n.bind(e,t,r,i);}function o(t,e){return i(t,this,1===t.length?n:r,e.cache.create(),e.serializer);}function s(){return JSON.stringify(arguments);}function a(){this.cache=Object.create(null);}a.prototype.has=function(t){return t in this.cache;},a.prototype.get=function(t){return this.cache[t];},a.prototype.set=function(t,e){this.cache[t]=e;};var u={create:function create(){return new a();}};t.exports=function(t,e){var n=e&&e.cache?e.cache:u,r=e&&e.serializer?e.serializer:s;return (e&&e.strategy?e.strategy:o)(t,{cache:n,serializer:r});},t.exports.strategies={variadic:function variadic(t,e){return i(t,this,r,e.cache.create(),e.serializer);},monadic:function monadic(t,e){return i(t,this,n,e.cache.create(),e.serializer);}};},function(t,e,n){var r,i;void 0===(i="function"==typeof(r=function r(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var n=this._events=this._events||{},r=n[t]=n[t]||[];return -1==r.indexOf(e)&&r.push(e),this;}},e.once=function(t,e){if(t&&e){this.on(t,e);var n=this._onceEvents=this._onceEvents||{};return (n[t]=n[t]||{})[e]=!0,this;}},e.off=function(t,e){var n=this._events&&this._events[t];if(n&&n.length){var r=n.indexOf(e);return -1!=r&&n.splice(r,1),this;}},e.emitEvent=function(t,e){var n=this._events&&this._events[t];if(n&&n.length){n=n.slice(0),e=e||[];for(var r=this._onceEvents&&this._onceEvents[t],i=0;i<n.length;i++){var o=n[i];r&&r[o]&&(this.off(t,o),delete r[o]),o.apply(this,e);}return this;}},e.allOff=function(){delete this._events,delete this._onceEvents;},t;})?r.call(e,n,e,t):r)||(t.exports=i);},function(t,e,n){n.r(e);var r={IDLE:"IDLE",FILTERING:"FILTERING",SORTING:"SORTING",SHUFFLING:"SHUFFLING"},i={SAME_SIZE:"sameSize",SAME_HEIGHT:"sameHeight",SAME_WIDTH:"sameWidth",PACKED:"packed",HORIZONTAL:"horizontal",VERTICAL:"vertical"},o=/(^linear$)|(^ease-in-out$)|(^ease-in$)|(^ease-out$)|(^ease$)|(^step-start$)|(^step-end$)|(^steps\(\d\s*,\s*(end|start)\))$|(^cubic-bezier\((\d*\.*\d+)\s*,\s*(\d*\.*\d+)\s*,\s*(\d*\.*\d+)\s*,\s*(\d*\.*\d+)\))$/,s=function s(t,e,n,r,i){if(void 0!==e){var o=new Error('Filterizr: expected type of option "'+t+'" to be "'+n+'", but its type is: "'+_typeof(e)+'"'),s=!1,a=!1,u=n.includes("array");if(_typeof(e).match(n)?s=!0:!s&&u&&(a=Array.isArray(e)),!s&&!u)throw o;if(!s&&u&&!a)throw o;var c=function c(t){return t?" For further help read here: "+t:"";};if(Array.isArray(r)){var l=!1;if(r.forEach(function(t){t===e&&(l=!0);}),!l)throw new Error('Filterizr: allowed values for option "'+t+'" are: '+r.map(function(t){return '"'+t+'"';}).join(", ")+'. Value received: "'+e+'".'+c(i));}else if("string"==typeof e&&r instanceof RegExp){if(!e.match(r))throw new Error('Filterizr: invalid value "'+e+'" for option "'+t+'" received.'+c(i));}}},a=function a(t,e,n){var r;return function(){var i=this,o=arguments;clearTimeout(r),r=window.setTimeout(function(){r=null,n||t.apply(i,o);},e),n&&!r&&t.apply(i,o);};},u=function u(t,e){return t.length===e.length&&t.reduce(function(t,n,r){var i=n.getSortAttribute("index"),o=e[r].getSortAttribute("index");return t&&i===o;},!0);};var c=function c(t){return "string"==typeof t?document.querySelector(t):t;};function l(t){return t&&"object"==_typeof(t)&&!Array.isArray(t);}function f(t){for(var e,n,r=[],i=1;i<arguments.length;i++){r[i-1]=arguments[i];}if(!r.length)return t;var o=r.shift();if(l(t)&&l(o))for(var s in o){l(o[s])?(t[s]||Object.assign(t,((e={})[s]={},e)),f(t[s],o[s])):Object.assign(t,((n={})[s]=o[s],n));}return f.apply(void 0,[t].concat(r));}var h=function h(){};function p(t,e){Object.entries(e).forEach(function(e){var n=e[0],r=e[1];t.style[n]=r;});}var d=function d(t){for(var e=t.slice(0),n=[];0!==e.length;){var r=Math.floor(e.length*Math.random());n.push(e[r]),e.splice(r,1);}return n;},y=function(){function t(t){this.receiver=t,this.eventDictionary={};}return t.prototype.on=function(t,e){var n=this.receiver,r=n instanceof NodeList;!!this.eventDictionary[t]&&delete this.eventDictionary[t],r&&n.length?(this.eventDictionary[t]=e,Array.from(n).forEach(function(n){n.addEventListener(t,e);})):!r&&n&&(this.eventDictionary[t]=e,n.addEventListener(t,e));},t.prototype.off=function(t){var e=this.receiver,n=this.eventDictionary[t],r=e instanceof NodeList;r&&e.length?Array.from(e).forEach(function(e){e.removeEventListener(t,n);}):!r&&e&&e.removeEventListener(t,n),delete this.eventDictionary[t];},t.prototype.destroy=function(){var t=this,e=this.receiver,n=e instanceof NodeList;n&&e.length?Array.from(e).forEach(function(e){return t.removeAllEvents(e);}):!n&&e&&this.removeAllEvents(e);},t.prototype.removeAllEvents=function(t){var e=this;Object.keys(this.eventDictionary).forEach(function(n){t.removeEventListener(n,e.eventDictionary[n]),delete e.eventDictionary[n];});},t;}(),v={animationDuration:.5,callbacks:{onInit:h,onFilteringStart:h,onFilteringEnd:h,onShufflingStart:h,onShufflingEnd:h,onSortingStart:h,onSortingEnd:h},controlsSelector:"",delay:0,delayMode:"progressive",easing:"ease-out",filter:"all",filterOutCss:{opacity:0,transform:"scale(0.5)"},filterInCss:{opacity:1,transform:"scale(1)"},gridItemsSelector:".filtr-item",gutterPixels:0,layout:i.SAME_SIZE,multifilterLogicalOperator:"or",searchTerm:"",setupControls:!0,spinner:{enabled:!1,fillColor:"#2184D0",styles:{height:"75px",margin:"0 auto",width:"75px","z-index":2}}},g=function(){function t(t){this.filter=t;}return t.prototype.get=function(){return this.filter;},t.prototype.set=function(t){this.filter=t;},t.prototype.toggle=function(t){this.filter=this.toggleFilter(this.filter,t);},t.prototype.toggleFilter=function(t,e){if("all"===t)return e;if(Array.isArray(t)){if(t.includes(e)){var n=t.filter(function(t){return t!==e;});return 1===n.length?n[0]:n;}return t.concat([e]);}return t===e?"all":[t,e];},t;}(),_m=function m(){return (_m=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){for(var i in e=arguments[n]){Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}}return t;}).apply(this,arguments);},b=function(){function t(t){var e=f({},v,this.validate(t));this.options=this.convertToFilterizrOptions(e);}return Object.defineProperty(t.prototype,"isSpinnerEnabled",{get:function get(){return this.options.spinner.enabled;},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"areControlsEnabled",{get:function get(){return this.options.setupControls;},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"controlsSelector",{get:function get(){return this.options.controlsSelector;},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filter",{get:function get(){return this.options.filter.get();},set:function set(t){this.options.filter.set(t);},enumerable:!0,configurable:!0}),t.prototype.toggleFilter=function(t){this.options.filter.toggle(t);},Object.defineProperty(t.prototype,"searchTerm",{get:function get(){return this.options.searchTerm;},set:function set(t){this.options.searchTerm=t;},enumerable:!0,configurable:!0}),t.prototype.get=function(){return this.options;},t.prototype.getRaw=function(){return this.convertToOptions(this.options);},t.prototype.set=function(t){var e=f({},this.convertToOptions(this.options),this.validate(t));this.options=this.convertToFilterizrOptions(e);},t.prototype.convertToFilterizrOptions=function(t){return _m({},t,{filter:new g(t.filter)});},t.prototype.convertToOptions=function(t){return _m({},t,{filter:t.filter.get()});},t.prototype.validate=function(t){return s("animationDuration",t.animationDuration,"number"),s("callbacks",t.callbacks,"object"),s("controlsSelector",t.controlsSelector,"string"),s("delay",t.delay,"number"),s("easing",t.easing,"string",o,"https://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp"),s("delayMode",t.delayMode,"string",["progressive","alternate"]),s("filter",t.filter,"string|number|array"),s("filterOutCss",t.filterOutCss,"object"),s("filterInCss",t.filterOutCss,"object"),s("gridItemsSelector",t.gridItemsSelector,"string"),s("gutterPixels",t.gutterPixels,"number"),s("layout",t.layout,"string",Object.values(i)),s("multifilterLogicalOperator",t.multifilterLogicalOperator,"string",["and","or"]),s("searchTerm",t.searchTerm,"string"),s("setupControls",t.setupControls,"boolean"),t;},t;}(),w=function(){function t(t,e){void 0===e&&(e=""),this.filterizr=t,this.selector=e,this.filterControls=new y(document.querySelectorAll(e+"[data-filter]")),this.multiFilterControls=new y(document.querySelectorAll(e+"[data-multifilter]")),this.shuffleControls=new y(document.querySelectorAll(e+"[data-shuffle]")),this.searchControls=new y(document.querySelectorAll(e+"[data-search]")),this.sortAscControls=new y(document.querySelectorAll(e+"[data-sortAsc]")),this.sortDescControls=new y(document.querySelectorAll(e+"[data-sortDesc]")),this.initialize();}return t.prototype.destroy=function(){this.filterControls.destroy(),this.multiFilterControls.destroy(),this.shuffleControls.destroy(),this.searchControls.destroy(),this.sortAscControls.destroy(),this.sortDescControls.destroy();},t.prototype.initialize=function(){var t=this.filterizr,e=this.selector;this.filterControls.on("click",function(e){var n=e.currentTarget.getAttribute("data-filter");t.filter(n);}),this.multiFilterControls.on("click",function(e){var n=e.target.getAttribute("data-multifilter");t.toggleFilter(n);}),this.shuffleControls.on("click",t.shuffle.bind(t)),this.searchControls.on("keyup",a(function(e){var n=e.target.value;t.search(n);},250,!1)),this.sortAscControls.on("click",function(){var n=document.querySelector(e+"[data-sortOrder]").value;t.sort(n,"asc");}),this.sortDescControls.on("click",function(){var n=document.querySelector(e+"[data-sortOrder]").value;t.sort(n,"desc");});},t;}(),E=function(){function t(t,e){this.node=t,this.options=e,this.eventReceiver=new y(this.node);}return Object.defineProperty(t.prototype,"dimensions",{get:function get(){return {width:this.node.clientWidth,height:this.node.clientHeight};},enumerable:!0,configurable:!0}),t.prototype.destroy=function(){this.styles.destroy();},t.prototype.trigger=function(t){var e=new Event(t);this.node.dispatchEvent(e);},t;}();function I(t,e){var n=e.get(),r=n.delay;return "progressive"===n.delayMode?r*t:t%2==0?r:0;}var _S,O=function O(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},x=function x(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},_=function(){function t(){}return t.animate=function(e,n){return O(this,void 0,void 0,function(){return x(this,function(r){switch(r.label){case 0:return [4,t.process({node:e,targetStyles:n,eventReceiver:new y(e)})];case 1:return r.sent(),[2];}});});},t.process=function(t){return O(this,void 0,void 0,function(){return x(this,function(e){return [2,new Promise(function(e){t.eventReceiver.on("transitionend",function(){t.eventReceiver.destroy(),e();}),setTimeout(function(){p(t.node,t.targetStyles);},10);})];});});},t;}().animate,k=function k(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},C=function C(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},A=function(){function t(t,e){this.node=t,this.options=e;}return t.prototype.destroy=function(){this.node.removeAttribute("style");},t.prototype.animate=function(t){return k(this,void 0,void 0,function(){return C(this,function(e){return _(this.node,t),[2];});});},t.prototype.set=function(t){p(this.node,t);},t.prototype.remove=function(t){this.node.style.removeProperty(t);},t;}(),T=(_S=function S(t,e){return (_S=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e){e.hasOwnProperty(n)&&(t[n]=e[n]);}})(t,e);},function(t,e){function n(){this.constructor=t;}_S(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n());}),j=function j(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},P=function P(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},F=n(0),L=function(t){function e(e,n,r){var i=t.call(this,e,r)||this;return i._index=n,i;}return T(e,t),e.prototype.initialize=function(){var t;this.set((t=this.options,Object.assign({},t.get().filterOutCss,{"-webkit-backface-visibility":"hidden",perspective:"1000px","-webkit-perspective":"1000px","-webkit-transform-style":"preserve-3d",position:"absolute"})));},e.prototype.setFilteredStyles=function(t,e){this.set(function(t,e){return Object.assign({},e,{transform:(e.transform||"")+" translate3d("+t.left+"px, "+t.top+"px, 0)"});}(t,e));},e.prototype.updateTransitionStyle=function(){var t,e,n;this.set((t=this._index,e=this.options,{transition:"all "+(n=e.get()).animationDuration+"s "+n.easing+" "+I(t,e)+"ms, width 1ms"}));},e.prototype.updateWidth=function(){var t=this.options.get().gutterPixels,e=this.node.parentElement.clientWidth,n=this.node.clientWidth,r=n-t*(1/Math.floor(e/n)+1)+"px";this.set({width:r});},e.prototype.enableTransitions=function(){return j(this,void 0,void 0,function(){var t=this;return P(this,function(e){return [2,new Promise(function(e){!!t.node.querySelectorAll("img").length?F(t.node,function(){setTimeout(function(){t.updateTransitionStyle(),e();},10);}):setTimeout(function(){t.updateTransitionStyle(),e();},10);})];});});},e.prototype.disableTransitions=function(){this.remove("transition");},e.prototype.setZIndex=function(t){this.set({"z-index":t});},e.prototype.removeZIndex=function(){this.remove("z-index");},e.prototype.removeWidth=function(){this.remove("width");},e.prototype.setHidden=function(){this.set({display:"none"});},e.prototype.setVisible=function(){this.remove("display");},e;}(A),z=function(){var _t=function t(e,n){return (_t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e){e.hasOwnProperty(n)&&(t[n]=e[n]);}})(e,n);};return function(e,n){function r(){this.constructor=e;}_t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r());};}(),_D=function D(){return (_D=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){for(var i in e=arguments[n]){Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}}return t;}).apply(this,arguments);},N=function(t){function e(e,n,r){var i=t.call(this,e,r)||this;return i.filteredOut=!1,i.lastPosition={left:0,top:0},i.sortData=_D({},function(t){for(var e={category:"",sort:""},n=0,r=t.attributes,i=r.length;n<i;n++){var o=r[n],s=o.nodeName,a=o.nodeValue;s.includes("data")&&(e[s.slice(5,s.length)]=a);}return delete e.category,delete e.sort,e;}(e),{index:n,sortData:e.getAttribute("data-sort")}),i.styledNode=new L(e,n,r),i.styles.initialize(),i.bindEvents(),i;}return z(e,t),Object.defineProperty(e.prototype,"styles",{get:function get(){return this.styledNode;},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){t.prototype.destroy.call(this),this.unbindEvents();},e.prototype.filterIn=function(t){var e=this.options.get().filterInCss;this.styles.setFilteredStyles(t,e),this.lastPosition=t,this.filteredOut=!1;},e.prototype.filterOut=function(){var t=this.options.get().filterOutCss;this.styles.setFilteredStyles(this.lastPosition,t),this.filteredOut=!0;},e.prototype.contentsMatchSearch=function(t){return this.node.textContent.toLowerCase().includes(t);},e.prototype.getCategories=function(){return this.node.getAttribute("data-category").split(/\s*,\s*/g);},e.prototype.getSortAttribute=function(t){return this.sortData[t];},e.prototype.bindEvents=function(){var t=this;this.eventReceiver.on("transitionend",function(){t.filteredOut?(t.node.classList.add("filteredOut"),t.styles.setZIndex(-1e3),t.styles.setHidden()):(t.node.classList.remove("filteredOut"),t.styles.removeZIndex());});},e.prototype.unbindEvents=function(){this.eventReceiver.off("transitionend");},e;}(E),M=function M(){},R=function(){var _t2=function t(e,n){return (_t2=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e){e.hasOwnProperty(n)&&(t[n]=e[n]);}})(e,n);};return function(e,n){function r(){this.constructor=e;}_t2(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r());};}(),H=function H(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},W=function W(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},q=function(t){function e(e){var n=t.call(this)||this;return n._filterItems=e.map(function(t){return t.styles;}),n;}return R(e,t),e.prototype.resetDisplay=function(){this._filterItems.forEach(function(t){return t.setVisible();});},e.prototype.removeWidth=function(){this._filterItems.forEach(function(t){return t.removeWidth();});},e.prototype.updateWidth=function(){this._filterItems.forEach(function(t){return t.updateWidth();});},e.prototype.updateTransitionStyle=function(){this._filterItems.forEach(function(t){return t.updateTransitionStyle();});},e.prototype.disableTransitions=function(){this._filterItems.forEach(function(t){return t.disableTransitions();});},e.prototype.enableTransitions=function(){return H(this,void 0,void 0,function(){var t=this;return W(this,function(e){return this._filterItems.forEach(function(e){return H(t,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return [4,e.enableTransitions()];case 1:return [2,t.sent()];}});});}),[2];});});},e.prototype.updateWidthWithTransitionsDisabled=function(){this.disableTransitions(),this.removeWidth(),this.updateWidth(),this.enableTransitions();},e;}(M),G=function(){function t(t,e){this.filterItems=t,this.styledFilterItems=new q(t),this.options=e;}return Object.defineProperty(t.prototype,"styles",{get:function get(){return this.styledFilterItems;},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"length",{get:function get(){return this.filterItems.length;},enumerable:!0,configurable:!0}),t.prototype.getItem=function(t){return this.filterItems[t];},t.prototype.destroy=function(){this.filterItems.forEach(function(t){return t.destroy();});},t.prototype.push=function(t){return this.filterItems.push(t);},t.prototype.remove=function(t){this.filterItems=this.filterItems.filter(function(e){return e.node!==t;});},t.prototype.getFiltered=function(t){var e=this,n=this.options.searchTerm,r=this.search(this.filterItems,n);return "all"===t?r:r.filter(function(n){return e.shouldBeFiltered(n.getCategories(),t);});},t.prototype.getFilteredOut=function(t){var e=this,n=this.options.searchTerm;return this.filterItems.filter(function(r){var i=r.getCategories(),o=e.shouldBeFiltered(i,t),s=r.contentsMatchSearch(n);return !o||!s;});},t.prototype.sort=function(t,e){void 0===t&&(t="index"),void 0===e&&(e="asc");var n,r,i=(n=this.filterItems,r=function r(e){return e.getSortAttribute(t);},n.slice(0).sort(function(t){return function(e,n){var r=t(e),i=t(n);return r<i?-1:r>i?1:0;};}(r))),o="asc"===e?i:i.reverse();this.filterItems=o;},t.prototype.shuffle=function(){var t=this,e=this.getFiltered(this.options.filter);if(e.length>1){var n=this.getFiltered(this.options.filter).map(function(e){return t.filterItems.indexOf(e);}).slice(),r=void 0;do{r=d(e);}while(u(e,r));(r=d(e)).forEach(function(e,r){var i,o=n[r];t.filterItems=Object.assign([],t.filterItems,((i={})[o]=e,i));});}},t.prototype.search=function(t,e){return e?t.filter(function(t){return t.contentsMatchSearch(e);}):t;},t.prototype.shouldBeFiltered=function(t,e){var n,r,i=this.options.getRaw().multifilterLogicalOperator;return Array.isArray(e)?"or"===i?!!(n=t,r=e,Array.prototype.filter.call(n,function(t){return r.includes(t);})).length:function(t,e){return t.reduce(function(t,n){return t&&e.includes(n);},!0);}(e,t):t.includes(e);},t;}(),_B=function B(){return (_B=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){for(var i in e=arguments[n]){Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}}return t;}).apply(this,arguments);},Z=function Z(t){return {padding:t.get().gutterPixels+"px"};},$=function(){var _t3=function t(e,n){return (_t3=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e){e.hasOwnProperty(n)&&(t[n]=e[n]);}})(e,n);};return function(e,n){function r(){this.constructor=e;}_t3(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r());};}(),Q=function(t){function e(){return null!==t&&t.apply(this,arguments)||this;}return $(e,t),e.prototype.initialize=function(){var t;this.set((t=this.options,_B({},Z(t),{position:"relative",width:"100%",display:"flex",flexWrap:"wrap"})));},e.prototype.updatePaddings=function(){this.set(Z(this.options));},e.prototype.setHeight=function(t){this.set({height:t+"px"});},e;}(A),V=function(){var _t4=function t(e,n){return (_t4=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e){e.hasOwnProperty(n)&&(t[n]=e[n]);}})(e,n);};return function(e,n){function r(){this.constructor=e;}_t4(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r());};}(),J=function(t){function e(e,n){var i=this;if(!e)throw new Error("Filterizr: could not initialize container, check the selector or node you passed to the constructor exists.");return (i=t.call(this,e,n)||this).styledNode=new Q(e,n),i._filterizrState=r.IDLE,i.styles.initialize(),i.filterItems=i.makeFilterItems(i.options),i.bindEvents(),i;}return V(e,t),Object.defineProperty(e.prototype,"styles",{get:function get(){return this.styledNode;},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"filterizrState",{set:function set(t){this._filterizrState=t;},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){t.prototype.destroy.call(this),this.unbindEvents(),this.filterItems.destroy();},e.prototype.makeFilterItems=function(t){var e=Array.from(this.node.querySelectorAll(t.get().gridItemsSelector)).map(function(e,n){return new N(e,n,t);}),n=new G(e,t);if(!n.length)throw new Error("Filterizr: cannot initialize empty container. Make sure the gridItemsSelector option corresponds to the selector of your grid's items");return n.styles.updateWidth(),n;},e.prototype.insertItem=function(t){var e=t.cloneNode(!0);e.removeAttribute("style"),this.node.appendChild(e);var n=new N(e,this.filterItems.length,this.options);n.styles.enableTransitions(),n.styles.updateWidth(),this.filterItems.push(n);},e.prototype.removeItem=function(t){this.filterItems.remove(t),this.node.removeChild(t);},e.prototype.setHeight=function(t){this.dimensions.height=t,this.styles.setHeight(t);},e.prototype.bindEvents=function(){var t=this,e=this.options.get(),n=e.animationDuration,i=e.callbacks,o=e.delay,s=e.delayMode,u=e.gridItemsSelector,c="progressive"===s?o*this.filterItems.length:o;this.eventReceiver.on("transitionend",a(function(e){if(Array.from(e.target.classList).reduce(function(t,e){return t||u.includes(e);},!1)){switch(t._filterizrState){case r.FILTERING:t.trigger("filteringEnd");break;case r.SORTING:t.trigger("sortingEnd");break;case r.SHUFFLING:t.trigger("shufflingEnd");}t.filterizrState=r.IDLE;}},100*n+c,!1)),this.eventReceiver.on("init",i.onInit),this.eventReceiver.on("filteringStart",i.onFilteringStart),this.eventReceiver.on("filteringEnd",i.onFilteringEnd),this.eventReceiver.on("shufflingStart",i.onShufflingStart),this.eventReceiver.on("shufflingEnd",i.onShufflingEnd),this.eventReceiver.on("sortingStart",i.onSortingStart),this.eventReceiver.on("sortingEnd",i.onSortingEnd);},e.prototype.unbindEvents=function(){this.eventReceiver.off("transitionend"),this.eventReceiver.off("init"),this.eventReceiver.off("filteringStart"),this.eventReceiver.off("filteringEnd"),this.eventReceiver.off("shufflingStart"),this.eventReceiver.off("shufflingEnd"),this.eventReceiver.off("sortingStart"),this.eventReceiver.off("sortingEnd");},e;}(E);var U=function(){var _t5=function t(e,n){return (_t5=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e){e.hasOwnProperty(n)&&(t[n]=e[n]);}})(e,n);};return function(e,n){function r(){this.constructor=e;}_t5(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r());};}(),_K=function K(){return (_K=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){for(var i in e=arguments[n]){Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}}return t;}).apply(this,arguments);},X=function X(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},Y=function Y(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},tt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this;}return U(e,t),e.prototype.initialize=function(){var t=this.options.get().spinner.styles;this.set(_K({},t,{opacity:1,transition:"all ease-out 500ms"}));},e.prototype.fadeOut=function(){return X(this,void 0,void 0,function(){return Y(this,function(t){switch(t.label){case 0:return [4,this.animate({opacity:0})];case 1:return t.sent(),[2];}});});},e;}(A),et=function et(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},nt=function nt(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},rt=function(){function t(t,e){var n,r,i;this.filterContainer=t,this.node=(n=e.get().spinner,r='<?xml version="1.0" encoding="UTF-8"?><svg stroke="'+n.fillColor+'" viewBox="0 0 44 44" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>',(i=document.createElement("img")).classList.add("Filterizr__spinner"),i.src="data:image/svg+xml;base64,"+window.btoa(r),i.alt="Spinner",i),this.styledNode=new tt(this.node,e),this.initialize();}return Object.defineProperty(t.prototype,"styles",{get:function get(){return this.styledNode;},enumerable:!0,configurable:!0}),t.prototype.destroy=function(){return et(this,void 0,void 0,function(){return nt(this,function(t){switch(t.label){case 0:return [4,this.styles.fadeOut()];case 1:return t.sent(),this.filterContainer.node.removeChild(this.node),[2];}});});},t.prototype.initialize=function(){this.styles.initialize(),this.filterContainer.node.appendChild(this.node);},t;}(),it=n(1),ot=n.n(it);function st(t,e){return t.reduce(function(t,n){return t+n.width+e;},0);}function at(t,e){return t.length?t.reduce(function(t,n){return t+n.height+e;},0):0;}var _ut=function ut(){return (_ut=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){for(var i in e=arguments[n]){Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);}}return t;}).apply(this,arguments);},ct=function(){function t(t){this.init(t);}return t.prototype.init=function(t){this.root={x:0,y:0,w:t};},t.prototype.fit=function(t){var e,n,r,i=t.length,o=i>0?t[0].h:0;for(this.root.h=o,e=0;e<i;e++){r=t[e],(n=this.findNode(this.root,r.w,r.h))?r.fit=this.splitNode(n,r.w,r.h):r.fit=this.growDown(r.w,r.h);}},t.prototype.findNode=function(t,e,n){return t.used?this.findNode(t.right,e,n)||this.findNode(t.down,e,n):e<=t.w&&n<=t.h?t:null;},t.prototype.splitNode=function(t,e,n){return t.used=!0,t.down={x:t.x,y:t.y+n,w:t.w,h:t.h-n},t.right={x:t.x+e,y:t.y,w:t.w-e,h:n},t;},t.prototype.growDown=function(t,e){var n;return this.root={used:!0,x:0,y:0,w:this.root.w,h:this.root.h+e,down:{x:0,y:this.root.h,w:this.root.w,h:e},right:this.root},(n=this.findNode(this.root,t,e))?this.splitNode(n,t,e):null;},t;}(),lt=ot()(function(t,e,n){var r=n.gutterPixels,o=n.layout;if(!e.length)return {containerHeight:0,itemsPositions:[]};switch(o){case i.HORIZONTAL:return function(t,e){return {containerHeight:Math.max.apply(Math,t.map(function(t){return t.height;}))+2*e,itemsPositions:t.map(function(n,r){return {left:st(t.slice(0,r),e),top:0};})};}(e,r);case i.VERTICAL:return function(t,e){return {containerHeight:at(t,e)+e,itemsPositions:t.map(function(n,r){return {left:0,top:at(t.slice(0,r),e)};})};}(e,r);case i.SAME_HEIGHT:return function(t,e,n){var r=e.map(function(t,r){var i=t.width;return e.slice(0,r).reduce(function(t,e){return t+e.width+2*n;},0)+i+n;}),i=r.reduce(function(e,n,r){var i,o=Object.keys(e).length;return _ut({},e,n>t*o&&((i={})[o]=r,i));},{0:0}),o=e.map(function(o,s){var a=o.height,u=Math.floor(r[s]/t);return {left:e.slice(i[u],s).reduce(function(t,e){return t+e.width+n;},0),top:(a+n)*u};});return {containerHeight:Object.keys(i).length*(e[0].height+n)+n,itemsPositions:o};}(t,e,r);case i.SAME_WIDTH:return function(t,e,n){var r=Math.floor(t/(e[0].width+n)),i=e.map(function(t,i){var o=t.width,s=Math.floor(i/r);return {left:(i-r*s)*(o+n),top:e.slice(0,i).filter(function(t,e){return (i-e)%r==0;}).reduce(function(t,e){return t+e.height+n;},0)};}),o=e.reduce(function(t,e,i){var o=e.height,s=Math.floor(i/r);return t[i-r*s]+=o+n,t;},Array.apply(null,Array(r)).map(Number.prototype.valueOf,0));return {containerHeight:Math.max.apply(Math,o)+n,itemsPositions:i};}(t,e,r);case i.PACKED:return function(t,e,n){var r=new ct(t),i=e.map(function(t){var e=t.width,r=t.height;return {w:e+n,h:r+n};});r.fit(i);var o=i.map(function(t){var e=t.fit;return {left:e.x,top:e.y};});return {containerHeight:r.root.h+n,itemsPositions:o};}(t,e,r);case i.SAME_SIZE:default:return function(t,e,n){var r=Math.floor(t/(e[0].width+n)),i=e.map(function(t,e){var i=t.width,o=t.height,s=Math.floor(e/r);return {left:(e-r*s)*(i+n),top:s*(o+n)};});return {containerHeight:Math.ceil(e.length/r)*(e[0].height+n)+n,itemsPositions:i};}(t,e,r);}});function ft(t){if(!t)throw new Error("Filterizr as a jQuery plugin, requires jQuery to work. If you would prefer to use the vanilla JS version, please use the correct bundle file.");t.fn.filterizr=function(){var e="."+t.trim(this.get(0).className).replace(/\s+/g,"."),n=arguments;if(!this._fltr&&0===n.length||1===n.length&&"object"==_typeof(n[0])){var r=n.length>0?n[0]:v;this._fltr=new yt(e,r);}else if(n.length>=1&&"string"==typeof n[0]){var i=n[0],o=Array.prototype.slice.call(n,1),s=this._fltr;switch(i){case"filter":return s.filter.apply(s,o),this;case"insertItem":return s.insertItem.apply(s,o),this;case"removeItem":return s.removeItem.apply(s,o),this;case"toggleFilter":return s.toggleFilter.apply(s,o),this;case"sort":return s.sort.apply(s,o),this;case"shuffle":return s.shuffle.apply(s,o),this;case"search":return s.search.apply(s,o),this;case"setOptions":return s.setOptions.apply(s,o),this;case"destroy":return s.destroy.apply(s,o),delete this._fltr,this;default:throw new Error("Filterizr: "+i+" is not part of the Filterizr API. Please refer to the docs for more information.");}}return this;};}var ht=function ht(t,e,n,r){return new(n||(n=Promise))(function(i,o){function s(t){try{u(r.next(t));}catch(t){o(t);}}function a(t){try{u(r.throw(t));}catch(t){o(t);}}function u(t){t.done?i(t.value):new n(function(e){e(t.value);}).then(s,a);}u((r=r.apply(t,e||[])).next());});},pt=function pt(t,e){var n,r,i,o,s={label:0,sent:function sent(){if(1&i[0])throw i[1];return i[1];},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this;}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;){try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue;}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break;}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break;}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break;}i[2]&&s.ops.pop(),s.trys.pop();continue;}o=e.call(t,s);}catch(t){o=[6,t],r=0;}finally{n=i=0;}}if(5&o[0])throw o[1];return {value:o[0]?o[1]:void 0,done:!0};}([o,a]);};}},dt=n(0),yt=function(){function t(t,e){void 0===t&&(t=".filtr-container"),void 0===e&&(e={}),this.options=new b(e);var n=this.options,r=n.areControlsEnabled,i=n.controlsSelector,o=n.isSpinnerEnabled;this.windowEventReceiver=new y(window),this.filterContainer=new J(c(t),this.options),this.imagesHaveLoaded=!this.filterContainer.node.querySelectorAll("img").length,r&&(this.filterControls=new w(this,i)),o&&(this.spinner=new rt(this.filterContainer,this.options)),this.initialize();}return Object.defineProperty(t.prototype,"filterItems",{get:function get(){return this.filterContainer.filterItems;},enumerable:!0,configurable:!0}),t.prototype.filter=function(t){var e=this.filterContainer;e.trigger("filteringStart"),e.filterizrState=r.FILTERING,t=Array.isArray(t)?t.map(function(t){return t.toString();}):t.toString(),this.options.filter=t,this.render();},t.prototype.destroy=function(){var t=this.windowEventReceiver,e=this.filterControls;this.filterContainer.destroy(),t.destroy(),this.options.areControlsEnabled&&e&&e.destroy();},t.prototype.insertItem=function(t){return ht(this,void 0,void 0,function(){return pt(this,function(e){switch(e.label){case 0:return this.filterContainer.insertItem(t),[4,this.waitForImagesToLoad()];case 1:return e.sent(),this.render(),[2];}});});},t.prototype.removeItem=function(t){this.filterContainer.removeItem(t),this.render();},t.prototype.sort=function(t,e){void 0===t&&(t="index"),void 0===e&&(e="asc");var n=this.filterContainer,i=this.filterItems;n.trigger("sortingStart"),n.filterizrState=r.SORTING,i.sort(t,e),this.render();},t.prototype.search=function(t){void 0===t&&(t=this.options.get().searchTerm),this.options.searchTerm=t.toLowerCase(),this.render();},t.prototype.shuffle=function(){var t=this.filterContainer,e=this.filterItems;t.trigger("shufflingStart"),t.filterizrState=r.SHUFFLING,e.shuffle(),this.render();},t.prototype.setOptions=function(t){var e=this.filterContainer,n=this.filterItems,r="animationDuration"in t||"delay"in t||"delayMode"in t;(t.callbacks||r)&&e.unbindEvents(),this.options.set(t),(t.easing||r)&&n.styles.updateTransitionStyle(),(t.callbacks||r)&&e.bindEvents(),"searchTerm"in t&&this.search(t.searchTerm),("filter"in t||"multifilterLomultifilterLogicalOperator"in t)&&this.filter(this.options.filter),"gutterPixels"in t&&(this.filterContainer.styles.updatePaddings(),this.filterItems.styles.updateWidthWithTransitionsDisabled(),this.render());},t.prototype.toggleFilter=function(t){this.options.toggleFilter(t),this.filter(this.options.filter);},t.prototype.render=function(){var t=this.filterContainer,e=this.filterItems,n=this.options,r=e.getFiltered(n.filter);e.styles.resetDisplay(),e.getFilteredOut(n.filter).forEach(function(t){t.filterOut();});var i=lt(t.dimensions.width,r.map(function(t){return t.dimensions;}),this.options.get()),o=i.containerHeight,s=i.itemsPositions;t.setHeight(o),r.forEach(function(t,e){t.filterIn(s[e]);});},t.prototype.initialize=function(){return ht(this,void 0,void 0,function(){var t,e,n,r;return pt(this,function(i){switch(i.label){case 0:return e=(t=this).filterContainer,n=t.filterItems,r=t.spinner,this.bindEvents(),[4,this.waitForImagesToLoad()];case 1:return i.sent(),this.options.isSpinnerEnabled?[4,r.destroy()]:[3,3];case 2:i.sent(),i.label=3;case 3:return this.render(),[4,n.styles.enableTransitions()];case 4:return i.sent(),e.trigger("init"),[2];}});});},t.prototype.bindEvents=function(){var t=this,e=this.filterItems;this.windowEventReceiver.on("resize",a(function(){e.styles.updateWidthWithTransitionsDisabled(),t.render();},50,!1));},t.prototype.waitForImagesToLoad=function(){return ht(this,void 0,void 0,function(){var t,e,n,r=this;return pt(this,function(i){return e=(t=this).imagesHaveLoaded,n=t.filterContainer,e?[2,Promise.resolve()]:[2,new Promise(function(t){dt(n.node,function(){r.imagesHaveLoaded=!0,t();});})];});});},t.FilterContainer=J,t.FilterItem=N,t.defaultOptions=v,t.installAsJQueryPlugin=ft,t;}();n.d(e,"default",function(){return yt;});}]).default;});})(filterizr_min);var Filterizr = /*@__PURE__*/getDefaultExportFromCjs(filterizr_min.exports);

  var freeGlobal$1=_typeof(commonjsGlobal)=='object'&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal;var _freeGlobal=freeGlobal$1;

  var freeGlobal=_freeGlobal;/** Detect free variable `self`. */var freeSelf=(typeof self==="undefined"?"undefined":_typeof(self))=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root$1=freeGlobal||freeSelf||Function('return this')();var _root=root$1;

  var root=_root;/** Built-in value references. */var _Symbol2=root.Symbol;var _Symbol$3=_Symbol2;

  function arrayMap$1(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}var _arrayMap=arrayMap$1;

  var isArray$1=Array.isArray;var isArray_1=isArray$1;

  var _Symbol$2=_Symbol$3;/** Used for built-in method references. */var objectProto$1=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto$1.hasOwnProperty;/**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */var nativeObjectToString$1=objectProto$1.toString;/** Built-in value references. */var symToStringTag$1=_Symbol$2?_Symbol$2.toStringTag:undefined;/**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */function getRawTag$1(value){var isOwn=hasOwnProperty.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString$1.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag;}else {delete value[symToStringTag$1];}}return result;}var _getRawTag=getRawTag$1;

  var objectProto=Object.prototype;/**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */var nativeObjectToString=objectProto.toString;/**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */function objectToString$1(value){return nativeObjectToString.call(value);}var _objectToString=objectToString$1;

  var _Symbol$1=_Symbol$3,getRawTag=_getRawTag,objectToString=_objectToString;/** `Object#toString` result references. */var nullTag='[object Null]',undefinedTag='[object Undefined]';/** Built-in value references. */var symToStringTag=_Symbol$1?_Symbol$1.toStringTag:undefined;/**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */function baseGetTag$2(value){if(value==null){return value===undefined?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}var _baseGetTag=baseGetTag$2;

  function isObjectLike$2(value){return value!=null&&_typeof(value)=='object';}var isObjectLike_1=isObjectLike$2;

  var baseGetTag$1=_baseGetTag,isObjectLike$1=isObjectLike_1;/** `Object#toString` result references. */var symbolTag='[object Symbol]';/**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */function isSymbol$2(value){return _typeof(value)=='symbol'||isObjectLike$1(value)&&baseGetTag$1(value)==symbolTag;}var isSymbol_1=isSymbol$2;

  var _Symbol=_Symbol$3,arrayMap=_arrayMap,isArray=isArray_1,isSymbol$1=isSymbol_1;/** Used as references for various `Number` constants. */var INFINITY$1=1/0;/** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol?_Symbol.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */function baseToString$2(value){// Exit early for strings to avoid a performance hit in some environments.
  if(typeof value=='string'){return value;}if(isArray(value)){// Recursively convert values (susceptible to call stack limits).
  return arrayMap(value,baseToString$2)+'';}if(isSymbol$1(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY$1?'-0':result;}var _baseToString=baseToString$2;

  function baseSlice$1(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}var _baseSlice=baseSlice$1;

  var baseSlice=_baseSlice;/**
   * Casts `array` to a slice if it's needed.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {number} start The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the cast slice.
   */function castSlice$1(array,start,end){var length=array.length;end=end===undefined?length:end;return !start&&end>=length?array:baseSlice(array,start,end);}var _castSlice=castSlice$1;

  var rsAstralRange$2="\\ud800-\\udfff",rsComboMarksRange$2="\\u0300-\\u036f",reComboHalfMarksRange$2="\\ufe20-\\ufe2f",rsComboSymbolsRange$2="\\u20d0-\\u20ff",rsComboRange$2=rsComboMarksRange$2+reComboHalfMarksRange$2+rsComboSymbolsRange$2,rsVarRange$2="\\ufe0e\\ufe0f";/** Used to compose unicode capture groups. */var rsZWJ$2="\\u200d";/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasUnicode=RegExp('['+rsZWJ$2+rsAstralRange$2+rsComboRange$2+rsVarRange$2+']');/**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */function hasUnicode$3(string){return reHasUnicode.test(string);}var _hasUnicode=hasUnicode$3;

  function isObject$2(value){var type=_typeof(value);return value!=null&&(type=='object'||type=='function');}var isObject_1=isObject$2;

  var baseGetTag=_baseGetTag,isObjectLike=isObjectLike_1;/** `Object#toString` result references. */var regexpTag='[object RegExp]';/**
   * The base implementation of `_.isRegExp` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
   */function baseIsRegExp$1(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}var _baseIsRegExp=baseIsRegExp$1;

  function baseUnary$1(func){return function(value){return func(value);};}var _baseUnary=baseUnary$1;

  var _nodeUtil = {exports: {}};

  (function(module,exports){var freeGlobal=_freeGlobal;/** Detect free variable `exports`. */var freeExports=exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&'object'=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{// Use `util.types` for Node.js 10+.
  var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}// Legacy `process.binding('util')` for Node.js < 10.
  return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();module.exports=nodeUtil;})(_nodeUtil,_nodeUtil.exports);

  var baseIsRegExp=_baseIsRegExp,baseUnary=_baseUnary,nodeUtil=_nodeUtil.exports;/* Node.js helper references. */var nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp;/**
   * Checks if `value` is classified as a `RegExp` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
   * @example
   *
   * _.isRegExp(/abc/);
   * // => true
   *
   * _.isRegExp('/abc/');
   * // => false
   */var isRegExp$1=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;var isRegExp_1=isRegExp$1;

  function baseProperty$1(key){return function(object){return object==null?undefined:object[key];};}var _baseProperty=baseProperty$1;

  var baseProperty=_baseProperty;/**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */var asciiSize$1=baseProperty('length');var _asciiSize=asciiSize$1;

  var rsAstralRange$1="\\ud800-\\udfff",rsComboMarksRange$1="\\u0300-\\u036f",reComboHalfMarksRange$1="\\ufe20-\\ufe2f",rsComboSymbolsRange$1="\\u20d0-\\u20ff",rsComboRange$1=rsComboMarksRange$1+reComboHalfMarksRange$1+rsComboSymbolsRange$1,rsVarRange$1="\\ufe0e\\ufe0f";/** Used to compose unicode capture groups. */var rsAstral$1='['+rsAstralRange$1+']',rsCombo$1='['+rsComboRange$1+']',rsFitz$1="\\ud83c[\\udffb-\\udfff]",rsModifier$1='(?:'+rsCombo$1+'|'+rsFitz$1+')',rsNonAstral$1='[^'+rsAstralRange$1+']',rsRegional$1="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair$1="[\\ud800-\\udbff][\\udc00-\\udfff]",rsZWJ$1="\\u200d";/** Used to compose unicode regexes. */var reOptMod$1=rsModifier$1+'?',rsOptVar$1='['+rsVarRange$1+']?',rsOptJoin$1='(?:'+rsZWJ$1+'(?:'+[rsNonAstral$1,rsRegional$1,rsSurrPair$1].join('|')+')'+rsOptVar$1+reOptMod$1+')*',rsSeq$1=rsOptVar$1+reOptMod$1+rsOptJoin$1,rsSymbol$1='(?:'+[rsNonAstral$1+rsCombo$1+'?',rsCombo$1,rsRegional$1,rsSurrPair$1,rsAstral$1].join('|')+')';/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode$1=RegExp(rsFitz$1+'(?='+rsFitz$1+')|'+rsSymbol$1+rsSeq$1,'g');/**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */function unicodeSize$1(string){var result=reUnicode$1.lastIndex=0;while(reUnicode$1.test(string)){++result;}return result;}var _unicodeSize=unicodeSize$1;

  var asciiSize=_asciiSize,hasUnicode$2=_hasUnicode,unicodeSize=_unicodeSize;/**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */function stringSize$1(string){return hasUnicode$2(string)?unicodeSize(string):asciiSize(string);}var _stringSize=stringSize$1;

  function asciiToArray$1(string){return string.split('');}var _asciiToArray=asciiToArray$1;

  var rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f",reComboHalfMarksRange="\\ufe20-\\ufe2f",rsComboSymbolsRange="\\u20d0-\\u20ff",rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsVarRange="\\ufe0e\\ufe0f";/** Used to compose unicode capture groups. */var rsAstral='['+rsAstralRange+']',rsCombo='['+rsComboRange+']',rsFitz="\\ud83c[\\udffb-\\udfff]",rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",rsZWJ="\\u200d";/** Used to compose unicode regexes. */var reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');/**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function unicodeToArray$1(string){return string.match(reUnicode)||[];}var _unicodeToArray=unicodeToArray$1;

  var asciiToArray=_asciiToArray,hasUnicode$1=_hasUnicode,unicodeToArray=_unicodeToArray;/**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */function stringToArray$1(string){return hasUnicode$1(string)?unicodeToArray(string):asciiToArray(string);}var _stringToArray=stringToArray$1;

  var reWhitespace=/\s/;/**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */function trimmedEndIndex$1(string){var index=string.length;while(index--&&reWhitespace.test(string.charAt(index))){}return index;}var _trimmedEndIndex=trimmedEndIndex$1;

  var trimmedEndIndex=_trimmedEndIndex;/** Used to match leading whitespace. */var reTrimStart=/^\s+/;/**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */function baseTrim$1(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,''):string;}var _baseTrim=baseTrim$1;

  var baseTrim=_baseTrim,isObject$1=isObject_1,isSymbol=isSymbol_1;/** Used as references for various `Number` constants. */var NAN=0/0;/** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;/** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i;/** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i;/** Built-in method references without a dependency on `root`. */var freeParseInt=parseInt;/**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */function toNumber$1(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject$1(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject$1(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}var toNumber_1=toNumber$1;

  var toNumber=toNumber_1;/** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_INTEGER=1.7976931348623157e+308;/**
   * Converts `value` to a finite number.
   *
   * @static
   * @memberOf _
   * @since 4.12.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted number.
   * @example
   *
   * _.toFinite(3.2);
   * // => 3.2
   *
   * _.toFinite(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toFinite(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toFinite('3.2');
   * // => 3.2
   */function toFinite$1(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}var toFinite_1=toFinite$1;

  var toFinite=toFinite_1;/**
   * Converts `value` to an integer.
   *
   * **Note:** This method is loosely based on
   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted integer.
   * @example
   *
   * _.toInteger(3.2);
   * // => 3
   *
   * _.toInteger(Number.MIN_VALUE);
   * // => 0
   *
   * _.toInteger(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toInteger('3.2');
   * // => 3
   */function toInteger$1(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}var toInteger_1=toInteger$1;

  var baseToString$1=_baseToString;/**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */function toString$3(value){return value==null?'':baseToString$1(value);}var toString_1=toString$3;

  var baseToString=_baseToString,castSlice=_castSlice,hasUnicode=_hasUnicode,isObject=isObject_1,isRegExp=isRegExp_1,stringSize=_stringSize,stringToArray=_stringToArray,toInteger=toInteger_1,toString$2=toString_1;/** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';/** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/;/**
   * Truncates `string` if it's longer than the given maximum string length.
   * The last characters of the truncated string are replaced with the omission
   * string which defaults to "...".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category String
   * @param {string} [string=''] The string to truncate.
   * @param {Object} [options={}] The options object.
   * @param {number} [options.length=30] The maximum string length.
   * @param {string} [options.omission='...'] The string to indicate text is omitted.
   * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
   * @returns {string} Returns the truncated string.
   * @example
   *
   * _.truncate('hi-diddly-ho there, neighborino');
   * // => 'hi-diddly-ho there, neighbo...'
   *
   * _.truncate('hi-diddly-ho there, neighborino', {
   *   'length': 24,
   *   'separator': ' '
   * });
   * // => 'hi-diddly-ho there,...'
   *
   * _.truncate('hi-diddly-ho there, neighborino', {
   *   'length': 24,
   *   'separator': /,? +/
   * });
   * // => 'hi-diddly-ho there...'
   *
   * _.truncate('hi-diddly-ho there, neighborino', {
   *   'omission': ' [...]'
   * });
   * // => 'hi-diddly-ho there, neig [...]'
   */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString$2(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString$2(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}var truncate_1=truncate;

  var toString$1=toString_1;/** Used to generate unique IDs. */var idCounter=0;/**
   * Generates a unique ID. If `prefix` is given, the ID is appended to it.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {string} [prefix=''] The value to prefix the ID with.
   * @returns {string} Returns the unique ID.
   * @example
   *
   * _.uniqueId('contact_');
   * // => 'contact_104'
   *
   * _.uniqueId();
   * // => '105'
   */function uniqueId(prefix){var id=++idCounter;return toString$1(prefix)+id;}var uniqueId_1=uniqueId;

  var TvProgram=function TvProgram(el){var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{width:'auto'};var _opts$width=opts.width,width=_opts$width===void 0?'auto':_opts$width;// === DOM & VARS ===
  var DOM={};DOM.module=el||document.querySelector('.m-tv-program');DOM.wrapper=DOM.module.querySelector('.tv-program-wrapper');DOM.formDate=DOM.module.querySelector('.form-box form');DOM.labelDate=DOM.formDate.querySelector('label[for="input-date"]');DOM.labelSelect=DOM.formDate.querySelector('label[for="select-genre"]');DOM.inputDate=DOM.formDate.querySelector('input[type="date"]');DOM.selectGenre=DOM.formDate.querySelector('select[name="genre"]');DOM.buttonSend=DOM.formDate.querySelector('.button-send');DOM.tvProgramBox=DOM.module.querySelector('.tv-program-box');DOM.filterContainer=DOM.tvProgramBox.querySelector('.filter-container');DOM.dummyFilterItem=DOM.filterContainer.querySelector('.filtr-item');var id=uniqueId_1();var filterizr;// === INIT =========
  // https://www.tvmaze.com/api
  // https://yiotis.net/filterizr/#/documentation/vanilla/options
  var init=function init(){console.log('Modul: TV Program');var currentDate=new Date().toISOString().substring(0,10);// moment().format('YYYY-MM-DD');
  if(width==='auto'){DOM.wrapper.classList.add('container');DOM.wrapper.classList.remove('container-fluid');}else if(width==='full'){DOM.wrapper.classList.add('container-fluid');DOM.wrapper.classList.remove('container');}DOM.labelDate.htmlFor=DOM.inputDate.id="input-date-".concat(id);DOM.labelSelect.htmlFor=DOM.selectGenre.id="input-select-".concat(id);DOM.inputDate.value=currentDate;DOM.selectGenre.addEventListener('change',onChangeSelectGenre);DOM.formDate.addEventListener('submit',onSubmitForm);console.log(currentDate);fetchTvProgram(currentDate);};// === EVENTS / XHR =======
  var onSubmitForm=function onSubmitForm(e){e.preventDefault();var date=DOM.inputDate.value;fetchTvProgram(date);};var onChangeSelectGenre=function onChangeSelectGenre(e){var value=e.target.value;filterizr.filter(value);};var fetchTvProgram=function fetchTvProgram(date){fetch("https://api.tvmaze.com/schedule?country=US&date=".concat(date)).then(function(resp){return resp.json();}).then(function(data){return generateTvProgram(data);}).catch(function(err){return console.error(err);});};// === FUNCTIONS ====
  var generateTvProgram=function generateTvProgram(programs){DOM.filterContainer.textContent='';var allGenres=[];programs.forEach(function(program){var cardEl=createShowCard(program);allGenres.push.apply(allGenres,_toConsumableArray(getAllGenres(program.show.genres,allGenres)));DOM.filterContainer.appendChild(cardEl);});console.log(allGenres.sort());createGenreOptionEls(allGenres);filterizr=new Filterizr(DOM.filterContainer,{gutterPixels:20,layout:'sameWidth'});};var createGenreOptionEls=function createGenreOptionEls(genres){DOM.selectGenre.textContent='';var optionEl=document.createElement('option');optionEl.textContent='Alle';optionEl.value='all';DOM.selectGenre.appendChild(optionEl);genres.forEach(function(genre){var optionEl=document.createElement('option');optionEl.textContent=genre;optionEl.value=genre.toLowerCase();DOM.selectGenre.appendChild(optionEl);});};var getAllGenres=function getAllGenres(currents){var all=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return currents.filter(function(genre){return !all.includes(genre);});};var createShowCard=function createShowCard(program){var name=program.name,url=program.url,time=program.airtime,date=program.airdate,summary=program.summary;var _program$show=program.show,genres=_program$show.genres,showName=_program$show.name;// console.log(program.show.image);
  var imgPath=program.show.image!==null&&program.show.image.original!==null?program.show.image.original:'';var filterItemEl=DOM.dummyFilterItem.cloneNode(true);var cardEl=filterItemEl.querySelector('.card');var imgEl=cardEl.querySelector('img');var titleEl=cardEl.querySelector('.card-title');var textEl=cardEl.querySelector('.card-text');var timeEl=cardEl.querySelector('.time');var genreEl=cardEl.querySelector('.genre');var linkMoreEl=cardEl.querySelector('.link-more');var dateEl=cardEl.querySelector('.date');var channelEl=cardEl.querySelector('.channel');filterItemEl.dataset.category=genres.map(function(genre){return genre.toLowerCase();}).join(', ');imgEl.src=imgPath;titleEl.textContent=showName;textEl.innerHTML=truncate_1(summary,{length:150});genreEl.textContent=genres.join(', ');timeEl.textContent=time;linkMoreEl.href=url;dateEl.textContent=moment(date).format('DD.MM.YY');channelEl.textContent=truncate_1(name,{length:20});return filterItemEl;};init();};

  var TvProgramPage=function TvProgramPage(){var $$=function $$(qs){return Array.from(document.querySelectorAll(qs));};// === DOM & VARS ===
  var DOM={};DOM.tvPrograms=$$('.m-tv-program');// === INIT =========
  var init=function init(){console.log('init tv-program-page');DOM.tvPrograms.forEach(function(el){TvProgram(el,{width:'full'});});};// === EVENTS / XHR =======
  // === FUNCTIONS ====
  init();};

  (function(){// === INIT =========
  var init=function init(){var page=document.querySelector('body').dataset.page;SwitchDarkmode();switch(page){case'home':HomePage();break;case'contact':ContactPage();break;case'projekte/tv-programm':TvProgramPage();break;case'projekte/student-zitate':StudentZitatePage();break;case'projekte/horoskop':HoroskopPage();break;case'projekte/game-of-life':GameOfLifePage();break;case'ueber-uns':AboutUsPage();break;}};init();})();

})();
